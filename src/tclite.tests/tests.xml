<?xml version="1.0" encoding="utf-8"?>
<test-suite type="Assembly" id="3744" name="tclite.tests.dll" fullname="/home/charlie/dev/TestCentric/tc-lite/bin/Debug/netcoreapp3.1/tclite.tests.dll" testcasecount="2023">
  <properties>
    <property name="_PID" value="11545" />
    <property name="_APPDOMAIN" value="tclite.tests" />
  </properties>
  <test-suite type="TestFixture" id="1000" name="TestMessageWriterTests" fullname="NUnitLite.Tests.TestMessageWriterTests" testcasecount="2">
    <test-case id="1001" name="ConnectorIsWrittenWithSurroundingSpaces" fullname="NUnitLite.Tests.TestMessageWriterTests.ConnectorIsWrittenWithSurroundingSpaces" seed="607892308" />
    <test-case id="1002" name="PredicateIsWrittenWithTrailingSpace" fullname="NUnitLite.Tests.TestMessageWriterTests.PredicateIsWrittenWithTrailingSpace" seed="1910784178" />
  </test-suite>
  <test-suite type="TestFixture" id="1003" name="UniqueValues" fullname="TCLite.TestUtilities.UniqueValues" testcasecount="5">
    <test-suite type="ParameterizedMethod" id="1005" name="CountUniqueValuesTest" fullname="TCLite.TestUtilities.UniqueValues.CountUniqueValuesTest" testcasecount="5">
      <test-case id="1006" name="CountUniqueValuesTest(1,2,3,4,5)" fullname="TCLite.TestUtilities.UniqueValues.CountUniqueValuesTest(1,2,3,4,5)" seed="911229122" />
      <test-case id="1007" name="CountUniqueValuesTest(1,2,3,4,3)" fullname="TCLite.TestUtilities.UniqueValues.CountUniqueValuesTest(1,2,3,4,3)" seed="1320808963" />
      <test-case id="1008" name="CountUniqueValuesTest(1,1,1,1,1)" fullname="TCLite.TestUtilities.UniqueValues.CountUniqueValuesTest(1,1,1,1,1)" seed="1612076578" />
      <test-case id="1009" name="CountUniqueValuesTest(1,2,1,2,1)" fullname="TCLite.TestUtilities.UniqueValues.CountUniqueValuesTest(1,2,1,2,1)" seed="1421374896" />
      <test-case id="1010" name="CountUniqueValuesTest(1,1,1,2,2)" fullname="TCLite.TestUtilities.UniqueValues.CountUniqueValuesTest(1,1,1,2,2)" seed="1603389797" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="1011" name="CreateTestFilterTests" fullname="TCLite.Runner.CreateTestFilterTests" testcasecount="33">
    <test-suite type="ParameterizedMethod" id="1013" name="FilterCreation" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation" testcasecount="33">
      <test-case id="1014" name="FilterCreation(&quot;cat=Urgent&quot;,&quot;&lt;cat&gt;Urgent&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat=Urgent&quot;,&quot;&lt;cat&gt;Urgent&lt;/cat&gt;&quot;)" seed="608117920" />
      <test-case id="1015" name="FilterCreation(&quot;cat==Urgent&quot;,&quot;&lt;cat&gt;Urgent&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat==Urgent&quot;,&quot;&lt;cat&gt;Urgent&lt;/cat&gt;&quot;)" seed="1526764751" />
      <test-case id="1016" name="FilterCreation(&quot;cat==\'Urgent,+-!\'&quot;,&quot;&lt;cat&gt;Urgent,+-!&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat==\'Urgent,+-!\'&quot;,&quot;&lt;cat&gt;Urgent,+-!&lt;/cat&gt;&quot;)" seed="944936054" />
      <test-case id="1017" name="FilterCreation(&quot;cat!=Urgent&quot;,&quot;&lt;not&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat!=Urgent&quot;,&quot;&lt;not&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;/not&gt;&quot;)" seed="474554826" />
      <test-case id="1018" name="FilterCreation(&quot;cat!=\'Urgent,+-!\'&quot;,&quot;&lt;not&gt;&lt;cat&gt;Urgent,+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat!=\'Urgent,+-!\'&quot;,&quot;&lt;not&gt;&lt;cat&gt;Urgent,+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" seed="1299490235" />
      <test-case id="1019" name="FilterCreation(&quot;cat =~ Urgent&quot;,&quot;&lt;cat re=\&quot;1\&quot;&gt;Urgent&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat =~ Urgent&quot;,&quot;&lt;cat re=\&quot;1\&quot;&gt;Urgent&lt;/cat&gt;&quot;)" seed="1313734352" />
      <test-case id="1020" name="FilterCreation(&quot;cat =~ \'Urgent,+-!\'&quot;,&quot;&lt;cat re=\&quot;1\&quot;&gt;Urgent,+-!&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat =~ \'Urgent,+-!\'&quot;,&quot;&lt;cat re=\&quot;1\&quot;&gt;Urgent,+-!&lt;/cat&gt;&quot;)" seed="1299745205" />
      <test-case id="1021" name="FilterCreation(&quot;cat =~ \'Urgent,\\+-!\'&quot;,&quot;&lt;cat re=\&quot;1\&quot;&gt;Urgent,+-!&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat =~ \'Urgent,\\+-!\'&quot;,&quot;&lt;cat re=\&quot;1\&quot;&gt;Urgent,+-!&lt;/cat&gt;&quot;)" seed="1177895872" />
      <test-case id="1022" name="FilterCreation(&quot;cat =~ \'Urgent,\\\\+-!\'&quot;,&quot;&lt;cat re=\&quot;1\&quot;&gt;Urgent,\\+-!&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat =~ \'Urgent,\\\\+-!\'&quot;,&quot;&lt;cat re=\&quot;1\&quot;&gt;Urgent,\\+-!&lt;/cat&gt;&quot;)" seed="1689941460" />
      <test-case id="1023" name="FilterCreation(&quot;cat !~ Urgent&quot;,&quot;&lt;not&gt;&lt;cat re=\&quot;1\&quot;&gt;Urgent&lt;/cat&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat !~ Urgent&quot;,&quot;&lt;not&gt;&lt;cat re=\&quot;1\&quot;&gt;Urgent&lt;/cat&gt;&lt;/not&gt;&quot;)" seed="185245735" />
      <test-case id="1024" name="FilterCreation(&quot;cat !~ \'Urgent,+-!\'&quot;,&quot;&lt;not&gt;&lt;cat re=\&quot;1\&quot;&gt;Urgent,+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat !~ \'Urgent,+-!\'&quot;,&quot;&lt;not&gt;&lt;cat re=\&quot;1\&quot;&gt;Urgent,+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" seed="1706024086" />
      <test-case id="1025" name="FilterCreation(&quot;cat !~ \'Urgent,\\+-!\'&quot;,&quot;&lt;not&gt;&lt;cat re=\&quot;1\&quot;&gt;Urgent,+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat !~ \'Urgent,\\+-!\'&quot;,&quot;&lt;not&gt;&lt;cat re=\&quot;1\&quot;&gt;Urgent,+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" seed="424611772" />
      <test-case id="1026" name="FilterCreation(&quot;cat !~ \'Urgent,\\\\+-!\'&quot;,&quot;&lt;not&gt;&lt;cat re=\&quot;1\&quot;&gt;Urgent,\\+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat !~ \'Urgent,\\\\+-!\'&quot;,&quot;&lt;not&gt;&lt;cat re=\&quot;1\&quot;&gt;Urgent,\\+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" seed="1685461817" />
      <test-case id="1027" name="FilterCreation(&quot;cat = Urgent || cat = High&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;cat&gt;High&lt;/cat&gt;&lt;/or&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat = Urgent || cat = High&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;cat&gt;High&lt;/cat&gt;&lt;/or&gt;&quot;)" seed="439083544" />
      <test-case id="1028" name="FilterCreation(&quot;Priority == High&quot;,&quot;&lt;prop name=\&quot;Priority\&quot;&gt;High&lt;/prop&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;Priority == High&quot;,&quot;&lt;prop name=\&quot;Priority\&quot;&gt;High&lt;/prop&gt;&quot;)" seed="420408580" />
      <test-case id="1029" name="FilterCreation(&quot;Priority != Urgent&quot;,&quot;&lt;not&gt;&lt;prop name=\&quot;Priority\&quot;&gt;Urgent&lt;/prop&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;Priority != Urgent&quot;,&quot;&lt;not&gt;&lt;prop name=\&quot;Priority\&quot;&gt;Urgent&lt;/prop&gt;&lt;/not&gt;&quot;)" seed="1981213397" />
      <test-case id="1030" name="FilterCreation(&quot;Author =~ Jones&quot;,&quot;&lt;prop re=\&quot;1\&quot; name=\&quot;Author\&quot;&gt;Jones&lt;/prop&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;Author =~ Jones&quot;,&quot;&lt;prop re=\&quot;1\&quot; name=\&quot;Author\&quot;&gt;Jones&lt;/prop&gt;&quot;)" seed="489341243" />
      <test-case id="1031" name="FilterCreation(&quot;Author !~ Jones&quot;,&quot;&lt;not&gt;&lt;prop re=\&quot;1\&quot; name=\&quot;Author\&quot;&gt;Jones&lt;/prop&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;Author !~ Jones&quot;,&quot;&lt;not&gt;&lt;prop re=\&quot;1\&quot; name=\&quot;Author\&quot;&gt;Jones&lt;/prop&gt;&lt;/not&gt;&quot;)" seed="271678470" />
      <test-case id="1032" name="FilterCreation(&quot;method=TestMethod&quot;,&quot;&lt;method&gt;TestMethod&lt;/method&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;method=TestMethod&quot;,&quot;&lt;method&gt;TestMethod&lt;/method&gt;&quot;)" seed="2002869628" />
      <test-case id="1033" name="FilterCreation(&quot;method=Test1||method=Test2||method=Test3&quot;,&quot;&lt;or&gt;&lt;method&gt;Test1&lt;/method&gt;&lt;method&gt;Test2&lt;/method&gt;&lt;method&gt;Test3&lt;/method&gt;&lt;/or&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;method=Test1||method=Test2||method=Test3&quot;,&quot;&lt;or&gt;&lt;method&gt;Test1&lt;/method&gt;&lt;method&gt;Test2&lt;/method&gt;&lt;method&gt;Test3&lt;/method&gt;&lt;/or&gt;&quot;)" seed="693819194" />
      <test-case id="1034" name="FilterCreation(&quot;test=\'My.Test.Fixture.Method(42)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(42)&lt;/test&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;test=\'My.Test.Fixture.Method(42)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(42)&lt;/test&gt;&quot;)" seed="1571538893" />
      <test-case id="1035" name="FilterCreation(&quot;test=\'My.Test.Fixture.Method(\&quot;xyz\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(\&quot;xyz\&quot;)&lt;/test&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;test=\'My.Test.Fixture.Method(\&quot;xyz\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(\&quot;xyz\&quot;)&lt;/test&gt;&quot;)" seed="161022540" />
      <test-case id="1036" name="FilterCreation(&quot;test=\'My.Test.Fixture.Method(\&quot;abc\\\'s\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(\&quot;abc\'s\&quot;)&lt;/test&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;test=\'My.Test.Fixture.Method(\&quot;abc\\\'s\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(\&quot;abc\'s\&quot;)&lt;/test&gt;&quot;)" seed="1552319583" />
      <test-case id="1037" name="FilterCreation(&quot;test=\'My.Test.Fixture.Method(\&quot;x&amp;y&amp;z\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(\&quot;x&amp;amp;y&amp;amp;z\&quot;)&lt;/test&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;test=\'My.Test.Fixture.Method(\&quot;x&amp;y&amp;z\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(\&quot;x&amp;amp;y&amp;amp;z\&quot;)&lt;/test&gt;&quot;)" seed="527420717" />
      <test-case id="1038" name="FilterCreation(&quot;test=\'My.Test.Fixture.Method(\&quot;&lt;xyz&gt;\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(\&quot;&amp;lt;xyz&amp;gt;\&quot;)&lt;/test&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;test=\'My.Test.Fixture.Method(\&quot;&lt;xyz&gt;\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(\&quot;&amp;lt;xyz&amp;gt;\&quot;)&lt;/test&gt;&quot;)" seed="137071481" />
      <test-case id="1039" name="FilterCreation(&quot;cat==Urgent &amp;&amp; test==\'My.Tests\'&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/and&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat==Urgent &amp;&amp; test==\'My.Tests\'&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/and&gt;&quot;)" seed="999861908" />
      <test-case id="1040" name="FilterCreation(&quot;cat==Urgent and test==\'My.Tests\'&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/and&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat==Urgent and test==\'My.Tests\'&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/and&gt;&quot;)" seed="1542979443" />
      <test-case id="1041" name="FilterCreation(&quot;cat==Urgent || test==\'My.Tests\'&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/or&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat==Urgent || test==\'My.Tests\'&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/or&gt;&quot;)" seed="654017406" />
      <test-case id="1042" name="FilterCreation(&quot;cat==Urgent or test==\'My.Tests\'&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/or&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat==Urgent or test==\'My.Tests\'&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/or&gt;&quot;)" seed="1023675682" />
      <test-case id="1043" name="FilterCreation(&quot;cat==Urgent || test==\'My.Tests\' &amp;&amp; cat == high&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;and&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/and&gt;&lt;/or&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat==Urgent || test==\'My.Tests\' &amp;&amp; cat == high&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;and&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/and&gt;&lt;/or&gt;&quot;)" seed="260664457" />
      <test-case id="1044" name="FilterCreation(&quot;cat==Urgent &amp;&amp; test==\'My.Tests\' || cat == high&quot;,&quot;&lt;or&gt;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/and&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/or&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat==Urgent &amp;&amp; test==\'My.Tests\' || cat == high&quot;,&quot;&lt;or&gt;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/and&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/or&gt;&quot;)" seed="2083244016" />
      <test-case id="1045" name="FilterCreation(&quot;cat==Urgent &amp;&amp; (test==\'My.Tests\' || cat == high)&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;or&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/or&gt;&lt;/and&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat==Urgent &amp;&amp; (test==\'My.Tests\' || cat == high)&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;or&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/or&gt;&lt;/and&gt;&quot;)" seed="977921110" />
      <test-case id="1046" name="FilterCreation(&quot;cat==Urgent &amp;&amp; !(test==\'My.Tests\' || cat == high)&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;not&gt;&lt;or&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/or&gt;&lt;/not&gt;&lt;/and&gt;&quot;)" fullname="TCLite.Runner.CreateTestFilterTests.FilterCreation(&quot;cat==Urgent &amp;&amp; !(test==\'My.Tests\' || cat == high)&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;not&gt;&lt;or&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/or&gt;&lt;/not&gt;&lt;/and&gt;&quot;)" seed="953277173" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="1047" name="TestSelectionParserTests" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests" testcasecount="37">
    <test-suite type="ParameterizedMethod" id="1049" name="TestParser" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser" testcasecount="33">
      <test-case id="1050" name="TestParser(&quot;cat=Urgent&quot;,&quot;&lt;cat&gt;Urgent&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat=Urgent&quot;,&quot;&lt;cat&gt;Urgent&lt;/cat&gt;&quot;)" seed="656331569" />
      <test-case id="1051" name="TestParser(&quot;cat==Urgent&quot;,&quot;&lt;cat&gt;Urgent&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat==Urgent&quot;,&quot;&lt;cat&gt;Urgent&lt;/cat&gt;&quot;)" seed="1150827831" />
      <test-case id="1052" name="TestParser(&quot;cat==\'Urgent,+-!\'&quot;,&quot;&lt;cat&gt;Urgent,+-!&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat==\'Urgent,+-!\'&quot;,&quot;&lt;cat&gt;Urgent,+-!&lt;/cat&gt;&quot;)" seed="1297385773" />
      <test-case id="1053" name="TestParser(&quot;cat!=Urgent&quot;,&quot;&lt;not&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat!=Urgent&quot;,&quot;&lt;not&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;/not&gt;&quot;)" seed="1545833833" />
      <test-case id="1054" name="TestParser(&quot;cat!=\'Urgent,+-!\'&quot;,&quot;&lt;not&gt;&lt;cat&gt;Urgent,+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat!=\'Urgent,+-!\'&quot;,&quot;&lt;not&gt;&lt;cat&gt;Urgent,+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" seed="204390957" />
      <test-case id="1055" name="TestParser(&quot;cat =~ Urgent&quot;,&quot;&lt;cat re=\'1\'&gt;Urgent&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat =~ Urgent&quot;,&quot;&lt;cat re=\'1\'&gt;Urgent&lt;/cat&gt;&quot;)" seed="199777270" />
      <test-case id="1056" name="TestParser(&quot;cat =~ \'Urgent,+-!\'&quot;,&quot;&lt;cat re=\'1\'&gt;Urgent,+-!&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat =~ \'Urgent,+-!\'&quot;,&quot;&lt;cat re=\'1\'&gt;Urgent,+-!&lt;/cat&gt;&quot;)" seed="1340473438" />
      <test-case id="1057" name="TestParser(&quot;cat =~ \'Urgent,\\+-!\'&quot;,&quot;&lt;cat re=\'1\'&gt;Urgent,+-!&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat =~ \'Urgent,\\+-!\'&quot;,&quot;&lt;cat re=\'1\'&gt;Urgent,+-!&lt;/cat&gt;&quot;)" seed="1886722212" />
      <test-case id="1058" name="TestParser(&quot;cat =~ \'Urgent,\\\\+-!\'&quot;,&quot;&lt;cat re=\'1\'&gt;Urgent,\\+-!&lt;/cat&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat =~ \'Urgent,\\\\+-!\'&quot;,&quot;&lt;cat re=\'1\'&gt;Urgent,\\+-!&lt;/cat&gt;&quot;)" seed="1404372552" />
      <test-case id="1059" name="TestParser(&quot;cat !~ Urgent&quot;,&quot;&lt;not&gt;&lt;cat re=\'1\'&gt;Urgent&lt;/cat&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat !~ Urgent&quot;,&quot;&lt;not&gt;&lt;cat re=\'1\'&gt;Urgent&lt;/cat&gt;&lt;/not&gt;&quot;)" seed="282650547" />
      <test-case id="1060" name="TestParser(&quot;cat !~ \'Urgent,+-!\'&quot;,&quot;&lt;not&gt;&lt;cat re=\'1\'&gt;Urgent,+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat !~ \'Urgent,+-!\'&quot;,&quot;&lt;not&gt;&lt;cat re=\'1\'&gt;Urgent,+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" seed="1269309361" />
      <test-case id="1061" name="TestParser(&quot;cat !~ \'Urgent,\\+-!\'&quot;,&quot;&lt;not&gt;&lt;cat re=\'1\'&gt;Urgent,+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat !~ \'Urgent,\\+-!\'&quot;,&quot;&lt;not&gt;&lt;cat re=\'1\'&gt;Urgent,+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" seed="1174836382" />
      <test-case id="1062" name="TestParser(&quot;cat !~ \'Urgent,\\\\+-!\'&quot;,&quot;&lt;not&gt;&lt;cat re=\'1\'&gt;Urgent,\\+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat !~ \'Urgent,\\\\+-!\'&quot;,&quot;&lt;not&gt;&lt;cat re=\'1\'&gt;Urgent,\\+-!&lt;/cat&gt;&lt;/not&gt;&quot;)" seed="77943403" />
      <test-case id="1063" name="TestParser(&quot;cat = Urgent || cat = High&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;cat&gt;High&lt;/cat&gt;&lt;/or&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat = Urgent || cat = High&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;cat&gt;High&lt;/cat&gt;&lt;/or&gt;&quot;)" seed="1663088603" />
      <test-case id="1064" name="TestParser(&quot;Priority == High&quot;,&quot;&lt;prop name=\'Priority\'&gt;High&lt;/prop&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;Priority == High&quot;,&quot;&lt;prop name=\'Priority\'&gt;High&lt;/prop&gt;&quot;)" seed="1167834062" />
      <test-case id="1065" name="TestParser(&quot;Priority != Urgent&quot;,&quot;&lt;not&gt;&lt;prop name=\'Priority\'&gt;Urgent&lt;/prop&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;Priority != Urgent&quot;,&quot;&lt;not&gt;&lt;prop name=\'Priority\'&gt;Urgent&lt;/prop&gt;&lt;/not&gt;&quot;)" seed="187483728" />
      <test-case id="1066" name="TestParser(&quot;Author =~ Jones&quot;,&quot;&lt;prop name=\'Author\' re=\'1\'&gt;Jones&lt;/prop&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;Author =~ Jones&quot;,&quot;&lt;prop name=\'Author\' re=\'1\'&gt;Jones&lt;/prop&gt;&quot;)" seed="2077054428" />
      <test-case id="1067" name="TestParser(&quot;Author !~ Jones&quot;,&quot;&lt;not&gt;&lt;prop name=\'Author\' re=\'1\'&gt;Jones&lt;/prop&gt;&lt;/not&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;Author !~ Jones&quot;,&quot;&lt;not&gt;&lt;prop name=\'Author\' re=\'1\'&gt;Jones&lt;/prop&gt;&lt;/not&gt;&quot;)" seed="421887879" />
      <test-case id="1068" name="TestParser(&quot;method=TestMethod&quot;,&quot;&lt;method&gt;TestMethod&lt;/method&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;method=TestMethod&quot;,&quot;&lt;method&gt;TestMethod&lt;/method&gt;&quot;)" seed="1049130493" />
      <test-case id="1069" name="TestParser(&quot;method=Test1||method=Test2||method=Test3&quot;,&quot;&lt;or&gt;&lt;method&gt;Test1&lt;/method&gt;&lt;method&gt;Test2&lt;/method&gt;&lt;method&gt;Test3&lt;/method&gt;&lt;/or&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;method=Test1||method=Test2||method=Test3&quot;,&quot;&lt;or&gt;&lt;method&gt;Test1&lt;/method&gt;&lt;method&gt;Test2&lt;/method&gt;&lt;method&gt;Test3&lt;/method&gt;&lt;/or&gt;&quot;)" seed="1756690597" />
      <test-case id="1070" name="TestParser(&quot;test=\'My.Test.Fixture.Method(42)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(42)&lt;/test&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;test=\'My.Test.Fixture.Method(42)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(42)&lt;/test&gt;&quot;)" seed="727555702" />
      <test-case id="1071" name="TestParser(&quot;test=\'My.Test.Fixture.Method(\&quot;xyz\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(&amp;quot;xyz&amp;quot;)&lt;/test&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;test=\'My.Test.Fixture.Method(\&quot;xyz\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(&amp;quot;xyz&amp;quot;)&lt;/test&gt;&quot;)" seed="31850904" />
      <test-case id="1072" name="TestParser(&quot;test=\'My.Test.Fixture.Method(\&quot;abc\\\'s\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(&amp;quot;abc&amp;apos;s&amp;quot;)&lt;/test&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;test=\'My.Test.Fixture.Method(\&quot;abc\\\'s\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(&amp;quot;abc&amp;apos;s&amp;quot;)&lt;/test&gt;&quot;)" seed="447095380" />
      <test-case id="1073" name="TestParser(&quot;test=\'My.Test.Fixture.Method(\&quot;x&amp;y&amp;z\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(&amp;quot;x&amp;amp;y&amp;amp;z&amp;quot;)&lt;/test&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;test=\'My.Test.Fixture.Method(\&quot;x&amp;y&amp;z\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(&amp;quot;x&amp;amp;y&amp;amp;z&amp;quot;)&lt;/test&gt;&quot;)" seed="2121928815" />
      <test-case id="1074" name="TestParser(&quot;test=\'My.Test.Fixture.Method(\&quot;&lt;xyz&gt;\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(&amp;quot;&amp;lt;xyz&amp;gt;&amp;quot;)&lt;/test&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;test=\'My.Test.Fixture.Method(\&quot;&lt;xyz&gt;\&quot;)\'&quot;,&quot;&lt;test&gt;My.Test.Fixture.Method(&amp;quot;&amp;lt;xyz&amp;gt;&amp;quot;)&lt;/test&gt;&quot;)" seed="417515337" />
      <test-case id="1075" name="TestParser(&quot;cat==Urgent &amp;&amp; test==\'My.Tests\'&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/and&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat==Urgent &amp;&amp; test==\'My.Tests\'&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/and&gt;&quot;)" seed="337483345" />
      <test-case id="1076" name="TestParser(&quot;cat==Urgent and test==\'My.Tests\'&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/and&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat==Urgent and test==\'My.Tests\'&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/and&gt;&quot;)" seed="299628327" />
      <test-case id="1077" name="TestParser(&quot;cat==Urgent || test==\'My.Tests\'&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/or&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat==Urgent || test==\'My.Tests\'&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/or&gt;&quot;)" seed="1918238556" />
      <test-case id="1078" name="TestParser(&quot;cat==Urgent or test==\'My.Tests\'&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/or&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat==Urgent or test==\'My.Tests\'&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/or&gt;&quot;)" seed="645727799" />
      <test-case id="1079" name="TestParser(&quot;cat==Urgent || test==\'My.Tests\' &amp;&amp; cat == high&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;and&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/and&gt;&lt;/or&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat==Urgent || test==\'My.Tests\' &amp;&amp; cat == high&quot;,&quot;&lt;or&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;and&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/and&gt;&lt;/or&gt;&quot;)" seed="154220190" />
      <test-case id="1080" name="TestParser(&quot;cat==Urgent &amp;&amp; test==\'My.Tests\' || cat == high&quot;,&quot;&lt;or&gt;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/and&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/or&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat==Urgent &amp;&amp; test==\'My.Tests\' || cat == high&quot;,&quot;&lt;or&gt;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;/and&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/or&gt;&quot;)" seed="1429277003" />
      <test-case id="1081" name="TestParser(&quot;cat==Urgent &amp;&amp; (test==\'My.Tests\' || cat == high)&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;or&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/or&gt;&lt;/and&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat==Urgent &amp;&amp; (test==\'My.Tests\' || cat == high)&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;or&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/or&gt;&lt;/and&gt;&quot;)" seed="249485366" />
      <test-case id="1082" name="TestParser(&quot;cat==Urgent &amp;&amp; !(test==\'My.Tests\' || cat == high)&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;not&gt;&lt;or&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/or&gt;&lt;/not&gt;&lt;/and&gt;&quot;)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser(&quot;cat==Urgent &amp;&amp; !(test==\'My.Tests\' || cat == high)&quot;,&quot;&lt;and&gt;&lt;cat&gt;Urgent&lt;/cat&gt;&lt;not&gt;&lt;or&gt;&lt;test&gt;My.Tests&lt;/test&gt;&lt;cat&gt;high&lt;/cat&gt;&lt;/or&gt;&lt;/not&gt;&lt;/and&gt;&quot;)" seed="728102976" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1084" name="TestParser_InvalidInput" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser_InvalidInput" testcasecount="4">
      <test-case id="1085" name="TestParser_InvalidInput(null,System.ArgumentNullException)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser_InvalidInput(null,System.ArgumentNullException)" seed="1618818246" />
      <test-case id="1086" name="TestParser_InvalidInput(&quot;&quot;,TCLite.Runner.TestSelection.TestSelectionParserException)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser_InvalidInput(&quot;&quot;,TCLite.Runner.TestSelection.TestSelectionParserException)" seed="1029130248" />
      <test-case id="1087" name="TestParser_InvalidInput(&quot;   &quot;,TCLite.Runner.TestSelection.TestSelectionParserException)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser_InvalidInput(&quot;   &quot;,TCLite.Runner.TestSelection.TestSelectionParserException)" seed="1435739360" />
      <test-case id="1088" name="TestParser_InvalidInput(&quot;  \t\t &quot;,TCLite.Runner.TestSelection.TestSelectionParserException)" fullname="TCLite.Runner.TestSelection.TestSelectionParserTests.TestParser_InvalidInput(&quot;  \t\t &quot;,TCLite.Runner.TestSelection.TestSelectionParserException)" seed="1270506454" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="1089" name="TokenizerTests" fullname="TCLite.Runner.TestSelection.TokenizerTests" testcasecount="13">
    <test-case id="1090" name="NullInputThrowsException" fullname="TCLite.Runner.TestSelection.TokenizerTests.NullInputThrowsException" seed="435379564" />
    <test-case id="1091" name="BlankStringReturnsEof" fullname="TCLite.Runner.TestSelection.TokenizerTests.BlankStringReturnsEof" seed="284950286" />
    <test-case id="1092" name="IdentifierTokens" fullname="TCLite.Runner.TestSelection.TokenizerTests.IdentifierTokens" seed="71901200" />
    <test-case id="1093" name="WordsInUnicode" fullname="TCLite.Runner.TestSelection.TokenizerTests.WordsInUnicode" seed="662396190" />
    <test-case id="1094" name="StringWithDoubleQuotes" fullname="TCLite.Runner.TestSelection.TokenizerTests.StringWithDoubleQuotes" seed="954580629" />
    <test-case id="1095" name="StringWithSingleQuotes" fullname="TCLite.Runner.TestSelection.TokenizerTests.StringWithSingleQuotes" seed="167166341" />
    <test-case id="1096" name="StringWithSlashes" fullname="TCLite.Runner.TestSelection.TokenizerTests.StringWithSlashes" seed="2025855640" />
    <test-case id="1097" name="StringMayContainParentheses" fullname="TCLite.Runner.TestSelection.TokenizerTests.StringMayContainParentheses" seed="283010222" />
    <test-case id="1098" name="StringsMayContainEscapedQuoteChar" fullname="TCLite.Runner.TestSelection.TokenizerTests.StringsMayContainEscapedQuoteChar" seed="1500067982" />
    <test-case id="1099" name="SymbolTokens_SingleChar" fullname="TCLite.Runner.TestSelection.TokenizerTests.SymbolTokens_SingleChar" seed="59128078" />
    <test-case id="1100" name="SymbolTokens_DoubleChar" fullname="TCLite.Runner.TestSelection.TokenizerTests.SymbolTokens_DoubleChar" seed="1484256952" />
    <test-case id="1101" name="MixedTokens_Simple" fullname="TCLite.Runner.TestSelection.TokenizerTests.MixedTokens_Simple" seed="375145381" />
    <test-case id="1102" name="MixedTokens_Complex" fullname="TCLite.Runner.TestSelection.TokenizerTests.MixedTokens_Complex" seed="466533678" />
  </test-suite>
  <test-suite type="TestFixture" id="1103" name="CommandLineOptionTests" fullname="TCLite.Runner.Tests.CommandLineOptionTests" testcasecount="49">
    <test-suite type="ParameterizedMethod" id="1105" name="BooleanOptions" fullname="TCLite.Runner.Tests.CommandLineOptionTests.BooleanOptions" testcasecount="8">
      <test-case id="1106" name="BooleanOptions(&quot;ShowHelp&quot;,&quot;--help&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.BooleanOptions(&quot;ShowHelp&quot;,&quot;--help&quot;)" seed="1094104901" />
      <test-case id="1107" name="BooleanOptions(&quot;ShowHelp&quot;,&quot;-h&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.BooleanOptions(&quot;ShowHelp&quot;,&quot;-h&quot;)" seed="1986260225" />
      <test-case id="1108" name="BooleanOptions(&quot;ShowVersion&quot;,&quot;--version&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.BooleanOptions(&quot;ShowVersion&quot;,&quot;--version&quot;)" seed="1034113523" />
      <test-case id="1109" name="BooleanOptions(&quot;ShowVersion&quot;,&quot;-V&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.BooleanOptions(&quot;ShowVersion&quot;,&quot;-V&quot;)" seed="1368714160" />
      <test-case id="1110" name="BooleanOptions(&quot;StopOnError&quot;,&quot;--stoponerror&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.BooleanOptions(&quot;StopOnError&quot;,&quot;--stoponerror&quot;)" seed="225721471" />
      <test-case id="1111" name="BooleanOptions(&quot;WaitBeforeExit&quot;,&quot;--wait&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.BooleanOptions(&quot;WaitBeforeExit&quot;,&quot;--wait&quot;)" seed="624480665" />
      <test-case id="1112" name="BooleanOptions(&quot;NoHeader&quot;,&quot;--noheader&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.BooleanOptions(&quot;NoHeader&quot;,&quot;--noheader&quot;)" seed="703732451" />
      <test-case id="1113" name="BooleanOptions(&quot;NoHeader&quot;,&quot;--noh&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.BooleanOptions(&quot;NoHeader&quot;,&quot;--noh&quot;)" seed="1322940605" />
    </test-suite>
    <test-suite type="GenericMethod" id="1115" name="ValidOptionValues" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues" testcasecount="20">
      <test-case id="1116" name="ValidOptionValues&lt;String&gt;(&quot;WhereClause&quot;,&quot;--where&quot;,&quot;cat==Fast&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;WhereClause&quot;,&quot;--where&quot;,&quot;cat==Fast&quot;)" seed="1128318496" />
      <test-case id="1117" name="ValidOptionValues&lt;String&gt;(&quot;DisplayTestLabels&quot;,&quot;--labels&quot;,&quot;Off&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;DisplayTestLabels&quot;,&quot;--labels&quot;,&quot;Off&quot;)" seed="2014391259" />
      <test-case id="1118" name="ValidOptionValues&lt;String&gt;(&quot;DisplayTestLabels&quot;,&quot;--labels&quot;,&quot;On&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;DisplayTestLabels&quot;,&quot;--labels&quot;,&quot;On&quot;)" seed="2047632590" />
      <test-case id="1119" name="ValidOptionValues&lt;String&gt;(&quot;DisplayTestLabels&quot;,&quot;--labels&quot;,&quot;Before&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;DisplayTestLabels&quot;,&quot;--labels&quot;,&quot;Before&quot;)" seed="1569718529" />
      <test-case id="1120" name="ValidOptionValues&lt;String&gt;(&quot;DisplayTestLabels&quot;,&quot;--labels&quot;,&quot;After&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;DisplayTestLabels&quot;,&quot;--labels&quot;,&quot;After&quot;)" seed="1240994413" />
      <test-case id="1121" name="ValidOptionValues&lt;String&gt;(&quot;OutFile&quot;,&quot;--out&quot;,&quot;output.txt&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;OutFile&quot;,&quot;--out&quot;,&quot;output.txt&quot;)" seed="1250152362" />
      <test-case id="1122" name="ValidOptionValues&lt;String&gt;(&quot;ErrFile&quot;,&quot;--err&quot;,&quot;error.txt&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;ErrFile&quot;,&quot;--err&quot;,&quot;error.txt&quot;)" seed="1000857191" />
      <test-case id="1123" name="ValidOptionValues&lt;String&gt;(&quot;WorkDirectory&quot;,&quot;--work&quot;,&quot;results&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;WorkDirectory&quot;,&quot;--work&quot;,&quot;results&quot;)" seed="1019823995" />
      <test-case id="1124" name="ValidOptionValues&lt;String&gt;(&quot;InternalTraceLevel&quot;,&quot;--trace&quot;,&quot;Off&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;InternalTraceLevel&quot;,&quot;--trace&quot;,&quot;Off&quot;)" seed="446733406" />
      <test-case id="1125" name="ValidOptionValues&lt;String&gt;(&quot;InternalTraceLevel&quot;,&quot;--trace&quot;,&quot;Error&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;InternalTraceLevel&quot;,&quot;--trace&quot;,&quot;Error&quot;)" seed="606608804" />
      <test-case id="1126" name="ValidOptionValues&lt;String&gt;(&quot;InternalTraceLevel&quot;,&quot;--trace&quot;,&quot;Warning&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;InternalTraceLevel&quot;,&quot;--trace&quot;,&quot;Warning&quot;)" seed="633958355" />
      <test-case id="1127" name="ValidOptionValues&lt;String&gt;(&quot;InternalTraceLevel&quot;,&quot;--trace&quot;,&quot;Info&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;InternalTraceLevel&quot;,&quot;--trace&quot;,&quot;Info&quot;)" seed="1879578349" />
      <test-case id="1128" name="ValidOptionValues&lt;String&gt;(&quot;InternalTraceLevel&quot;,&quot;--trace&quot;,&quot;Debug&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;InternalTraceLevel&quot;,&quot;--trace&quot;,&quot;Debug&quot;)" seed="1064460921" />
      <test-case id="1129" name="ValidOptionValues&lt;String&gt;(&quot;InternalTraceLevel&quot;,&quot;--trace&quot;,&quot;Verbose&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;InternalTraceLevel&quot;,&quot;--trace&quot;,&quot;Verbose&quot;)" seed="1641674864" />
      <test-case id="1130" name="ValidOptionValues&lt;String&gt;(&quot;ResultFile&quot;,&quot;--result&quot;,&quot;MyOwnResult.xml&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;ResultFile&quot;,&quot;--result&quot;,&quot;MyOwnResult.xml&quot;)" seed="136937593" />
      <test-case id="1131" name="ValidOptionValues&lt;String&gt;(&quot;ResultFormat&quot;,&quot;--format&quot;,&quot;nunit2&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;ResultFormat&quot;,&quot;--format&quot;,&quot;nunit2&quot;)" seed="977229293" />
      <test-case id="1132" name="ValidOptionValues&lt;String&gt;(&quot;ResultFormat&quot;,&quot;--format&quot;,&quot;nunit3&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;String&gt;(&quot;ResultFormat&quot;,&quot;--format&quot;,&quot;nunit3&quot;)" seed="1094294407" />
      <test-case id="1133" name="ValidOptionValues&lt;Int32&gt;(&quot;RandomSeed&quot;,&quot;--seed&quot;,123456789)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;Int32&gt;(&quot;RandomSeed&quot;,&quot;--seed&quot;,123456789)" seed="1920458720" />
      <test-case id="1134" name="ValidOptionValues&lt;Int32&gt;(&quot;DefaultTimeout&quot;,&quot;--timeout&quot;,2000)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;Int32&gt;(&quot;DefaultTimeout&quot;,&quot;--timeout&quot;,2000)" seed="2012168210" />
      <test-case id="1135" name="ValidOptionValues&lt;Int32&gt;(&quot;NumberOfTestWorkers&quot;,&quot;--workers&quot;,32)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.ValidOptionValues&lt;Int32&gt;(&quot;NumberOfTestWorkers&quot;,&quot;--workers&quot;,32)" seed="568723387" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1137" name="InvalidOptionValues" fullname="TCLite.Runner.Tests.CommandLineOptionTests.InvalidOptionValues" testcasecount="6">
      <test-case id="1138" name="InvalidOptionValues(&quot;--labels&quot;,&quot;JUNK&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.InvalidOptionValues(&quot;--labels&quot;,&quot;JUNK&quot;)" seed="1838918593" />
      <test-case id="1139" name="InvalidOptionValues(&quot;--trace&quot;,&quot;JUNK&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.InvalidOptionValues(&quot;--trace&quot;,&quot;JUNK&quot;)" seed="1064931002" />
      <test-case id="1140" name="InvalidOptionValues(&quot;--format&quot;,&quot;xyz&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.InvalidOptionValues(&quot;--format&quot;,&quot;xyz&quot;)" seed="278355267" />
      <test-case id="1141" name="InvalidOptionValues(&quot;--seed&quot;,&quot;xxx&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.InvalidOptionValues(&quot;--seed&quot;,&quot;xxx&quot;)" seed="962855022" />
      <test-case id="1142" name="InvalidOptionValues(&quot;--timeout&quot;,&quot;ABC&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.InvalidOptionValues(&quot;--timeout&quot;,&quot;ABC&quot;)" seed="1543093175" />
      <test-case id="1143" name="InvalidOptionValues(&quot;--workers&quot;,&quot;Yes&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.InvalidOptionValues(&quot;--workers&quot;,&quot;Yes&quot;)" seed="179194121" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1145" name="MissingOptionValues" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MissingOptionValues" testcasecount="11">
      <test-case id="1146" name="MissingOptionValues(&quot;--where&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MissingOptionValues(&quot;--where&quot;)" seed="1207598936" />
      <test-case id="1147" name="MissingOptionValues(&quot;--labels&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MissingOptionValues(&quot;--labels&quot;)" seed="1590500425" />
      <test-case id="1148" name="MissingOptionValues(&quot;--out&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MissingOptionValues(&quot;--out&quot;)" seed="1362855490" />
      <test-case id="1149" name="MissingOptionValues(&quot;--err&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MissingOptionValues(&quot;--err&quot;)" seed="1506872463" />
      <test-case id="1150" name="MissingOptionValues(&quot;--work&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MissingOptionValues(&quot;--work&quot;)" seed="1393096775" />
      <test-case id="1151" name="MissingOptionValues(&quot;--trace&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MissingOptionValues(&quot;--trace&quot;)" seed="404649583" />
      <test-case id="1152" name="MissingOptionValues(&quot;--result&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MissingOptionValues(&quot;--result&quot;)" seed="732006909" />
      <test-case id="1153" name="MissingOptionValues(&quot;--format&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MissingOptionValues(&quot;--format&quot;)" seed="2095049496" />
      <test-case id="1154" name="MissingOptionValues(&quot;--seed&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MissingOptionValues(&quot;--seed&quot;)" seed="1454544715" />
      <test-case id="1155" name="MissingOptionValues(&quot;--timeout&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MissingOptionValues(&quot;--timeout&quot;)" seed="418042674" />
      <test-case id="1156" name="MissingOptionValues(&quot;--workers&quot;)" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MissingOptionValues(&quot;--workers&quot;)" seed="171752257" />
    </test-suite>
    <test-case id="1157" name="TestExploreOptionWithNoFileName" fullname="TCLite.Runner.Tests.CommandLineOptionTests.TestExploreOptionWithNoFileName" seed="1240161308" />
    <test-case id="1158" name="TestExploreOptionWithGoodFileName" fullname="TCLite.Runner.Tests.CommandLineOptionTests.TestExploreOptionWithGoodFileName" seed="1861069863" />
    <test-case id="1159" name="InvalidOptionProducesError" fullname="TCLite.Runner.Tests.CommandLineOptionTests.InvalidOptionProducesError" seed="1064497626" />
    <test-case id="1160" name="MultipleInvalidOptionsAreListedInErrorMessage" fullname="TCLite.Runner.Tests.CommandLineOptionTests.MultipleInvalidOptionsAreListedInErrorMessage" seed="1024998449" />
  </test-suite>
  <test-suite type="TestFixture" id="1161" name="MakeRunSettingsTests" fullname="TCLite.Runner.Tests.MakeRunSettingsTests" testcasecount="6">
    <test-suite type="GenericMethod" id="1163" name="CheckSetting" fullname="TCLite.Runner.Tests.MakeRunSettingsTests.CheckSetting" testcasecount="6">
      <test-case id="1164" name="CheckSetting&lt;Int32&gt;(&quot;--timeout=50&quot;,&quot;DefaultTimeout&quot;,50)" fullname="TCLite.Runner.Tests.MakeRunSettingsTests.CheckSetting&lt;Int32&gt;(&quot;--timeout=50&quot;,&quot;DefaultTimeout&quot;,50)" seed="1410669874" />
      <test-case id="1165" name="CheckSetting&lt;String&gt;(&quot;--work=results&quot;,&quot;WorkDirectory&quot;,&quot;/home/charlie/dev/TestCentric/tc-lite/src/tclite.tests/results&quot;)" fullname="TCLite.Runner.Tests.MakeRunSettingsTests.CheckSetting&lt;String&gt;(&quot;--work=results&quot;,&quot;WorkDirectory&quot;,&quot;/home/charlie/dev/TestCentric/tc-lite/src/tclite.tests/results&quot;)" seed="1053334576" />
      <test-case id="1166" name="CheckSetting&lt;Int32&gt;(&quot;--seed=1234&quot;,&quot;RandomSeed&quot;,1234)" fullname="TCLite.Runner.Tests.MakeRunSettingsTests.CheckSetting&lt;Int32&gt;(&quot;--seed=1234&quot;,&quot;RandomSeed&quot;,1234)" seed="1600002921" />
      <test-case id="1167" name="CheckSetting&lt;Int32&gt;(&quot;--workers=8&quot;,&quot;NumberOfTestWorkers&quot;,8)" fullname="TCLite.Runner.Tests.MakeRunSettingsTests.CheckSetting&lt;Int32&gt;(&quot;--workers=8&quot;,&quot;NumberOfTestWorkers&quot;,8)" seed="850298597" />
      <test-case id="1168" name="CheckSetting&lt;String&gt;(&quot;--trace=Debug&quot;,&quot;InternalTraceLevel&quot;,&quot;Debug&quot;)" fullname="TCLite.Runner.Tests.MakeRunSettingsTests.CheckSetting&lt;String&gt;(&quot;--trace=Debug&quot;,&quot;InternalTraceLevel&quot;,&quot;Debug&quot;)" seed="643050679" />
      <test-case id="1169" name="CheckSetting&lt;Boolean&gt;(&quot;--stoponerror&quot;,&quot;StopOnError&quot;,True)" fullname="TCLite.Runner.Tests.MakeRunSettingsTests.CheckSetting&lt;Boolean&gt;(&quot;--stoponerror&quot;,&quot;StopOnError&quot;,True)" seed="1549556404" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="1170" name="NUnit2XmlOutputWriterTests" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests" testcasecount="38">
    <test-case id="1171" name="Document_HasThreeChildren" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Document_HasThreeChildren" seed="1599913684" />
    <test-case id="1172" name="Document_FirstChildIsXmlDeclaration" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Document_FirstChildIsXmlDeclaration" seed="1849322632" />
    <test-case id="1173" name="Document_SecondChildIsComment" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Document_SecondChildIsComment" seed="56884230" />
    <test-case id="1174" name="Document_ThirdChildIsTestResults" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Document_ThirdChildIsTestResults" seed="274419753" />
    <test-case id="1175" name="Document_HasTestResults" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Document_HasTestResults" seed="452746398" />
    <test-case id="1176" name="TestResults_AssemblyPathIsCorrect" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestResults_AssemblyPathIsCorrect" seed="759796102" />
    <test-suite type="ParameterizedMethod" id="1178" name="TestResults_CounterIsCorrect" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestResults_CounterIsCorrect" testcasecount="8">
      <test-case id="1179" name="TestResults_CounterIsCorrect(&quot;total&quot;,11)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestResults_CounterIsCorrect(&quot;total&quot;,11)" seed="135009064" />
      <test-case id="1180" name="TestResults_CounterIsCorrect(&quot;errors&quot;,1)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestResults_CounterIsCorrect(&quot;errors&quot;,1)" seed="1631505659" />
      <test-case id="1181" name="TestResults_CounterIsCorrect(&quot;failures&quot;,1)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestResults_CounterIsCorrect(&quot;failures&quot;,1)" seed="63387494" />
      <test-case id="1182" name="TestResults_CounterIsCorrect(&quot;inconclusive&quot;,1)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestResults_CounterIsCorrect(&quot;inconclusive&quot;,1)" seed="1736035992" />
      <test-case id="1183" name="TestResults_CounterIsCorrect(&quot;not-run&quot;,3)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestResults_CounterIsCorrect(&quot;not-run&quot;,3)" seed="1084777568" />
      <test-case id="1184" name="TestResults_CounterIsCorrect(&quot;ignored&quot;,1)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestResults_CounterIsCorrect(&quot;ignored&quot;,1)" seed="26625354" />
      <test-case id="1185" name="TestResults_CounterIsCorrect(&quot;skipped&quot;,0)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestResults_CounterIsCorrect(&quot;skipped&quot;,0)" seed="1061800292" />
      <test-case id="1186" name="TestResults_CounterIsCorrect(&quot;invalid&quot;,2)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestResults_CounterIsCorrect(&quot;invalid&quot;,2)" seed="42553426" />
    </test-suite>
    <test-case id="1187" name="TestResults_HasValidDateAttribute" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestResults_HasValidDateAttribute" seed="1557840413" />
    <test-case id="1188" name="TestResults_HasValidTimeAttribute" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestResults_HasValidTimeAttribute" seed="1804452152" />
    <test-case id="1189" name="Environment_HasEnvironmentElement" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Environment_HasEnvironmentElement" seed="1087344590" />
    <test-suite type="ParameterizedMethod" id="1191" name="Environment_HasRequiredAttribute" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Environment_HasRequiredAttribute" testcasecount="8">
      <test-case id="1192" name="Environment_HasRequiredAttribute(&quot;nunit-version&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Environment_HasRequiredAttribute(&quot;nunit-version&quot;)" seed="1360995676" />
      <test-case id="1193" name="Environment_HasRequiredAttribute(&quot;clr-version&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Environment_HasRequiredAttribute(&quot;clr-version&quot;)" seed="229308772" />
      <test-case id="1194" name="Environment_HasRequiredAttribute(&quot;os-version&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Environment_HasRequiredAttribute(&quot;os-version&quot;)" seed="1147571440" />
      <test-case id="1195" name="Environment_HasRequiredAttribute(&quot;platform&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Environment_HasRequiredAttribute(&quot;platform&quot;)" seed="1116895072" />
      <test-case id="1196" name="Environment_HasRequiredAttribute(&quot;cwd&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Environment_HasRequiredAttribute(&quot;cwd&quot;)" seed="187130149" />
      <test-case id="1197" name="Environment_HasRequiredAttribute(&quot;machine-name&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Environment_HasRequiredAttribute(&quot;machine-name&quot;)" seed="1866378566" />
      <test-case id="1198" name="Environment_HasRequiredAttribute(&quot;user&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Environment_HasRequiredAttribute(&quot;user&quot;)" seed="805477036" />
      <test-case id="1199" name="Environment_HasRequiredAttribute(&quot;user-domain&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.Environment_HasRequiredAttribute(&quot;user-domain&quot;)" seed="2001616746" />
    </test-suite>
    <test-case id="1200" name="CultureInfo_HasCultureInfoElement" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.CultureInfo_HasCultureInfoElement" seed="59388857" />
    <test-suite type="ParameterizedMethod" id="1202" name="CultureInfo_HasRequiredAttribute" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.CultureInfo_HasRequiredAttribute" testcasecount="2">
      <test-case id="1203" name="CultureInfo_HasRequiredAttribute(&quot;current-culture&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.CultureInfo_HasRequiredAttribute(&quot;current-culture&quot;)" seed="947670584" />
      <test-case id="1204" name="CultureInfo_HasRequiredAttribute(&quot;current-uiculture&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.CultureInfo_HasRequiredAttribute(&quot;current-uiculture&quot;)" seed="1691208585" />
    </test-suite>
    <test-case id="1205" name="TestSuite_HasTestSuiteElement" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestSuite_HasTestSuiteElement" seed="428248719" />
    <test-suite type="ParameterizedMethod" id="1207" name="TestSuite_ExpectedAttribute" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestSuite_ExpectedAttribute" testcasecount="7">
      <test-case id="1208" name="TestSuite_ExpectedAttribute(&quot;type&quot;,&quot;TestFixture&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestSuite_ExpectedAttribute(&quot;type&quot;,&quot;TestFixture&quot;)" seed="11596426" />
      <test-case id="1209" name="TestSuite_ExpectedAttribute(&quot;name&quot;,&quot;MockTestFixture&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestSuite_ExpectedAttribute(&quot;name&quot;,&quot;MockTestFixture&quot;)" seed="825835993" />
      <test-case id="1210" name="TestSuite_ExpectedAttribute(&quot;description&quot;,&quot;Fake Test Fixture&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestSuite_ExpectedAttribute(&quot;description&quot;,&quot;Fake Test Fixture&quot;)" seed="112556425" />
      <test-case id="1211" name="TestSuite_ExpectedAttribute(&quot;executed&quot;,&quot;True&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestSuite_ExpectedAttribute(&quot;executed&quot;,&quot;True&quot;)" seed="900042496" />
      <test-case id="1212" name="TestSuite_ExpectedAttribute(&quot;result&quot;,&quot;Failure&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestSuite_ExpectedAttribute(&quot;result&quot;,&quot;Failure&quot;)" seed="777121364" />
      <test-case id="1213" name="TestSuite_ExpectedAttribute(&quot;success&quot;,&quot;False&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestSuite_ExpectedAttribute(&quot;success&quot;,&quot;False&quot;)" seed="1755168899" />
      <test-case id="1214" name="TestSuite_ExpectedAttribute(&quot;asserts&quot;,&quot;0&quot;)" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestSuite_ExpectedAttribute(&quot;asserts&quot;,&quot;0&quot;)" seed="1888661440" />
    </test-suite>
    <test-case id="1215" name="TestSuite_HasValidTimeAttribute" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestSuite_HasValidTimeAttribute" seed="1305971260" />
    <test-case id="1216" name="TestSuite_ResultIsFailure" fullname="TCLite.Runner.Tests.NUnit2XmlOutputWriterTests.TestSuite_ResultIsFailure" seed="1232452710" />
  </test-suite>
  <test-suite type="TestFixture" id="1217" name="AfterTest_SimpleConstraint" fullname="TCLite.Framework.Syntax.AfterTest_SimpleConstraint" testcasecount="2">
    <test-case id="1218" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AfterTest_SimpleConstraint.SyntaxTest.SupportedByStaticSyntax" seed="940350377" />
    <test-case id="1219" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AfterTest_SimpleConstraint.SyntaxTest.SupportedByConstraintBuilder" seed="1792337128" />
  </test-suite>
  <test-suite type="TestFixture" id="1220" name="AfterTest_ProperyTest" fullname="TCLite.Framework.Syntax.AfterTest_ProperyTest" testcasecount="2">
    <test-case id="1221" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AfterTest_ProperyTest.SyntaxTest.SupportedByStaticSyntax" seed="596997845" />
    <test-case id="1222" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AfterTest_ProperyTest.SyntaxTest.SupportedByConstraintBuilder" seed="463543837" />
  </test-suite>
  <test-suite type="TestFixture" id="1223" name="AfterTest_AndOperator" fullname="TCLite.Framework.Syntax.AfterTest_AndOperator" testcasecount="2">
    <test-case id="1224" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AfterTest_AndOperator.SyntaxTest.SupportedByStaticSyntax" seed="1391157221" />
    <test-case id="1225" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AfterTest_AndOperator.SyntaxTest.SupportedByConstraintBuilder" seed="829490329" />
  </test-suite>
  <test-suite type="TestFixture" id="1226" name="AfterSyntaxUsingAnonymousDelegates" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingAnonymousDelegates" testcasecount="8">
    <test-case id="1227" name="TrueTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingAnonymousDelegates.TrueTest" seed="1234458336" />
    <test-case id="1228" name="EqualToTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingAnonymousDelegates.EqualToTest" seed="1213535954" />
    <test-case id="1229" name="SameAsTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingAnonymousDelegates.SameAsTest" seed="799269571" />
    <test-case id="1230" name="GreaterTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingAnonymousDelegates.GreaterTest" seed="1021944200" />
    <test-case id="1231" name="HasMemberTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingAnonymousDelegates.HasMemberTest" seed="1614641683" />
    <test-case id="1232" name="NullTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingAnonymousDelegates.NullTest" seed="1753701369" />
    <test-case id="1233" name="TextTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingAnonymousDelegates.TextTest" seed="2113473633" />
    <test-case id="1234" name="ThrowsTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingAnonymousDelegates.ThrowsTest" seed="239007245" />
  </test-suite>
  <test-suite type="TestFixture" id="1235" name="AfterSyntaxUsingActualPassedByRef" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingActualPassedByRef" testcasecount="7">
    <test-case id="1236" name="TrueTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingActualPassedByRef.TrueTest" seed="620989825" />
    <test-case id="1237" name="EqualToTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingActualPassedByRef.EqualToTest" seed="1642962886" />
    <test-case id="1238" name="SameAsTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingActualPassedByRef.SameAsTest" seed="432661332" />
    <test-case id="1239" name="GreaterTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingActualPassedByRef.GreaterTest" seed="1412783535" />
    <test-case id="1240" name="HasMemberTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingActualPassedByRef.HasMemberTest" seed="2130427713" />
    <test-case id="1241" name="NullTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingActualPassedByRef.NullTest" seed="1398890841" />
    <test-case id="1242" name="TextTest" fullname="TCLite.Framework.Syntax.AfterSyntaxUsingActualPassedByRef.TextTest" seed="420286654" />
  </test-suite>
  <test-suite type="TestFixture" id="1243" name="ArbitraryConstraintMatching" fullname="TCLite.Framework.Syntax.ArbitraryConstraintMatching" testcasecount="5">
    <test-case id="1244" name="CanMatchCustomConstraint" fullname="TCLite.Framework.Syntax.ArbitraryConstraintMatching.CanMatchCustomConstraint" seed="393357541" />
    <test-case id="1245" name="CanMatchCustomConstraintAfterPrefix" fullname="TCLite.Framework.Syntax.ArbitraryConstraintMatching.CanMatchCustomConstraintAfterPrefix" seed="1959609165" />
    <test-case id="1246" name="CanMatchCustomConstraintsUnderAndOperator" fullname="TCLite.Framework.Syntax.ArbitraryConstraintMatching.CanMatchCustomConstraintsUnderAndOperator" seed="591284126" />
    <test-case id="1247" name="CanMatchPredicate" fullname="TCLite.Framework.Syntax.ArbitraryConstraintMatching.CanMatchPredicate" seed="1203256940" />
    <test-case id="1248" name="CanMatchLambda" fullname="TCLite.Framework.Syntax.ArbitraryConstraintMatching.CanMatchLambda" seed="51791068" />
  </test-suite>
  <test-suite type="TestFixture" id="1249" name="CollectionOrderedTest" fullname="TCLite.Framework.Syntax.CollectionOrderedTest" testcasecount="2">
    <test-case id="1250" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionOrderedTest.SyntaxTest.SupportedByStaticSyntax" seed="910199999" />
    <test-case id="1251" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionOrderedTest.SyntaxTest.SupportedByConstraintBuilder" seed="972221143" />
  </test-suite>
  <test-suite type="TestFixture" id="1252" name="CollectionOrderedTest_Descending" fullname="TCLite.Framework.Syntax.CollectionOrderedTest_Descending" testcasecount="2">
    <test-case id="1253" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionOrderedTest_Descending.SyntaxTest.SupportedByStaticSyntax" seed="1274066505" />
    <test-case id="1254" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionOrderedTest_Descending.SyntaxTest.SupportedByConstraintBuilder" seed="284678928" />
  </test-suite>
  <test-suite type="TestFixture" id="1255" name="CollectionOrderedTest_Comparer" fullname="TCLite.Framework.Syntax.CollectionOrderedTest_Comparer" testcasecount="2">
    <test-case id="1256" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionOrderedTest_Comparer.SyntaxTest.SupportedByStaticSyntax" seed="434868174" />
    <test-case id="1257" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionOrderedTest_Comparer.SyntaxTest.SupportedByConstraintBuilder" seed="1816662620" />
  </test-suite>
  <test-suite type="TestFixture" id="1258" name="CollectionOrderedTest_Comparer_Descending" fullname="TCLite.Framework.Syntax.CollectionOrderedTest_Comparer_Descending" testcasecount="2">
    <test-case id="1259" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionOrderedTest_Comparer_Descending.SyntaxTest.SupportedByStaticSyntax" seed="498480892" />
    <test-case id="1260" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionOrderedTest_Comparer_Descending.SyntaxTest.SupportedByConstraintBuilder" seed="2002375527" />
  </test-suite>
  <test-suite type="TestFixture" id="1261" name="CollectionOrderedByTest" fullname="TCLite.Framework.Syntax.CollectionOrderedByTest" testcasecount="2">
    <test-case id="1262" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionOrderedByTest.SyntaxTest.SupportedByStaticSyntax" seed="420645299" />
    <test-case id="1263" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionOrderedByTest.SyntaxTest.SupportedByConstraintBuilder" seed="584455291" />
  </test-suite>
  <test-suite type="TestFixture" id="1264" name="CollectionOrderedByTest_Descending" fullname="TCLite.Framework.Syntax.CollectionOrderedByTest_Descending" testcasecount="2">
    <test-case id="1265" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionOrderedByTest_Descending.SyntaxTest.SupportedByStaticSyntax" seed="550573595" />
    <test-case id="1266" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionOrderedByTest_Descending.SyntaxTest.SupportedByConstraintBuilder" seed="653351235" />
  </test-suite>
  <test-suite type="TestFixture" id="1267" name="CollectionOrderedByTest_Comparer" fullname="TCLite.Framework.Syntax.CollectionOrderedByTest_Comparer" testcasecount="2">
    <test-case id="1268" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionOrderedByTest_Comparer.SyntaxTest.SupportedByStaticSyntax" seed="943456575" />
    <test-case id="1269" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionOrderedByTest_Comparer.SyntaxTest.SupportedByConstraintBuilder" seed="1036888237" />
  </test-suite>
  <test-suite type="TestFixture" id="1270" name="CollectionOrderedByTest_Comparer_Descending" fullname="TCLite.Framework.Syntax.CollectionOrderedByTest_Comparer_Descending" testcasecount="2">
    <test-case id="1271" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionOrderedByTest_Comparer_Descending.SyntaxTest.SupportedByStaticSyntax" seed="1718502347" />
    <test-case id="1272" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionOrderedByTest_Comparer_Descending.SyntaxTest.SupportedByConstraintBuilder" seed="788080792" />
  </test-suite>
  <test-suite type="TestFixture" id="1273" name="CollectionContainsTest" fullname="TCLite.Framework.Syntax.CollectionContainsTest" testcasecount="2">
    <test-case id="1274" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionContainsTest.SyntaxTest.SupportedByStaticSyntax" seed="1407602933" />
    <test-case id="1275" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionContainsTest.SyntaxTest.SupportedByConstraintBuilder" seed="2073210031" />
  </test-suite>
  <test-suite type="TestFixture" id="1276" name="CollectionContainsTest_String" fullname="TCLite.Framework.Syntax.CollectionContainsTest_String" testcasecount="2">
    <test-case id="1277" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionContainsTest_String.SyntaxTest.SupportedByStaticSyntax" seed="76566902" />
    <test-case id="1278" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionContainsTest_String.SyntaxTest.SupportedByConstraintBuilder" seed="822030997" />
  </test-suite>
  <test-suite type="TestFixture" id="1279" name="CollectionContainsTest_Comparer" fullname="TCLite.Framework.Syntax.CollectionContainsTest_Comparer" testcasecount="4">
    <test-case id="1280" name="ComparerIsCalled" fullname="TCLite.Framework.Syntax.CollectionContainsTest_Comparer.ComparerIsCalled" seed="45606440" />
    <test-case id="1281" name="ComparerIsCalledInExpression" fullname="TCLite.Framework.Syntax.CollectionContainsTest_Comparer.ComparerIsCalledInExpression" seed="586828748" />
    <test-case id="1282" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionContainsTest_Comparer.SyntaxTest.SupportedByStaticSyntax" seed="1639050247" />
    <test-case id="1283" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionContainsTest_Comparer.SyntaxTest.SupportedByConstraintBuilder" seed="1404563257" />
  </test-suite>
  <test-suite type="TestFixture" id="1284" name="CollectionContainsTest_Comparer_String" fullname="TCLite.Framework.Syntax.CollectionContainsTest_Comparer_String" testcasecount="4">
    <test-case id="1285" name="ComparerIsCalled" fullname="TCLite.Framework.Syntax.CollectionContainsTest_Comparer_String.ComparerIsCalled" seed="344460032" />
    <test-case id="1286" name="ComparerIsCalledInExpression" fullname="TCLite.Framework.Syntax.CollectionContainsTest_Comparer_String.ComparerIsCalledInExpression" seed="342385364" />
    <test-case id="1287" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionContainsTest_Comparer_String.SyntaxTest.SupportedByStaticSyntax" seed="1905717374" />
    <test-case id="1288" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionContainsTest_Comparer_String.SyntaxTest.SupportedByConstraintBuilder" seed="2054564066" />
  </test-suite>
  <test-suite type="TestFixture" id="1289" name="CollectionMemberTest" fullname="TCLite.Framework.Syntax.CollectionMemberTest" testcasecount="2">
    <test-case id="1290" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionMemberTest.SyntaxTest.SupportedByStaticSyntax" seed="812166056" />
    <test-case id="1291" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionMemberTest.SyntaxTest.SupportedByConstraintBuilder" seed="546992836" />
  </test-suite>
  <test-suite type="TestFixture" id="1292" name="CollectionMemberTest_Comparer" fullname="TCLite.Framework.Syntax.CollectionMemberTest_Comparer" testcasecount="2">
    <test-case id="1293" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CollectionMemberTest_Comparer.SyntaxTest.SupportedByStaticSyntax" seed="1980211610" />
    <test-case id="1294" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CollectionMemberTest_Comparer.SyntaxTest.SupportedByConstraintBuilder" seed="5713719" />
  </test-suite>
  <test-suite type="TestFixture" id="1295" name="GreaterThanTest" fullname="TCLite.Framework.Syntax.GreaterThanTest" testcasecount="2">
    <test-case id="1296" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.GreaterThanTest.SyntaxTest.SupportedByStaticSyntax" seed="1407770544" />
    <test-case id="1297" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.GreaterThanTest.SyntaxTest.SupportedByConstraintBuilder" seed="1339366153" />
  </test-suite>
  <test-suite type="TestFixture" id="1298" name="GreaterThanOrEqualTest" fullname="TCLite.Framework.Syntax.GreaterThanOrEqualTest" testcasecount="2">
    <test-case id="1299" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.GreaterThanOrEqualTest.SyntaxTest.SupportedByStaticSyntax" seed="2066773977" />
    <test-case id="1300" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.GreaterThanOrEqualTest.SyntaxTest.SupportedByConstraintBuilder" seed="262237193" />
  </test-suite>
  <test-suite type="TestFixture" id="1301" name="AtLeastTest" fullname="TCLite.Framework.Syntax.AtLeastTest" testcasecount="2">
    <test-case id="1302" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AtLeastTest.SyntaxTest.SupportedByStaticSyntax" seed="2086953096" />
    <test-case id="1303" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AtLeastTest.SyntaxTest.SupportedByConstraintBuilder" seed="514590643" />
  </test-suite>
  <test-suite type="TestFixture" id="1304" name="LessThanTest" fullname="TCLite.Framework.Syntax.LessThanTest" testcasecount="2">
    <test-case id="1305" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.LessThanTest.SyntaxTest.SupportedByStaticSyntax" seed="587076026" />
    <test-case id="1306" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.LessThanTest.SyntaxTest.SupportedByConstraintBuilder" seed="1945462710" />
  </test-suite>
  <test-suite type="TestFixture" id="1307" name="LessThanOrEqualTest" fullname="TCLite.Framework.Syntax.LessThanOrEqualTest" testcasecount="2">
    <test-case id="1308" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.LessThanOrEqualTest.SyntaxTest.SupportedByStaticSyntax" seed="1255220477" />
    <test-case id="1309" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.LessThanOrEqualTest.SyntaxTest.SupportedByConstraintBuilder" seed="111098106" />
  </test-suite>
  <test-suite type="TestFixture" id="1310" name="AtMostTest" fullname="TCLite.Framework.Syntax.AtMostTest" testcasecount="2">
    <test-case id="1311" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AtMostTest.SyntaxTest.SupportedByStaticSyntax" seed="1965845593" />
    <test-case id="1312" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AtMostTest.SyntaxTest.SupportedByConstraintBuilder" seed="36534534" />
  </test-suite>
  <test-suite type="TestFixture" id="1313" name="EqualToTest" fullname="TCLite.Framework.Syntax.EqualToTest" testcasecount="2">
    <test-case id="1314" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.EqualToTest.SyntaxTest.SupportedByStaticSyntax" seed="1092389291" />
    <test-case id="1315" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.EqualToTest.SyntaxTest.SupportedByConstraintBuilder" seed="1926793744" />
  </test-suite>
  <test-suite type="TestFixture" id="1316" name="EqualToTest_IgnoreCase" fullname="TCLite.Framework.Syntax.EqualToTest_IgnoreCase" testcasecount="2">
    <test-case id="1317" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.EqualToTest_IgnoreCase.SyntaxTest.SupportedByStaticSyntax" seed="469326960" />
    <test-case id="1318" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.EqualToTest_IgnoreCase.SyntaxTest.SupportedByConstraintBuilder" seed="1093539476" />
  </test-suite>
  <test-suite type="TestFixture" id="1319" name="EqualToTest_WithinTolerance" fullname="TCLite.Framework.Syntax.EqualToTest_WithinTolerance" testcasecount="2">
    <test-case id="1320" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.EqualToTest_WithinTolerance.SyntaxTest.SupportedByStaticSyntax" seed="1827872141" />
    <test-case id="1321" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.EqualToTest_WithinTolerance.SyntaxTest.SupportedByConstraintBuilder" seed="1779689509" />
  </test-suite>
  <test-suite type="TestFixture" id="1322" name="EqualityTests" fullname="TCLite.Framework.Syntax.EqualityTests" testcasecount="5">
    <test-case id="1323" name="SimpleEqualityTests" fullname="TCLite.Framework.Syntax.EqualityTests.SimpleEqualityTests" seed="1133238255" />
    <test-case id="1324" name="EqualityTestsWithTolerance" fullname="TCLite.Framework.Syntax.EqualityTests.EqualityTestsWithTolerance" seed="2033882781" />
    <test-case id="1325" name="EqualityTestsWithTolerance_MixedFloatAndDouble" fullname="TCLite.Framework.Syntax.EqualityTests.EqualityTestsWithTolerance_MixedFloatAndDouble" seed="514717224" />
    <test-case id="1326" name="EqualityTestsWithTolerance_MixingTypesGenerally" fullname="TCLite.Framework.Syntax.EqualityTests.EqualityTestsWithTolerance_MixingTypesGenerally" seed="381225943" />
    <test-case id="1327" name="EqualityTestsUsingDefaultFloatingPointTolerance" fullname="TCLite.Framework.Syntax.EqualityTests.EqualityTestsUsingDefaultFloatingPointTolerance" seed="6184628" />
  </test-suite>
  <test-suite type="TestFixture" id="1328" name="NotOperatorOverride" fullname="TCLite.Framework.Syntax.NotOperatorOverride" testcasecount="3">
    <test-case id="1329" name="NotOperatorCanApplyToResolvableConstraintExpression" fullname="TCLite.Framework.Syntax.NotOperatorOverride.NotOperatorCanApplyToResolvableConstraintExpression" seed="323371251" />
    <test-case id="1330" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.NotOperatorOverride.SyntaxTest.SupportedByStaticSyntax" seed="1480654543" />
    <test-case id="1331" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.NotOperatorOverride.SyntaxTest.SupportedByConstraintBuilder" seed="2016986895" />
  </test-suite>
  <test-suite type="TestFixture" id="1332" name="AndOperatorOverride" fullname="TCLite.Framework.Syntax.AndOperatorOverride" testcasecount="5">
    <properties>
      <property name="Description" value="Test" />
    </properties>
    <test-case id="1333" name="AndOperatorCanCombineTwoResolvableConstraintExpressions" fullname="TCLite.Framework.Syntax.AndOperatorOverride.AndOperatorCanCombineTwoResolvableConstraintExpressions" seed="2087702543" />
    <test-case id="1334" name="AndOperatorCanCombineConstraintAndResolvableConstraintExpression" fullname="TCLite.Framework.Syntax.AndOperatorOverride.AndOperatorCanCombineConstraintAndResolvableConstraintExpression" seed="92482810" />
    <test-case id="1335" name="AndOperatorCanCombineResolvableConstraintExpressionAndConstraint" fullname="TCLite.Framework.Syntax.AndOperatorOverride.AndOperatorCanCombineResolvableConstraintExpressionAndConstraint" seed="2058428893" />
    <test-case id="1336" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AndOperatorOverride.SyntaxTest.SupportedByStaticSyntax" seed="591400473" />
    <test-case id="1337" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AndOperatorOverride.SyntaxTest.SupportedByConstraintBuilder" seed="1190209471" />
  </test-suite>
  <test-suite type="TestFixture" id="1338" name="OrOperatorOverride" fullname="TCLite.Framework.Syntax.OrOperatorOverride" testcasecount="5">
    <test-case id="1339" name="OrOperatorCanCombineTwoResolvableConstraintExpressions" fullname="TCLite.Framework.Syntax.OrOperatorOverride.OrOperatorCanCombineTwoResolvableConstraintExpressions" seed="2021136110" />
    <test-case id="1340" name="OrOperatorCanCombineResolvableConstraintExpressionAndConstraint" fullname="TCLite.Framework.Syntax.OrOperatorOverride.OrOperatorCanCombineResolvableConstraintExpressionAndConstraint" seed="751727328" />
    <test-case id="1341" name="OrOperatorCanCombineConstraintAndResolvableConstraintExpression" fullname="TCLite.Framework.Syntax.OrOperatorOverride.OrOperatorCanCombineConstraintAndResolvableConstraintExpression" seed="544859876" />
    <test-case id="1342" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.OrOperatorOverride.SyntaxTest.SupportedByStaticSyntax" seed="1393064338" />
    <test-case id="1343" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.OrOperatorOverride.SyntaxTest.SupportedByConstraintBuilder" seed="1751574069" />
  </test-suite>
  <test-suite type="TestFixture" id="1344" name="MixedOperatorOverrides" fullname="TCLite.Framework.Syntax.MixedOperatorOverrides" testcasecount="1">
    <test-case id="1345" name="ComplexTests" fullname="TCLite.Framework.Syntax.MixedOperatorOverrides.ComplexTests" seed="1117597907" />
  </test-suite>
  <test-suite type="TestFixture" id="1346" name="NotTest" fullname="TCLite.Framework.Syntax.NotTest" testcasecount="2">
    <test-case id="1347" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.NotTest.SyntaxTest.SupportedByStaticSyntax" seed="1456265154" />
    <test-case id="1348" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.NotTest.SyntaxTest.SupportedByConstraintBuilder" seed="848611343" />
  </test-suite>
  <test-suite type="TestFixture" id="1349" name="NotTest_Cascaded" fullname="TCLite.Framework.Syntax.NotTest_Cascaded" testcasecount="2">
    <test-case id="1350" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.NotTest_Cascaded.SyntaxTest.SupportedByStaticSyntax" seed="893012290" />
    <test-case id="1351" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.NotTest_Cascaded.SyntaxTest.SupportedByConstraintBuilder" seed="1486134005" />
  </test-suite>
  <test-suite type="TestFixture" id="1352" name="AllTest" fullname="TCLite.Framework.Syntax.AllTest" testcasecount="2">
    <test-case id="1353" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AllTest.SyntaxTest.SupportedByStaticSyntax" seed="278587839" />
    <test-case id="1354" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AllTest.SyntaxTest.SupportedByConstraintBuilder" seed="1714294167" />
  </test-suite>
  <test-suite type="TestFixture" id="1355" name="SomeTest" fullname="TCLite.Framework.Syntax.SomeTest" testcasecount="2">
    <test-case id="1356" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.SomeTest.SyntaxTest.SupportedByStaticSyntax" seed="2081991981" />
    <test-case id="1357" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.SomeTest.SyntaxTest.SupportedByConstraintBuilder" seed="768466802" />
  </test-suite>
  <test-suite type="TestFixture" id="1358" name="SomeTest_BeforeBinaryOperators" fullname="TCLite.Framework.Syntax.SomeTest_BeforeBinaryOperators" testcasecount="2">
    <test-case id="1359" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.SomeTest_BeforeBinaryOperators.SyntaxTest.SupportedByStaticSyntax" seed="1602515713" />
    <test-case id="1360" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.SomeTest_BeforeBinaryOperators.SyntaxTest.SupportedByConstraintBuilder" seed="312173966" />
  </test-suite>
  <test-suite type="TestFixture" id="1361" name="SomeTest_NestedSome" fullname="TCLite.Framework.Syntax.SomeTest_NestedSome" testcasecount="2">
    <test-case id="1362" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.SomeTest_NestedSome.SyntaxTest.SupportedByStaticSyntax" seed="565149935" />
    <test-case id="1363" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.SomeTest_NestedSome.SyntaxTest.SupportedByConstraintBuilder" seed="2020542051" />
  </test-suite>
  <test-suite type="TestFixture" id="1364" name="SomeTest_UseOfAndSome" fullname="TCLite.Framework.Syntax.SomeTest_UseOfAndSome" testcasecount="2">
    <test-case id="1365" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.SomeTest_UseOfAndSome.SyntaxTest.SupportedByStaticSyntax" seed="812177898" />
    <test-case id="1366" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.SomeTest_UseOfAndSome.SyntaxTest.SupportedByConstraintBuilder" seed="226691925" />
  </test-suite>
  <test-suite type="TestFixture" id="1367" name="NoneTest" fullname="TCLite.Framework.Syntax.NoneTest" testcasecount="2">
    <test-case id="1368" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.NoneTest.SyntaxTest.SupportedByStaticSyntax" seed="1179960194" />
    <test-case id="1369" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.NoneTest.SyntaxTest.SupportedByConstraintBuilder" seed="1561238228" />
  </test-suite>
  <test-suite type="TestFixture" id="1370" name="AndTest" fullname="TCLite.Framework.Syntax.AndTest" testcasecount="2">
    <test-case id="1371" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AndTest.SyntaxTest.SupportedByStaticSyntax" seed="2093812476" />
    <test-case id="1372" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AndTest.SyntaxTest.SupportedByConstraintBuilder" seed="1638480142" />
  </test-suite>
  <test-suite type="TestFixture" id="1373" name="AndTest_ThreeAndsWithNot" fullname="TCLite.Framework.Syntax.AndTest_ThreeAndsWithNot" testcasecount="2">
    <test-case id="1374" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AndTest_ThreeAndsWithNot.SyntaxTest.SupportedByStaticSyntax" seed="1026544601" />
    <test-case id="1375" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AndTest_ThreeAndsWithNot.SyntaxTest.SupportedByConstraintBuilder" seed="1333181525" />
  </test-suite>
  <test-suite type="TestFixture" id="1376" name="OrTest" fullname="TCLite.Framework.Syntax.OrTest" testcasecount="2">
    <test-case id="1377" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.OrTest.SyntaxTest.SupportedByStaticSyntax" seed="1743402726" />
    <test-case id="1378" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.OrTest.SyntaxTest.SupportedByConstraintBuilder" seed="929066297" />
  </test-suite>
  <test-suite type="TestFixture" id="1379" name="OrTest_ThreeOrs" fullname="TCLite.Framework.Syntax.OrTest_ThreeOrs" testcasecount="2">
    <test-case id="1380" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.OrTest_ThreeOrs.SyntaxTest.SupportedByStaticSyntax" seed="69966201" />
    <test-case id="1381" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.OrTest_ThreeOrs.SyntaxTest.SupportedByConstraintBuilder" seed="574371747" />
  </test-suite>
  <test-suite type="TestFixture" id="1382" name="AndIsEvaluatedBeforeFollowingOr" fullname="TCLite.Framework.Syntax.AndIsEvaluatedBeforeFollowingOr" testcasecount="2">
    <test-case id="1383" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AndIsEvaluatedBeforeFollowingOr.SyntaxTest.SupportedByStaticSyntax" seed="494593216" />
    <test-case id="1384" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AndIsEvaluatedBeforeFollowingOr.SyntaxTest.SupportedByConstraintBuilder" seed="2034517464" />
  </test-suite>
  <test-suite type="TestFixture" id="1385" name="AndIsEvaluatedBeforePrecedingOr" fullname="TCLite.Framework.Syntax.AndIsEvaluatedBeforePrecedingOr" testcasecount="2">
    <test-case id="1386" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AndIsEvaluatedBeforePrecedingOr.SyntaxTest.SupportedByStaticSyntax" seed="663820004" />
    <test-case id="1387" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AndIsEvaluatedBeforePrecedingOr.SyntaxTest.SupportedByConstraintBuilder" seed="1068372282" />
  </test-suite>
  <test-suite type="TestFixture" id="1388" name="OperatorPrecedenceTests" fullname="TCLite.Framework.Syntax.OperatorPrecedenceTests" testcasecount="2">
    <test-case id="1389" name="WithTests" fullname="TCLite.Framework.Syntax.OperatorPrecedenceTests.WithTests" seed="2092193130" />
    <test-case id="1390" name="SomeTests" fullname="TCLite.Framework.Syntax.OperatorPrecedenceTests.SomeTests" seed="1432290853" />
  </test-suite>
  <test-suite type="TestFixture" id="1391" name="PropertyExistsTest" fullname="TCLite.Framework.Syntax.PropertyExistsTest" testcasecount="2">
    <test-case id="1392" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.PropertyExistsTest.SyntaxTest.SupportedByStaticSyntax" seed="547529415" />
    <test-case id="1393" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.PropertyExistsTest.SyntaxTest.SupportedByConstraintBuilder" seed="533729406" />
  </test-suite>
  <test-suite type="TestFixture" id="1394" name="PropertyExistsTest_AndFollows" fullname="TCLite.Framework.Syntax.PropertyExistsTest_AndFollows" testcasecount="2">
    <test-case id="1395" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.PropertyExistsTest_AndFollows.SyntaxTest.SupportedByStaticSyntax" seed="865236538" />
    <test-case id="1396" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.PropertyExistsTest_AndFollows.SyntaxTest.SupportedByConstraintBuilder" seed="2123425216" />
  </test-suite>
  <test-suite type="TestFixture" id="1397" name="PropertyTest_ConstraintFollows" fullname="TCLite.Framework.Syntax.PropertyTest_ConstraintFollows" testcasecount="2">
    <test-case id="1398" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.PropertyTest_ConstraintFollows.SyntaxTest.SupportedByStaticSyntax" seed="371606987" />
    <test-case id="1399" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.PropertyTest_ConstraintFollows.SyntaxTest.SupportedByConstraintBuilder" seed="931078166" />
  </test-suite>
  <test-suite type="TestFixture" id="1400" name="PropertyTest_NotFollows" fullname="TCLite.Framework.Syntax.PropertyTest_NotFollows" testcasecount="2">
    <test-case id="1401" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.PropertyTest_NotFollows.SyntaxTest.SupportedByStaticSyntax" seed="240225965" />
    <test-case id="1402" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.PropertyTest_NotFollows.SyntaxTest.SupportedByConstraintBuilder" seed="547748776" />
  </test-suite>
  <test-suite type="TestFixture" id="1403" name="LengthTest" fullname="TCLite.Framework.Syntax.LengthTest" testcasecount="2">
    <test-case id="1404" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.LengthTest.SyntaxTest.SupportedByStaticSyntax" seed="236129385" />
    <test-case id="1405" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.LengthTest.SyntaxTest.SupportedByConstraintBuilder" seed="814415423" />
  </test-suite>
  <test-suite type="TestFixture" id="1406" name="CountTest" fullname="TCLite.Framework.Syntax.CountTest" testcasecount="2">
    <test-case id="1407" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.CountTest.SyntaxTest.SupportedByStaticSyntax" seed="71676294" />
    <test-case id="1408" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.CountTest.SyntaxTest.SupportedByConstraintBuilder" seed="1702388096" />
  </test-suite>
  <test-suite type="TestFixture" id="1409" name="MessageTest" fullname="TCLite.Framework.Syntax.MessageTest" testcasecount="2">
    <test-case id="1410" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.MessageTest.SyntaxTest.SupportedByStaticSyntax" seed="2025622477" />
    <test-case id="1411" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.MessageTest.SyntaxTest.SupportedByConstraintBuilder" seed="1704812929" />
  </test-suite>
  <test-suite type="TestFixture" id="1412" name="PropertySyntaxVariations" fullname="TCLite.Framework.Syntax.PropertySyntaxVariations" testcasecount="2">
    <test-case id="1413" name="ExistenceTest" fullname="TCLite.Framework.Syntax.PropertySyntaxVariations.ExistenceTest" seed="1522552608" />
    <test-case id="1414" name="SeparateConstraintTest" fullname="TCLite.Framework.Syntax.PropertySyntaxVariations.SeparateConstraintTest" seed="219424406" />
  </test-suite>
  <test-suite type="TestFixture" id="1415" name="BinarySerializableTest" fullname="TCLite.Framework.Syntax.BinarySerializableTest" testcasecount="2">
    <test-case id="1416" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.BinarySerializableTest.SyntaxTest.SupportedByStaticSyntax" seed="1246250995" />
    <test-case id="1417" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.BinarySerializableTest.SyntaxTest.SupportedByConstraintBuilder" seed="364708548" />
  </test-suite>
  <test-suite type="TestFixture" id="1418" name="XmlSerializableTest" fullname="TCLite.Framework.Syntax.XmlSerializableTest" testcasecount="2">
    <test-case id="1419" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.XmlSerializableTest.SyntaxTest.SupportedByStaticSyntax" seed="10249277" />
    <test-case id="1420" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.XmlSerializableTest.SyntaxTest.SupportedByConstraintBuilder" seed="459897882" />
  </test-suite>
  <test-suite type="TestFixture" id="1421" name="NullTest" fullname="TCLite.Framework.Syntax.NullTest" testcasecount="2">
    <test-case id="1422" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.NullTest.SyntaxTest.SupportedByStaticSyntax" seed="805398499" />
    <test-case id="1423" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.NullTest.SyntaxTest.SupportedByConstraintBuilder" seed="1053863381" />
  </test-suite>
  <test-suite type="TestFixture" id="1424" name="TrueTest" fullname="TCLite.Framework.Syntax.TrueTest" testcasecount="2">
    <test-case id="1425" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.TrueTest.SyntaxTest.SupportedByStaticSyntax" seed="366519737" />
    <test-case id="1426" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.TrueTest.SyntaxTest.SupportedByConstraintBuilder" seed="418392544" />
  </test-suite>
  <test-suite type="TestFixture" id="1427" name="FalseTest" fullname="TCLite.Framework.Syntax.FalseTest" testcasecount="2">
    <test-case id="1428" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.FalseTest.SyntaxTest.SupportedByStaticSyntax" seed="1521678828" />
    <test-case id="1429" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.FalseTest.SyntaxTest.SupportedByConstraintBuilder" seed="527198857" />
  </test-suite>
  <test-suite type="TestFixture" id="1430" name="NaNTest" fullname="TCLite.Framework.Syntax.NaNTest" testcasecount="2">
    <test-case id="1431" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.NaNTest.SyntaxTest.SupportedByStaticSyntax" seed="778645142" />
    <test-case id="1432" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.NaNTest.SyntaxTest.SupportedByConstraintBuilder" seed="318640543" />
  </test-suite>
  <test-suite type="TestFixture" id="1433" name="PositiveTest" fullname="TCLite.Framework.Syntax.PositiveTest" testcasecount="2">
    <test-case id="1434" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.PositiveTest.SyntaxTest.SupportedByStaticSyntax" seed="991540789" />
    <test-case id="1435" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.PositiveTest.SyntaxTest.SupportedByConstraintBuilder" seed="391554022" />
  </test-suite>
  <test-suite type="TestFixture" id="1436" name="NegativeTest" fullname="TCLite.Framework.Syntax.NegativeTest" testcasecount="2">
    <test-case id="1437" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.NegativeTest.SyntaxTest.SupportedByStaticSyntax" seed="1050474163" />
    <test-case id="1438" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.NegativeTest.SyntaxTest.SupportedByConstraintBuilder" seed="1013619699" />
  </test-suite>
  <test-suite type="TestFixture" id="1439" name="EmptyTest" fullname="TCLite.Framework.Syntax.EmptyTest" testcasecount="2">
    <test-case id="1440" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.EmptyTest.SyntaxTest.SupportedByStaticSyntax" seed="823757319" />
    <test-case id="1441" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.EmptyTest.SyntaxTest.SupportedByConstraintBuilder" seed="170224860" />
  </test-suite>
  <test-suite type="TestFixture" id="1442" name="SubstringTest" fullname="TCLite.Framework.Syntax.SubstringTest" testcasecount="2">
    <test-case id="1443" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.SubstringTest.SyntaxTest.SupportedByStaticSyntax" seed="1912128198" />
    <test-case id="1444" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.SubstringTest.SyntaxTest.SupportedByConstraintBuilder" seed="31420529" />
  </test-suite>
  <test-suite type="TestFixture" id="1445" name="ContainsSubstringTest" fullname="TCLite.Framework.Syntax.ContainsSubstringTest" testcasecount="2">
    <test-case id="1446" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.ContainsSubstringTest.SyntaxTest.SupportedByStaticSyntax" seed="1155305513" />
    <test-case id="1447" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.ContainsSubstringTest.SyntaxTest.SupportedByConstraintBuilder" seed="836236329" />
  </test-suite>
  <test-suite type="TestFixture" id="1448" name="SubstringTest_IgnoreCase" fullname="TCLite.Framework.Syntax.SubstringTest_IgnoreCase" testcasecount="2">
    <test-case id="1449" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.SubstringTest_IgnoreCase.SyntaxTest.SupportedByStaticSyntax" seed="2002568585" />
    <test-case id="1450" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.SubstringTest_IgnoreCase.SyntaxTest.SupportedByConstraintBuilder" seed="248882028" />
  </test-suite>
  <test-suite type="TestFixture" id="1451" name="StartsWithTest" fullname="TCLite.Framework.Syntax.StartsWithTest" testcasecount="2">
    <test-case id="1452" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.StartsWithTest.SyntaxTest.SupportedByStaticSyntax" seed="1321012263" />
    <test-case id="1453" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.StartsWithTest.SyntaxTest.SupportedByConstraintBuilder" seed="1546063700" />
  </test-suite>
  <test-suite type="TestFixture" id="1454" name="StartsWithTest_IgnoreCase" fullname="TCLite.Framework.Syntax.StartsWithTest_IgnoreCase" testcasecount="2">
    <test-case id="1455" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.StartsWithTest_IgnoreCase.SyntaxTest.SupportedByStaticSyntax" seed="1402350757" />
    <test-case id="1456" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.StartsWithTest_IgnoreCase.SyntaxTest.SupportedByConstraintBuilder" seed="212129178" />
  </test-suite>
  <test-suite type="TestFixture" id="1457" name="EndsWithTest" fullname="TCLite.Framework.Syntax.EndsWithTest" testcasecount="2">
    <test-case id="1458" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.EndsWithTest.SyntaxTest.SupportedByStaticSyntax" seed="1261505231" />
    <test-case id="1459" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.EndsWithTest.SyntaxTest.SupportedByConstraintBuilder" seed="41014630" />
  </test-suite>
  <test-suite type="TestFixture" id="1460" name="EndsWithTest_IgnoreCase" fullname="TCLite.Framework.Syntax.EndsWithTest_IgnoreCase" testcasecount="2">
    <test-case id="1461" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.EndsWithTest_IgnoreCase.SyntaxTest.SupportedByStaticSyntax" seed="1050927467" />
    <test-case id="1462" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.EndsWithTest_IgnoreCase.SyntaxTest.SupportedByConstraintBuilder" seed="512636919" />
  </test-suite>
  <test-suite type="TestFixture" id="1463" name="RegexTest" fullname="TCLite.Framework.Syntax.RegexTest" testcasecount="2">
    <test-case id="1464" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.RegexTest.SyntaxTest.SupportedByStaticSyntax" seed="1199302786" />
    <test-case id="1465" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.RegexTest.SyntaxTest.SupportedByConstraintBuilder" seed="275168810" />
  </test-suite>
  <test-suite type="TestFixture" id="1466" name="RegexTest_IgnoreCase" fullname="TCLite.Framework.Syntax.RegexTest_IgnoreCase" testcasecount="2">
    <test-case id="1467" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.RegexTest_IgnoreCase.SyntaxTest.SupportedByStaticSyntax" seed="788266469" />
    <test-case id="1468" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.RegexTest_IgnoreCase.SyntaxTest.SupportedByConstraintBuilder" seed="299111456" />
  </test-suite>
  <test-suite type="TestFixture" id="1469" name="ThrowsTests" fullname="TCLite.Framework.Syntax.ThrowsTests" testcasecount="20">
    <test-case id="1470" name="ThrowsException" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsException" seed="1058123005" />
    <test-case id="1471" name="ThrowsExceptionWithConstraint" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsExceptionWithConstraint" seed="1632295248" />
    <test-case id="1472" name="ThrowsExceptionTypeOf" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsExceptionTypeOf" seed="626892354" />
    <test-case id="1473" name="ThrowsTypeOf" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsTypeOf" seed="1641149681" />
    <test-case id="1474" name="ThrowsTypeOfAndConstraint" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsTypeOfAndConstraint" seed="167209669" />
    <test-case id="1475" name="ThrowsExceptionTypeOfAndConstraint" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsExceptionTypeOfAndConstraint" seed="446843994" />
    <test-case id="1476" name="ThrowsTypeOfWithConstraint" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsTypeOfWithConstraint" seed="601746388" />
    <test-case id="1477" name="ThrowsTypeofWithMessage" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsTypeofWithMessage" seed="1991891777" />
    <test-case id="1478" name="ThrowsInstanceOf" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsInstanceOf" seed="152433024" />
    <test-case id="1479" name="ThrowsExceptionInstanceOf" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsExceptionInstanceOf" seed="2069069069" />
    <test-case id="1480" name="ThrowsInnerException" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsInnerException" seed="1703691634" />
    <test-case id="1481" name="ThrowsExceptionWithInnerException" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsExceptionWithInnerException" seed="1992059010" />
    <test-case id="1482" name="ThrowsTypeOfWithInnerException" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsTypeOfWithInnerException" seed="1911424907" />
    <test-case id="1483" name="ThrowsTargetInvocationExceptionWithInnerException" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsTargetInvocationExceptionWithInnerException" seed="1205540242" />
    <test-case id="1484" name="ThrowsArgumentException" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsArgumentException" seed="878630777" />
    <test-case id="1485" name="ThrowsInvalidOperationException" fullname="TCLite.Framework.Syntax.ThrowsTests.ThrowsInvalidOperationException" seed="1855397617" />
    <test-case id="1486" name="DelegateThrowsException" fullname="TCLite.Framework.Syntax.ThrowsTests.DelegateThrowsException" seed="1940168378" />
    <test-case id="1487" name="LambdaThrowsExcepton" fullname="TCLite.Framework.Syntax.ThrowsTests.LambdaThrowsExcepton" seed="1491132079" />
    <test-case id="1488" name="LambdaThrowsExceptionWithMessage" fullname="TCLite.Framework.Syntax.ThrowsTests.LambdaThrowsExceptionWithMessage" seed="1211602540" />
    <test-case id="1489" name="LambdaThrowsNothing" fullname="TCLite.Framework.Syntax.ThrowsTests.LambdaThrowsNothing" seed="410014666" />
  </test-suite>
  <test-suite type="TestFixture" id="1490" name="ExactTypeTest" fullname="TCLite.Framework.Syntax.ExactTypeTest" testcasecount="2">
    <test-case id="1491" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.ExactTypeTest.SyntaxTest.SupportedByStaticSyntax" seed="509623610" />
    <test-case id="1492" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.ExactTypeTest.SyntaxTest.SupportedByConstraintBuilder" seed="1908850896" />
  </test-suite>
  <test-suite type="TestFixture" id="1493" name="InstanceOfTest" fullname="TCLite.Framework.Syntax.InstanceOfTest" testcasecount="2">
    <test-case id="1494" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.InstanceOfTest.SyntaxTest.SupportedByStaticSyntax" seed="1286369266" />
    <test-case id="1495" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.InstanceOfTest.SyntaxTest.SupportedByConstraintBuilder" seed="1406818446" />
  </test-suite>
  <test-suite type="TestFixture" id="1496" name="AssignableFromTest" fullname="TCLite.Framework.Syntax.AssignableFromTest" testcasecount="2">
    <test-case id="1497" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AssignableFromTest.SyntaxTest.SupportedByStaticSyntax" seed="1798996271" />
    <test-case id="1498" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AssignableFromTest.SyntaxTest.SupportedByConstraintBuilder" seed="154390559" />
  </test-suite>
  <test-suite type="TestFixture" id="1499" name="AssignableToTest" fullname="TCLite.Framework.Syntax.AssignableToTest" testcasecount="2">
    <test-case id="1500" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AssignableToTest.SyntaxTest.SupportedByStaticSyntax" seed="1304370960" />
    <test-case id="1501" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AssignableToTest.SyntaxTest.SupportedByConstraintBuilder" seed="1480664198" />
  </test-suite>
  <test-suite type="TestFixture" id="1502" name="AttributeTest" fullname="TCLite.Framework.Syntax.AttributeTest" testcasecount="2">
    <test-case id="1503" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AttributeTest.SyntaxTest.SupportedByStaticSyntax" seed="1623755037" />
    <test-case id="1504" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AttributeTest.SyntaxTest.SupportedByConstraintBuilder" seed="266008223" />
  </test-suite>
  <test-suite type="TestFixture" id="1505" name="AttributeTestWithFollowingConstraint" fullname="TCLite.Framework.Syntax.AttributeTestWithFollowingConstraint" testcasecount="2">
    <test-case id="1506" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AttributeTestWithFollowingConstraint.SyntaxTest.SupportedByStaticSyntax" seed="1266821404" />
    <test-case id="1507" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AttributeTestWithFollowingConstraint.SyntaxTest.SupportedByConstraintBuilder" seed="716371979" />
  </test-suite>
  <test-suite type="TestFixture" id="1508" name="ExactTypeTest_Generic" fullname="TCLite.Framework.Syntax.ExactTypeTest_Generic" testcasecount="2">
    <test-case id="1509" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.ExactTypeTest_Generic.SyntaxTest.SupportedByStaticSyntax" seed="1750771200" />
    <test-case id="1510" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.ExactTypeTest_Generic.SyntaxTest.SupportedByConstraintBuilder" seed="751362707" />
  </test-suite>
  <test-suite type="TestFixture" id="1511" name="InstanceOfTest_Generic" fullname="TCLite.Framework.Syntax.InstanceOfTest_Generic" testcasecount="2">
    <test-case id="1512" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.InstanceOfTest_Generic.SyntaxTest.SupportedByStaticSyntax" seed="2102980341" />
    <test-case id="1513" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.InstanceOfTest_Generic.SyntaxTest.SupportedByConstraintBuilder" seed="1338945718" />
  </test-suite>
  <test-suite type="TestFixture" id="1514" name="AssignableFromTest_Generic" fullname="TCLite.Framework.Syntax.AssignableFromTest_Generic" testcasecount="2">
    <test-case id="1515" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AssignableFromTest_Generic.SyntaxTest.SupportedByStaticSyntax" seed="1690816153" />
    <test-case id="1516" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AssignableFromTest_Generic.SyntaxTest.SupportedByConstraintBuilder" seed="270978517" />
  </test-suite>
  <test-suite type="TestFixture" id="1517" name="AssignableToTest_Generic" fullname="TCLite.Framework.Syntax.AssignableToTest_Generic" testcasecount="2">
    <test-case id="1518" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AssignableToTest_Generic.SyntaxTest.SupportedByStaticSyntax" seed="2011694507" />
    <test-case id="1519" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AssignableToTest_Generic.SyntaxTest.SupportedByConstraintBuilder" seed="708461519" />
  </test-suite>
  <test-suite type="TestFixture" id="1520" name="AttributeTest_Generic" fullname="TCLite.Framework.Syntax.AttributeTest_Generic" testcasecount="2">
    <test-case id="1521" name="SyntaxTest.SupportedByStaticSyntax" fullname="TCLite.Framework.Syntax.AttributeTest_Generic.SyntaxTest.SupportedByStaticSyntax" seed="234489941" />
    <test-case id="1522" name="SyntaxTest.SupportedByConstraintBuilder" fullname="TCLite.Framework.Syntax.AttributeTest_Generic.SyntaxTest.SupportedByConstraintBuilder" seed="10676808" />
  </test-suite>
  <test-suite type="TestFixture" id="1523" name="EqualityComparerTests" fullname="TCLite.Framework.Constraints.EqualityComparerTests" testcasecount="31">
    <test-suite type="ParameterizedMethod" id="1525" name="EqualItems" fullname="TCLite.Framework.Constraints.EqualityComparerTests.EqualItems" testcasecount="10">
      <test-case id="1526" name="EqualItems(4,4)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.EqualItems(4,4)" seed="96449004" />
      <test-case id="1527" name="EqualItems(4.0d,4.0d)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.EqualItems(4.0d,4.0d)" seed="1399426841" />
      <test-case id="1528" name="EqualItems(4.0f,4.0f)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.EqualItems(4.0f,4.0f)" seed="1989855713" />
      <test-case id="1529" name="EqualItems(4,4.0d)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.EqualItems(4,4.0d)" seed="1557775394" />
      <test-case id="1530" name="EqualItems(4,4.0f)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.EqualItems(4,4.0f)" seed="448187918" />
      <test-case id="1531" name="EqualItems(4.0d,4)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.EqualItems(4.0d,4)" seed="55964989" />
      <test-case id="1532" name="EqualItems(4.0d,4.0f)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.EqualItems(4.0d,4.0f)" seed="1309867500" />
      <test-case id="1533" name="EqualItems(4.0f,4)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.EqualItems(4.0f,4)" seed="1343013497" />
      <test-case id="1534" name="EqualItems(4.0f,4.0d)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.EqualItems(4.0f,4.0d)" seed="719952188" />
      <test-case id="1535" name="EqualItems(null,null)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.EqualItems(null,null)" seed="1855654354" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1537" name="UnequalItems" fullname="TCLite.Framework.Constraints.EqualityComparerTests.UnequalItems" testcasecount="9">
      <test-case id="1538" name="UnequalItems(4,2)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.UnequalItems(4,2)" seed="1211049917" />
      <test-case id="1539" name="UnequalItems(4.0d,2.0d)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.UnequalItems(4.0d,2.0d)" seed="378251803" />
      <test-case id="1540" name="UnequalItems(4.0f,2.0f)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.UnequalItems(4.0f,2.0f)" seed="1936971493" />
      <test-case id="1541" name="UnequalItems(4,2.0d)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.UnequalItems(4,2.0d)" seed="1296755756" />
      <test-case id="1542" name="UnequalItems(4,2.0f)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.UnequalItems(4,2.0f)" seed="345925982" />
      <test-case id="1543" name="UnequalItems(4.0d,2)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.UnequalItems(4.0d,2)" seed="1367557555" />
      <test-case id="1544" name="UnequalItems(4.0d,2.0f)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.UnequalItems(4.0d,2.0f)" seed="1989637057" />
      <test-case id="1545" name="UnequalItems(4.0f,2)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.UnequalItems(4.0f,2)" seed="12819110" />
      <test-case id="1546" name="UnequalItems(4,null)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.UnequalItems(4,null)" seed="1289956681" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1548" name="SpecialFloatingPointValuesCompareAsEqual" fullname="TCLite.Framework.Constraints.EqualityComparerTests.SpecialFloatingPointValuesCompareAsEqual" testcasecount="6">
      <test-case id="1549" name="SpecialFloatingPointValuesCompareAsEqual(double.PositiveInfinity,double.PositiveInfinity)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.SpecialFloatingPointValuesCompareAsEqual(double.PositiveInfinity,double.PositiveInfinity)" seed="1268565837" />
      <test-case id="1550" name="SpecialFloatingPointValuesCompareAsEqual(double.NegativeInfinity,double.NegativeInfinity)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.SpecialFloatingPointValuesCompareAsEqual(double.NegativeInfinity,double.NegativeInfinity)" seed="368136740" />
      <test-case id="1551" name="SpecialFloatingPointValuesCompareAsEqual(double.NaN,double.NaN)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.SpecialFloatingPointValuesCompareAsEqual(double.NaN,double.NaN)" seed="2033908448" />
      <test-case id="1552" name="SpecialFloatingPointValuesCompareAsEqual(float.PositiveInfinity,float.PositiveInfinity)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.SpecialFloatingPointValuesCompareAsEqual(float.PositiveInfinity,float.PositiveInfinity)" seed="802247665" />
      <test-case id="1553" name="SpecialFloatingPointValuesCompareAsEqual(float.NegativeInfinity,float.NegativeInfinity)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.SpecialFloatingPointValuesCompareAsEqual(float.NegativeInfinity,float.NegativeInfinity)" seed="987319655" />
      <test-case id="1554" name="SpecialFloatingPointValuesCompareAsEqual(float.NaN,float.NaN)" fullname="TCLite.Framework.Constraints.EqualityComparerTests.SpecialFloatingPointValuesCompareAsEqual(float.NaN,float.NaN)" seed="241287810" />
    </test-suite>
    <test-case id="1555" name="CanCompareArrayContainingSelfToSelf" fullname="TCLite.Framework.Constraints.EqualityComparerTests.CanCompareArrayContainingSelfToSelf" seed="1160062200" />
    <test-case id="1556" name="IEquatableSuccess" fullname="TCLite.Framework.Constraints.EqualityComparerTests.IEquatableSuccess" seed="1250043548" />
    <test-case id="1557" name="IEquatableDifferentTypesSuccess_WhenActualImplementsIEquatable" fullname="TCLite.Framework.Constraints.EqualityComparerTests.IEquatableDifferentTypesSuccess_WhenActualImplementsIEquatable" seed="1687168706" />
    <test-case id="1558" name="IEquatableDifferentTypesSuccess_WhenExpectedImplementsIEquatable" fullname="TCLite.Framework.Constraints.EqualityComparerTests.IEquatableDifferentTypesSuccess_WhenExpectedImplementsIEquatable" seed="164581464" />
    <test-case id="1559" name="IEquatableHasPrecedenceOverDefaultEquals" fullname="TCLite.Framework.Constraints.EqualityComparerTests.IEquatableHasPrecedenceOverDefaultEquals" seed="1669189861" />
    <test-case id="1560" name="ReferenceEqualityHasPrecedenceOverIEquatable" fullname="TCLite.Framework.Constraints.EqualityComparerTests.ReferenceEqualityHasPrecedenceOverIEquatable" seed="1626921219" />
  </test-suite>
  <test-suite type="TestFixture" id="1561" name="ReusableConstraintTests" fullname="TCLite.Framework.Constraints.ReusableConstraintTests" testcasecount="5">
    <test-suite type="Theory" id="1563" name="CanReuseReusableConstraintMultipleTimes" fullname="TCLite.Framework.Constraints.ReusableConstraintTests.CanReuseReusableConstraintMultipleTimes" testcasecount="4">
      <test-case id="1564" name="CanReuseReusableConstraintMultipleTimes(&lt;not &lt;empty&gt;&gt;)" fullname="TCLite.Framework.Constraints.ReusableConstraintTests.CanReuseReusableConstraintMultipleTimes(&lt;not &lt;empty&gt;&gt;)" seed="503141021" />
      <test-case id="1565" name="CanReuseReusableConstraintMultipleTimes(&lt;not &lt;null&gt;&gt;)" fullname="TCLite.Framework.Constraints.ReusableConstraintTests.CanReuseReusableConstraintMultipleTimes(&lt;not &lt;null&gt;&gt;)" seed="175524725" />
      <test-case id="1566" name="CanReuseReusableConstraintMultipleTimes(&lt;property Length &lt;greaterthan 3&gt;&gt;)" fullname="TCLite.Framework.Constraints.ReusableConstraintTests.CanReuseReusableConstraintMultipleTimes(&lt;property Length &lt;greaterthan 3&gt;&gt;)" seed="498946802" />
      <test-case id="1567" name="CanReuseReusableConstraintMultipleTimes(&lt;and &lt;property Length &lt;equal 4&gt;&gt; &lt;startswith &quot;te&quot;&gt;&gt;)" fullname="TCLite.Framework.Constraints.ReusableConstraintTests.CanReuseReusableConstraintMultipleTimes(&lt;and &lt;property Length &lt;equal 4&gt;&gt; &lt;startswith &quot;te&quot;&gt;&gt;)" seed="1812401892" />
    </test-suite>
    <test-case id="1568" name="CanCreateReusableConstraintByImplicitConversion" fullname="TCLite.Framework.Constraints.ReusableConstraintTests.CanCreateReusableConstraintByImplicitConversion" seed="2034426072" />
  </test-suite>
  <test-suite type="TestFixture" id="1569" name="ToStringTests" fullname="TCLite.Framework.Constraints.ToStringTests" testcasecount="6">
    <test-case id="1570" name="CanDisplaySimpleConstraints_Unresolved" fullname="TCLite.Framework.Constraints.ToStringTests.CanDisplaySimpleConstraints_Unresolved" seed="1564446380" />
    <test-case id="1571" name="CanDisplaySimpleConstraints_Resolved" fullname="TCLite.Framework.Constraints.ToStringTests.CanDisplaySimpleConstraints_Resolved" seed="241220877" />
    <test-case id="1572" name="DisplayPrefixConstraints_Unresolved" fullname="TCLite.Framework.Constraints.ToStringTests.DisplayPrefixConstraints_Unresolved" seed="1853686288" />
    <test-case id="1573" name="CanDisplayPrefixConstraints_Resolved" fullname="TCLite.Framework.Constraints.ToStringTests.CanDisplayPrefixConstraints_Resolved" seed="1248405971" />
    <test-case id="1574" name="DisplayBinaryConstraints_Resolved" fullname="TCLite.Framework.Constraints.ToStringTests.DisplayBinaryConstraints_Resolved" seed="170796698" />
    <test-case id="1575" name="DisplayBinaryConstraints_UnResolved" fullname="TCLite.Framework.Constraints.ToStringTests.DisplayBinaryConstraints_UnResolved" seed="280741540" />
  </test-suite>
  <test-suite type="TestFixture" id="1576" name="AllItemsConstraintTests" fullname="TCLite.Framework.Constraints.Tests.AllItemsConstraintTests" testcasecount="9">
    <test-case id="1577" name="AllItemsAreNotNull" fullname="TCLite.Framework.Constraints.Tests.AllItemsConstraintTests.AllItemsAreNotNull" seed="1693539682" />
    <test-case id="1578" name="AllItemsAreNotNullFails" fullname="TCLite.Framework.Constraints.Tests.AllItemsConstraintTests.AllItemsAreNotNullFails" seed="1558650697" />
    <test-case id="1579" name="AllItemsAreInRange" fullname="TCLite.Framework.Constraints.Tests.AllItemsConstraintTests.AllItemsAreInRange" seed="1652805709" />
    <test-case id="1580" name="AllItemsAreInRange_UsingIComparer" fullname="TCLite.Framework.Constraints.Tests.AllItemsConstraintTests.AllItemsAreInRange_UsingIComparer" seed="1372519397" />
    <test-case id="1581" name="AllItemsAreInRange_UsingIComparerOfT" fullname="TCLite.Framework.Constraints.Tests.AllItemsConstraintTests.AllItemsAreInRange_UsingIComparerOfT" seed="961874861" />
    <test-case id="1582" name="AllItemsAreInRange_UsingComparisonOfT" fullname="TCLite.Framework.Constraints.Tests.AllItemsConstraintTests.AllItemsAreInRange_UsingComparisonOfT" seed="806224585" />
    <test-case id="1583" name="AllItemsAreInRangeFailureMessage" fullname="TCLite.Framework.Constraints.Tests.AllItemsConstraintTests.AllItemsAreInRangeFailureMessage" seed="993019736" />
    <test-case id="1584" name="AllItemsAreInstancesOfType" fullname="TCLite.Framework.Constraints.Tests.AllItemsConstraintTests.AllItemsAreInstancesOfType" seed="323258598" />
    <test-case id="1585" name="AllItemsAreInstancesOfTypeFailureMessage" fullname="TCLite.Framework.Constraints.Tests.AllItemsConstraintTests.AllItemsAreInstancesOfTypeFailureMessage" seed="428825107" />
  </test-suite>
  <test-suite type="TestFixture" id="1586" name="AndConstraintTests" fullname="TCLite.Framework.Constraints.Tests.AndConstraintTests" testcasecount="6">
    <test-case id="1587" name="CanCombineTestsWithAndOperator" fullname="TCLite.Framework.Constraints.Tests.AndConstraintTests.CanCombineTestsWithAndOperator" seed="1998875397" />
    <test-suite type="ParameterizedMethod" id="1589" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.AndConstraintTests.SucceedsWithGoodValues" testcasecount="1">
      <test-case id="1590" name="SucceedsWithGoodValues(42)" fullname="TCLite.Framework.Constraints.Tests.AndConstraintTests.SucceedsWithGoodValues(42)" seed="1565988485" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1592" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.AndConstraintTests.FailsWithBadValues" testcasecount="2">
      <test-case id="1593" name="FailsWithBadValues(37,&quot;37&quot;)" fullname="TCLite.Framework.Constraints.Tests.AndConstraintTests.FailsWithBadValues(37,&quot;37&quot;)" seed="1113407751" />
      <test-case id="1594" name="FailsWithBadValues(53,&quot;53&quot;)" fullname="TCLite.Framework.Constraints.Tests.AndConstraintTests.FailsWithBadValues(53,&quot;53&quot;)" seed="1790023715" />
    </test-suite>
    <test-case id="1595" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.AndConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="210024203" />
    <test-case id="1596" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.AndConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="597179176" />
  </test-suite>
  <test-suite type="TestFixture" id="1597" name="AssignableFromConstraintTests" fullname="TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests" testcasecount="5">
    <test-suite type="ParameterizedMethod" id="1599" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="1600" name="SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests+D1)" fullname="TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests.SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests+D1)" seed="1002536058" />
      <test-case id="1601" name="SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests+B)" fullname="TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests.SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests+B)" seed="1316487584" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1603" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests.FailsWithBadValues" testcasecount="1">
      <test-case id="1604" name="FailsWithBadValues(TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests+D2,&quot;&lt;TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests+D2&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests.FailsWithBadValues(TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests+D2,&quot;&lt;TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests+D2&gt;&quot;)" seed="1435609365" />
    </test-suite>
    <test-case id="1605" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="953405088" />
    <test-case id="1606" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.AssignableFromConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1770182441" />
  </test-suite>
  <test-suite type="TestFixture" id="1607" name="AssignableToConstraintTests" fullname="TCLite.Framework.Constraints.Tests.AssignableToConstraintTests" testcasecount="5">
    <test-suite type="ParameterizedMethod" id="1609" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.AssignableToConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="1610" name="SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.AssignableToConstraintTests+D1)" fullname="TCLite.Framework.Constraints.Tests.AssignableToConstraintTests.SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.AssignableToConstraintTests+D1)" seed="1178432033" />
      <test-case id="1611" name="SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.AssignableToConstraintTests+D2)" fullname="TCLite.Framework.Constraints.Tests.AssignableToConstraintTests.SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.AssignableToConstraintTests+D2)" seed="1198245974" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1613" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.AssignableToConstraintTests.FailsWithBadValues" testcasecount="1">
      <test-case id="1614" name="FailsWithBadValues(TCLite.Framework.Constraints.Tests.AssignableToConstraintTests+B,&quot;&lt;TCLite.Framework.Constraints.Tests.AssignableToConstraintTests+B&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.AssignableToConstraintTests.FailsWithBadValues(TCLite.Framework.Constraints.Tests.AssignableToConstraintTests+B,&quot;&lt;TCLite.Framework.Constraints.Tests.AssignableToConstraintTests+B&gt;&quot;)" seed="228733135" />
    </test-suite>
    <test-case id="1615" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.AssignableToConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="707908896" />
    <test-case id="1616" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.AssignableToConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="202727078" />
  </test-suite>
  <test-suite type="TestFixture" id="1617" name="AttributeExistsConstraintTests" fullname="TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests" testcasecount="7">
    <test-case id="1618" name="NonAttributeThrowsException" fullname="TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests.NonAttributeThrowsException" seed="1438024691" />
    <test-case id="1619" name="AttributeExistsOnMethodInfo" fullname="TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests.AttributeExistsOnMethodInfo" seed="1631837511" />
    <test-case id="1620" name="AttributeTestPropertyValueOnMethodInfo" fullname="TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests.AttributeTestPropertyValueOnMethodInfo" seed="458983557">
      <properties>
        <property name="Description" value="my description" />
      </properties>
    </test-case>
    <test-suite type="ParameterizedMethod" id="1622" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests.SucceedsWithGoodValues" testcasecount="1">
      <test-case id="1623" name="SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests)" fullname="TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests.SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests)" seed="1950594822" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1625" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests.FailsWithBadValues" testcasecount="1">
      <test-case id="1626" name="FailsWithBadValues(TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests+D2,&quot;&lt;TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests+D2&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests.FailsWithBadValues(TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests+D2,&quot;&lt;TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests+D2&gt;&quot;)" seed="1748416180" />
    </test-suite>
    <test-case id="1627" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="306616469" />
    <test-case id="1628" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.AttributeExistsConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="41550710" />
  </test-suite>
  <test-suite type="TestFixture" id="1629" name="NullConstraintTest" fullname="TCLite.Framework.Constraints.Tests.NullConstraintTest" testcasecount="4">
    <test-suite type="ParameterizedMethod" id="1631" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.NullConstraintTest.SucceedsWithGoodValues" testcasecount="1">
      <test-case id="1632" name="SucceedsWithGoodValues(null)" fullname="TCLite.Framework.Constraints.Tests.NullConstraintTest.SucceedsWithGoodValues(null)" seed="1097769139" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1634" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.NullConstraintTest.FailsWithBadValues" testcasecount="1">
      <test-case id="1635" name="FailsWithBadValues(&quot;hello&quot;,&quot;\&quot;hello\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.NullConstraintTest.FailsWithBadValues(&quot;hello&quot;,&quot;\&quot;hello\&quot;&quot;)" seed="87395200" />
    </test-suite>
    <test-case id="1636" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.NullConstraintTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="340368766" />
    <test-case id="1637" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.NullConstraintTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1391080615" />
  </test-suite>
  <test-suite type="TestFixture" id="1638" name="TrueConstraintTest" fullname="TCLite.Framework.Constraints.Tests.TrueConstraintTest" testcasecount="8">
    <test-suite type="ParameterizedMethod" id="1640" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.TrueConstraintTest.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="1641" name="SucceedsWithGoodValues(True)" fullname="TCLite.Framework.Constraints.Tests.TrueConstraintTest.SucceedsWithGoodValues(True)" seed="1481997593" />
      <test-case id="1642" name="SucceedsWithGoodValues(True)" fullname="TCLite.Framework.Constraints.Tests.TrueConstraintTest.SucceedsWithGoodValues(True)" seed="1016252060" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1644" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.TrueConstraintTest.FailsWithBadValues" testcasecount="4">
      <test-case id="1645" name="FailsWithBadValues(null,&quot;null&quot;)" fullname="TCLite.Framework.Constraints.Tests.TrueConstraintTest.FailsWithBadValues(null,&quot;null&quot;)" seed="198187339" />
      <test-case id="1646" name="FailsWithBadValues(&quot;hello&quot;,&quot;\&quot;hello\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.TrueConstraintTest.FailsWithBadValues(&quot;hello&quot;,&quot;\&quot;hello\&quot;&quot;)" seed="443818963" />
      <test-case id="1647" name="FailsWithBadValues(False,&quot;False&quot;)" fullname="TCLite.Framework.Constraints.Tests.TrueConstraintTest.FailsWithBadValues(False,&quot;False&quot;)" seed="694148970" />
      <test-case id="1648" name="FailsWithBadValues(False,&quot;False&quot;)" fullname="TCLite.Framework.Constraints.Tests.TrueConstraintTest.FailsWithBadValues(False,&quot;False&quot;)" seed="1988806513" />
    </test-suite>
    <test-case id="1649" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.TrueConstraintTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1240364754" />
    <test-case id="1650" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.TrueConstraintTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1775529469" />
  </test-suite>
  <test-suite type="TestFixture" id="1651" name="FalseConstraintTest" fullname="TCLite.Framework.Constraints.Tests.FalseConstraintTest" testcasecount="8">
    <test-suite type="ParameterizedMethod" id="1653" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.FalseConstraintTest.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="1654" name="SucceedsWithGoodValues(False)" fullname="TCLite.Framework.Constraints.Tests.FalseConstraintTest.SucceedsWithGoodValues(False)" seed="1084636183" />
      <test-case id="1655" name="SucceedsWithGoodValues(False)" fullname="TCLite.Framework.Constraints.Tests.FalseConstraintTest.SucceedsWithGoodValues(False)" seed="1209600621" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1657" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.FalseConstraintTest.FailsWithBadValues" testcasecount="4">
      <test-case id="1658" name="FailsWithBadValues(null,&quot;null&quot;)" fullname="TCLite.Framework.Constraints.Tests.FalseConstraintTest.FailsWithBadValues(null,&quot;null&quot;)" seed="856406734" />
      <test-case id="1659" name="FailsWithBadValues(&quot;hello&quot;,&quot;\&quot;hello\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.FalseConstraintTest.FailsWithBadValues(&quot;hello&quot;,&quot;\&quot;hello\&quot;&quot;)" seed="1602377689" />
      <test-case id="1660" name="FailsWithBadValues(True,&quot;True&quot;)" fullname="TCLite.Framework.Constraints.Tests.FalseConstraintTest.FailsWithBadValues(True,&quot;True&quot;)" seed="1437246896" />
      <test-case id="1661" name="FailsWithBadValues(True,&quot;True&quot;)" fullname="TCLite.Framework.Constraints.Tests.FalseConstraintTest.FailsWithBadValues(True,&quot;True&quot;)" seed="561910322" />
    </test-suite>
    <test-case id="1662" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.FalseConstraintTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1072216940" />
    <test-case id="1663" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.FalseConstraintTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="418076923" />
  </test-suite>
  <test-suite type="TestFixture" id="1664" name="NaNConstraintTest" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest" testcasecount="11">
    <test-suite type="ParameterizedMethod" id="1666" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="1667" name="SucceedsWithGoodValues(double.NaN)" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.SucceedsWithGoodValues(double.NaN)" seed="295000883" />
      <test-case id="1668" name="SucceedsWithGoodValues(float.NaN)" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.SucceedsWithGoodValues(float.NaN)" seed="548097904" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1670" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.FailsWithBadValues" testcasecount="7">
      <test-case id="1671" name="FailsWithBadValues(null,&quot;null&quot;)" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.FailsWithBadValues(null,&quot;null&quot;)" seed="1249793154" />
      <test-case id="1672" name="FailsWithBadValues(&quot;hello&quot;,&quot;\&quot;hello\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.FailsWithBadValues(&quot;hello&quot;,&quot;\&quot;hello\&quot;&quot;)" seed="495293708" />
      <test-case id="1673" name="FailsWithBadValues(42,&quot;42&quot;)" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.FailsWithBadValues(42,&quot;42&quot;)" seed="1329917562" />
      <test-case id="1674" name="FailsWithBadValues(double.PositiveInfinity,&quot;Infinity&quot;)" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.FailsWithBadValues(double.PositiveInfinity,&quot;Infinity&quot;)" seed="944896813" />
      <test-case id="1675" name="FailsWithBadValues(double.NegativeInfinity,&quot;-Infinity&quot;)" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.FailsWithBadValues(double.NegativeInfinity,&quot;-Infinity&quot;)" seed="1169792319" />
      <test-case id="1676" name="FailsWithBadValues(float.PositiveInfinity,&quot;Infinity&quot;)" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.FailsWithBadValues(float.PositiveInfinity,&quot;Infinity&quot;)" seed="1671333817" />
      <test-case id="1677" name="FailsWithBadValues(float.NegativeInfinity,&quot;-Infinity&quot;)" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.FailsWithBadValues(float.NegativeInfinity,&quot;-Infinity&quot;)" seed="1321870721" />
    </test-suite>
    <test-case id="1678" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="534036179" />
    <test-case id="1679" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.NaNConstraintTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="520147423" />
  </test-suite>
  <test-suite type="TestFixture" id="1680" name="BinarySerializableTest" fullname="TCLite.Framework.Constraints.Tests.BinarySerializableTest" testcasecount="8">
    <test-suite type="ParameterizedMethod" id="1682" name="InvalidDataThrowsArgumentException" fullname="TCLite.Framework.Constraints.Tests.BinarySerializableTest.InvalidDataThrowsArgumentException" testcasecount="1">
      <test-case id="1683" name="InvalidDataThrowsArgumentException(null)" fullname="TCLite.Framework.Constraints.Tests.BinarySerializableTest.InvalidDataThrowsArgumentException(null)" seed="827892574" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1685" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.BinarySerializableTest.SucceedsWithGoodValues" testcasecount="4">
      <test-case id="1686" name="SucceedsWithGoodValues(1)" fullname="TCLite.Framework.Constraints.Tests.BinarySerializableTest.SucceedsWithGoodValues(1)" seed="1692258928" />
      <test-case id="1687" name="SucceedsWithGoodValues(&quot;a&quot;)" fullname="TCLite.Framework.Constraints.Tests.BinarySerializableTest.SucceedsWithGoodValues(&quot;a&quot;)" seed="1524437775" />
      <test-case id="1688" name="SucceedsWithGoodValues(System.Collections.ArrayList)" fullname="TCLite.Framework.Constraints.Tests.BinarySerializableTest.SucceedsWithGoodValues(System.Collections.ArrayList)" seed="15638612" />
      <test-case id="1689" name="SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.InternalWithSerializableAttributeClass)" fullname="TCLite.Framework.Constraints.Tests.BinarySerializableTest.SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.InternalWithSerializableAttributeClass)" seed="1702628515" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1691" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.BinarySerializableTest.FailsWithBadValues" testcasecount="1">
      <test-case id="1692" name="FailsWithBadValues(TCLite.Framework.Constraints.Tests.InternalClass,&quot;&lt;InternalClass&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.BinarySerializableTest.FailsWithBadValues(TCLite.Framework.Constraints.Tests.InternalClass,&quot;&lt;InternalClass&gt;&quot;)" seed="2017139084" />
    </test-suite>
    <test-case id="1693" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.BinarySerializableTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1353582208" />
    <test-case id="1694" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.BinarySerializableTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1668022112" />
  </test-suite>
  <test-suite type="TestFixture" id="1695" name="CollectionContainsConstraintTests" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests" testcasecount="12">
    <test-case id="1696" name="CanTestContentsOfArray" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests.CanTestContentsOfArray" seed="300235524" />
    <test-case id="1697" name="CanTestContentsOfArrayList" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests.CanTestContentsOfArrayList" seed="1237422026" />
    <test-case id="1698" name="CanTestContentsOfSortedList" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests.CanTestContentsOfSortedList" seed="509586125" />
    <test-case id="1699" name="CanTestContentsOfCollectionNotImplementingIList" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests.CanTestContentsOfCollectionNotImplementingIList" seed="1076033471" />
    <test-case id="1700" name="IgnoreCaseIsHonored" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests.IgnoreCaseIsHonored" seed="1337109167" />
    <test-case id="1701" name="UsesProvidedIComparer" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests.UsesProvidedIComparer" seed="2105364867" />
    <test-case id="1702" name="UsesProvidedEqualityComparer" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests.UsesProvidedEqualityComparer" seed="600687313" />
    <test-case id="1703" name="UsesProvidedEqualityComparerOfT" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests.UsesProvidedEqualityComparerOfT" seed="1770756360" />
    <test-case id="1704" name="UsesProvidedComparerOfT" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests.UsesProvidedComparerOfT" seed="1140610104" />
    <test-case id="1705" name="UsesProvidedComparisonOfT" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests.UsesProvidedComparisonOfT" seed="581617957" />
    <test-case id="1706" name="ContainsWithRecursiveStructure" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests.ContainsWithRecursiveStructure" seed="29459822" />
    <test-case id="1707" name="UsesProvidedLambdaExpression" fullname="TCLite.Framework.Constraints.Tests.CollectionContainsConstraintTests.UsesProvidedLambdaExpression" seed="1169220308" />
  </test-suite>
  <test-suite type="TestFixture" id="1708" name="CollectionEquivalentConstraintTests" fullname="TCLite.Framework.Constraints.Tests.CollectionEquivalentConstraintTests" testcasecount="8">
    <test-case id="1709" name="EqualCollectionsAreEquivalent" fullname="TCLite.Framework.Constraints.Tests.CollectionEquivalentConstraintTests.EqualCollectionsAreEquivalent" seed="1388684500" />
    <test-case id="1710" name="WorksWithCollectionsOfArrays" fullname="TCLite.Framework.Constraints.Tests.CollectionEquivalentConstraintTests.WorksWithCollectionsOfArrays" seed="676199240" />
    <test-case id="1711" name="EquivalentIgnoresOrder" fullname="TCLite.Framework.Constraints.Tests.CollectionEquivalentConstraintTests.EquivalentIgnoresOrder" seed="2036023193" />
    <test-case id="1712" name="EquivalentFailsWithDuplicateElementInActual" fullname="TCLite.Framework.Constraints.Tests.CollectionEquivalentConstraintTests.EquivalentFailsWithDuplicateElementInActual" seed="1894033474" />
    <test-case id="1713" name="EquivalentFailsWithDuplicateElementInExpected" fullname="TCLite.Framework.Constraints.Tests.CollectionEquivalentConstraintTests.EquivalentFailsWithDuplicateElementInExpected" seed="549671235" />
    <test-case id="1714" name="EquivalentHandlesNull" fullname="TCLite.Framework.Constraints.Tests.CollectionEquivalentConstraintTests.EquivalentHandlesNull" seed="985085693" />
    <test-case id="1715" name="EquivalentHonorsIgnoreCase" fullname="TCLite.Framework.Constraints.Tests.CollectionEquivalentConstraintTests.EquivalentHonorsIgnoreCase" seed="1992558705" />
    <test-case id="1716" name="EquivalentHonorsUsing" fullname="TCLite.Framework.Constraints.Tests.CollectionEquivalentConstraintTests.EquivalentHonorsUsing" seed="61163053" />
  </test-suite>
  <test-suite type="TestFixture" id="1717" name="CollectionOrderedConstraintTests" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests" testcasecount="14">
    <test-case id="1718" name="IsOrdered" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.IsOrdered" seed="537100780" />
    <test-case id="1719" name="IsOrderedDescending" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.IsOrderedDescending" seed="1993943388" />
    <test-case id="1720" name="IsOrdered_Fails" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.IsOrdered_Fails" seed="674337169" />
    <test-case id="1721" name="IsOrdered_Allows_adjacent_equal_values" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.IsOrdered_Allows_adjacent_equal_values" seed="1269431889" />
    <test-case id="1722" name="IsOrdered_TypesMustBeComparable" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.IsOrdered_TypesMustBeComparable" seed="160112791" />
    <test-case id="1723" name="IsOrdered_AtLeastOneArgMustImplementIComparable" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.IsOrdered_AtLeastOneArgMustImplementIComparable" seed="1468659090" />
    <test-case id="1724" name="IsOrdered_Handles_custom_comparison" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.IsOrdered_Handles_custom_comparison" seed="412472180" />
    <test-case id="1725" name="IsOrdered_Handles_custom_comparison2" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.IsOrdered_Handles_custom_comparison2" seed="83270541" />
    <test-case id="1726" name="UsesProvidedComparerOfT" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.UsesProvidedComparerOfT" seed="1707682055" />
    <test-case id="1727" name="UsesProvidedComparisonOfT" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.UsesProvidedComparisonOfT" seed="1193962009" />
    <test-case id="1728" name="UsesProvidedLambda" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.UsesProvidedLambda" seed="1301261866" />
    <test-case id="1729" name="IsOrderedBy" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.IsOrderedBy" seed="1732722252" />
    <test-case id="1730" name="IsOrderedBy_Comparer" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.IsOrderedBy_Comparer" seed="83664688" />
    <test-case id="1731" name="IsOrderedBy_Handles_heterogeneous_classes_as_long_as_the_property_is_of_same_type" fullname="TCLite.Framework.Constraints.Tests.CollectionOrderedConstraintTests.IsOrderedBy_Handles_heterogeneous_classes_as_long_as_the_property_is_of_same_type" seed="1041371857" />
  </test-suite>
  <test-suite type="TestFixture" id="1732" name="CollectionSubsetConstraintTests" fullname="TCLite.Framework.Constraints.Tests.CollectionSubsetConstraintTests" testcasecount="6">
    <test-suite type="ParameterizedMethod" id="1734" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.CollectionSubsetConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="1735" name="SucceedsWithGoodValues(System.Int32[])" fullname="TCLite.Framework.Constraints.Tests.CollectionSubsetConstraintTests.SucceedsWithGoodValues(System.Int32[])" seed="771981416" />
      <test-case id="1736" name="SucceedsWithGoodValues(System.Int32[])" fullname="TCLite.Framework.Constraints.Tests.CollectionSubsetConstraintTests.SucceedsWithGoodValues(System.Int32[])" seed="1328138544" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1738" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.CollectionSubsetConstraintTests.FailsWithBadValues" testcasecount="2">
      <test-case id="1739" name="FailsWithBadValues(System.Int32[],&quot;&lt; 1, 3, 7 &gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.CollectionSubsetConstraintTests.FailsWithBadValues(System.Int32[],&quot;&lt; 1, 3, 7 &gt;&quot;)" seed="1932898405" />
      <test-case id="1740" name="FailsWithBadValues(System.Int32[],&quot;&lt; 1, 2, 2, 2, 5 &gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.CollectionSubsetConstraintTests.FailsWithBadValues(System.Int32[],&quot;&lt; 1, 2, 2, 2, 5 &gt;&quot;)" seed="1619548080" />
    </test-suite>
    <test-case id="1741" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.CollectionSubsetConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="2060167634" />
    <test-case id="1742" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.CollectionSubsetConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="537412488" />
  </test-suite>
  <test-suite type="TestFixture" id="1743" name="DelayedConstraintTest" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest" testcasecount="21">
    <test-suite type="ParameterizedMethod" id="1745" name="SucceedsWithGoodDelegates" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.SucceedsWithGoodDelegates" testcasecount="1">
      <test-case id="1746" name="SucceedsWithGoodDelegates(TCLite.Framework.Constraints.ActualValueDelegate`1[System.Object])" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.SucceedsWithGoodDelegates(TCLite.Framework.Constraints.ActualValueDelegate`1[System.Object])" seed="729230249" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1748" name="FailsWithBadDelegates" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.FailsWithBadDelegates" testcasecount="2">
      <test-case id="1749" name="FailsWithBadDelegates(TCLite.Framework.Constraints.ActualValueDelegate`1[System.Object])" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.FailsWithBadDelegates(TCLite.Framework.Constraints.ActualValueDelegate`1[System.Object])" seed="1321624100" />
      <test-case id="1750" name="FailsWithBadDelegates(TCLite.Framework.Constraints.ActualValueDelegate`1[System.Object])" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.FailsWithBadDelegates(TCLite.Framework.Constraints.ActualValueDelegate`1[System.Object])" seed="29182215" />
    </test-suite>
    <test-case id="1751" name="SimpleTest" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.SimpleTest" seed="1089715860" />
    <test-case id="1752" name="SimpleTestUsingReference" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.SimpleTestUsingReference" seed="1292410899" />
    <test-case id="1753" name="ThatOverload_ZeroDelayIsAllowed" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.ThatOverload_ZeroDelayIsAllowed" seed="1512299518" />
    <test-case id="1754" name="ThatOverload_DoesNotAcceptNegativeDelayValues" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.ThatOverload_DoesNotAcceptNegativeDelayValues" seed="1278946570" />
    <test-case id="1755" name="SimpleTestBoolDelegate" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.SimpleTestBoolDelegate" seed="151693334" />
    <test-case id="1756" name="ThatOverload_ZeroDelayIsAllowed_IntDelegate" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.ThatOverload_ZeroDelayIsAllowed_IntDelegate" seed="1803719382" />
    <test-case id="1757" name="ThatOverload_DoesNotAcceptNegativeDelayValues_IntDelegate" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.ThatOverload_DoesNotAcceptNegativeDelayValues_IntDelegate" seed="1777887948" />
    <test-case id="1758" name="CanTestContentsOfList" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.CanTestContentsOfList" seed="1613451024" />
    <test-case id="1759" name="CanTestContentsOfRefList" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.CanTestContentsOfRefList" seed="717542822" />
    <test-case id="1760" name="CanTestContentsOfDelegateReturningList" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.CanTestContentsOfDelegateReturningList" seed="24580379" />
    <test-case id="1761" name="CanTestInitiallyNullReference" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.CanTestInitiallyNullReference" seed="1292419155" />
    <test-case id="1762" name="CanTestInitiallyNullDelegate" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.CanTestInitiallyNullDelegate" seed="1130921332" />
    <test-suite type="ParameterizedMethod" id="1764" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.SucceedsWithGoodValues" testcasecount="1">
      <test-case id="1765" name="SucceedsWithGoodValues(True)" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.SucceedsWithGoodValues(True)" seed="453775783" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1767" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.FailsWithBadValues" testcasecount="3">
      <test-case id="1768" name="FailsWithBadValues(False,&quot;False&quot;)" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.FailsWithBadValues(False,&quot;False&quot;)" seed="563084857" />
      <test-case id="1769" name="FailsWithBadValues(0,&quot;0&quot;)" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.FailsWithBadValues(0,&quot;0&quot;)" seed="1387637883" />
      <test-case id="1770" name="FailsWithBadValues(null,&quot;null&quot;)" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.FailsWithBadValues(null,&quot;null&quot;)" seed="915920680" />
    </test-suite>
    <test-case id="1771" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="2015933724" />
    <test-case id="1772" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.DelayedConstraintTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1692892687" />
  </test-suite>
  <test-suite type="TestFixture" id="1773" name="EmptyConstraintTest" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest" testcasecount="10">
    <test-suite type="ParameterizedMethod" id="1775" name="InvalidDataThrowsArgumentException" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.InvalidDataThrowsArgumentException" testcasecount="2">
      <test-case id="1776" name="InvalidDataThrowsArgumentException(null)" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.InvalidDataThrowsArgumentException(null)" seed="517416772" />
      <test-case id="1777" name="InvalidDataThrowsArgumentException(5)" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.InvalidDataThrowsArgumentException(5)" seed="63074305" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1779" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.SucceedsWithGoodValues" testcasecount="4">
      <test-case id="1780" name="SucceedsWithGoodValues(System.Collections.Generic.List`1[System.Int32])" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.SucceedsWithGoodValues(System.Collections.Generic.List`1[System.Int32])" seed="2094131742" />
      <test-case id="1781" name="SucceedsWithGoodValues(&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.SucceedsWithGoodValues(&quot;&quot;)" seed="1427839738" />
      <test-case id="1782" name="SucceedsWithGoodValues(System.Object[])" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.SucceedsWithGoodValues(System.Object[])" seed="444221217" />
      <test-case id="1783" name="SucceedsWithGoodValues(TCLite.TestUtilities.SimpleObjectCollection)" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.SucceedsWithGoodValues(TCLite.TestUtilities.SimpleObjectCollection)" seed="1085555620" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1785" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.FailsWithBadValues" testcasecount="2">
      <test-case id="1786" name="FailsWithBadValues(&quot;Hello&quot;,&quot;\&quot;Hello\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.FailsWithBadValues(&quot;Hello&quot;,&quot;\&quot;Hello\&quot;&quot;)" seed="347312643" />
      <test-case id="1787" name="FailsWithBadValues(System.Object[],&quot;&lt; 1, 2, 3 &gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.FailsWithBadValues(System.Object[],&quot;&lt; 1, 2, 3 &gt;&quot;)" seed="2051701471" />
    </test-suite>
    <test-case id="1788" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="707884649" />
    <test-case id="1789" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.EmptyConstraintTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="2108618716" />
  </test-suite>
  <test-suite type="TestFixture" id="1790" name="NullOrEmptyStringConstraintTest" fullname="TCLite.Framework.Constraints.Tests.NullOrEmptyStringConstraintTest" testcasecount="6">
    <test-suite type="ParameterizedMethod" id="1792" name="InvalidDataThrowsArgumentException" fullname="TCLite.Framework.Constraints.Tests.NullOrEmptyStringConstraintTest.InvalidDataThrowsArgumentException" testcasecount="1">
      <test-case id="1793" name="InvalidDataThrowsArgumentException(5)" fullname="TCLite.Framework.Constraints.Tests.NullOrEmptyStringConstraintTest.InvalidDataThrowsArgumentException(5)" seed="1077606802" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1795" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.NullOrEmptyStringConstraintTest.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="1796" name="SucceedsWithGoodValues(&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.NullOrEmptyStringConstraintTest.SucceedsWithGoodValues(&quot;&quot;)" seed="1072401706" />
      <test-case id="1797" name="SucceedsWithGoodValues(null)" fullname="TCLite.Framework.Constraints.Tests.NullOrEmptyStringConstraintTest.SucceedsWithGoodValues(null)" seed="1455146217" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1799" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.NullOrEmptyStringConstraintTest.FailsWithBadValues" testcasecount="1">
      <test-case id="1800" name="FailsWithBadValues(&quot;Hello&quot;,&quot;\&quot;Hello\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.NullOrEmptyStringConstraintTest.FailsWithBadValues(&quot;Hello&quot;,&quot;\&quot;Hello\&quot;&quot;)" seed="1479416451" />
    </test-suite>
    <test-case id="1801" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.NullOrEmptyStringConstraintTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1362960327" />
    <test-case id="1802" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.NullOrEmptyStringConstraintTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1964761173" />
  </test-suite>
  <test-suite type="TestFixture" id="1803" name="EndsWithConstraintTests" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTests" testcasecount="9">
    <test-suite type="ParameterizedMethod" id="1805" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="1806" name="SucceedsWithGoodValues(&quot;hello&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTests.SucceedsWithGoodValues(&quot;hello&quot;)" seed="1732104956" />
      <test-case id="1807" name="SucceedsWithGoodValues(&quot;I said hello&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTests.SucceedsWithGoodValues(&quot;I said hello&quot;)" seed="2124504637" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1809" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTests.FailsWithBadValues" testcasecount="5">
      <test-case id="1810" name="FailsWithBadValues(&quot;goodbye&quot;,&quot;\&quot;goodbye\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTests.FailsWithBadValues(&quot;goodbye&quot;,&quot;\&quot;goodbye\&quot;&quot;)" seed="795296920" />
      <test-case id="1811" name="FailsWithBadValues(&quot;hello there&quot;,&quot;\&quot;hello there\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTests.FailsWithBadValues(&quot;hello there&quot;,&quot;\&quot;hello there\&quot;&quot;)" seed="189712520" />
      <test-case id="1812" name="FailsWithBadValues(&quot;say hello to Fred&quot;,&quot;\&quot;say hello to Fred\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTests.FailsWithBadValues(&quot;say hello to Fred&quot;,&quot;\&quot;say hello to Fred\&quot;&quot;)" seed="260778846" />
      <test-case id="1813" name="FailsWithBadValues(&quot;&quot;,&quot;&lt;string.Empty&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTests.FailsWithBadValues(&quot;&quot;,&quot;&lt;string.Empty&gt;&quot;)" seed="427034806" />
      <test-case id="1814" name="FailsWithBadValues(null,&quot;null&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTests.FailsWithBadValues(null,&quot;null&quot;)" seed="2077277754" />
    </test-suite>
    <test-case id="1815" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1727994632" />
    <test-case id="1816" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="583719044" />
  </test-suite>
  <test-suite type="TestFixture" id="1817" name="EndsWithConstraintTestsIgnoringCase" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase" testcasecount="10">
    <test-suite type="ParameterizedMethod" id="1819" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="1820" name="SucceedsWithGoodValues(&quot;HELLO&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase.SucceedsWithGoodValues(&quot;HELLO&quot;)" seed="1708141873" />
      <test-case id="1821" name="SucceedsWithGoodValues(&quot;I said Hello&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase.SucceedsWithGoodValues(&quot;I said Hello&quot;)" seed="938729180" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1823" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase.FailsWithBadValues" testcasecount="6">
      <test-case id="1824" name="FailsWithBadValues(&quot;goodbye&quot;,&quot;\&quot;goodbye\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase.FailsWithBadValues(&quot;goodbye&quot;,&quot;\&quot;goodbye\&quot;&quot;)" seed="2057934172" />
      <test-case id="1825" name="FailsWithBadValues(&quot;What the hell?&quot;,&quot;\&quot;What the hell?\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase.FailsWithBadValues(&quot;What the hell?&quot;,&quot;\&quot;What the hell?\&quot;&quot;)" seed="318205633" />
      <test-case id="1826" name="FailsWithBadValues(&quot;hello there&quot;,&quot;\&quot;hello there\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase.FailsWithBadValues(&quot;hello there&quot;,&quot;\&quot;hello there\&quot;&quot;)" seed="765053687" />
      <test-case id="1827" name="FailsWithBadValues(&quot;say hello to Fred&quot;,&quot;\&quot;say hello to Fred\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase.FailsWithBadValues(&quot;say hello to Fred&quot;,&quot;\&quot;say hello to Fred\&quot;&quot;)" seed="545260522" />
      <test-case id="1828" name="FailsWithBadValues(&quot;&quot;,&quot;&lt;string.Empty&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase.FailsWithBadValues(&quot;&quot;,&quot;&lt;string.Empty&gt;&quot;)" seed="703627400" />
      <test-case id="1829" name="FailsWithBadValues(null,&quot;null&quot;)" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase.FailsWithBadValues(null,&quot;null&quot;)" seed="44233910" />
    </test-suite>
    <test-case id="1830" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase.ConstraintTestBaseNoData.ProvidesProperDescription" seed="992003448" />
    <test-case id="1831" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.EndsWithConstraintTestsIgnoringCase.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="211813477" />
  </test-suite>
  <test-suite type="TestFixture" id="1832" name="EqualConstraintTest" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest" testcasecount="73">
    <test-suite type="ParameterizedMethod" id="1834" name="CanMatchSpecialFloatingPointValues" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSpecialFloatingPointValues" testcasecount="6">
      <test-case id="1835" name="CanMatchSpecialFloatingPointValues(double.NaN)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSpecialFloatingPointValues(double.NaN)" seed="1258549795" />
      <test-case id="1836" name="CanMatchSpecialFloatingPointValues(double.PositiveInfinity)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSpecialFloatingPointValues(double.PositiveInfinity)" seed="82534120" />
      <test-case id="1837" name="CanMatchSpecialFloatingPointValues(double.NegativeInfinity)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSpecialFloatingPointValues(double.NegativeInfinity)" seed="1809359769" />
      <test-case id="1838" name="CanMatchSpecialFloatingPointValues(float.NaN)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSpecialFloatingPointValues(float.NaN)" seed="848189682" />
      <test-case id="1839" name="CanMatchSpecialFloatingPointValues(float.PositiveInfinity)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSpecialFloatingPointValues(float.PositiveInfinity)" seed="426743898" />
      <test-case id="1840" name="CanMatchSpecialFloatingPointValues(float.NegativeInfinity)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSpecialFloatingPointValues(float.NegativeInfinity)" seed="931633927" />
    </test-suite>
    <test-case id="1841" name="CanMatchDates" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDates" seed="247475510" />
    <test-case id="1842" name="CanMatchDatesWithinTimeSpan" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDatesWithinTimeSpan" seed="1095834733" />
    <test-case id="1843" name="CanMatchDatesWithinDays" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDatesWithinDays" seed="1816752879" />
    <test-case id="1844" name="CanMatchDatesWithinHours" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDatesWithinHours" seed="535844222" />
    <test-case id="1845" name="CanMatchDatesWithinMinutes" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDatesWithinMinutes" seed="1792624763" />
    <test-case id="1846" name="CanMatchTimeSpanWithinMinutes" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchTimeSpanWithinMinutes" seed="716917809" />
    <test-case id="1847" name="CanMatchDatesWithinSeconds" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDatesWithinSeconds" seed="1960486351" />
    <test-case id="1848" name="CanMatchDatesWithinMilliseconds" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDatesWithinMilliseconds" seed="1915444652" />
    <test-case id="1849" name="CanMatchDatesWithinTicks" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDatesWithinTicks" seed="636498257" />
    <test-case id="1850" name="CanMatchHashtables_SameOrder" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchHashtables_SameOrder" seed="978463548" />
    <test-case id="1851" name="CanMatchHashtables_Failure" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchHashtables_Failure" seed="1410616893" />
    <test-case id="1852" name="CanMatchHashtables_DifferentOrder" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchHashtables_DifferentOrder" seed="120623760" />
    <test-case id="1853" name="CanMatchDictionaries_SameOrder" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDictionaries_SameOrder" seed="1826221204" />
    <test-case id="1854" name="CanMatchDictionaries_Failure" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDictionaries_Failure" seed="1432113841" />
    <test-suite type="ParameterizedMethod" id="1856" name="CanMatchDoublesWithUlpTolerance" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDoublesWithUlpTolerance" testcasecount="2">
      <test-case id="1857" name="CanMatchDoublesWithUlpTolerance(20000000000000004.0d)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDoublesWithUlpTolerance(20000000000000004.0d)" seed="90381966" />
      <test-case id="1858" name="CanMatchDoublesWithUlpTolerance(19999999999999996.0d)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDoublesWithUlpTolerance(19999999999999996.0d)" seed="133280198" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1860" name="FailsOnDoublesOutsideOfUlpTolerance" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsOnDoublesOutsideOfUlpTolerance" testcasecount="2">
      <test-case id="1861" name="FailsOnDoublesOutsideOfUlpTolerance(20000000000000008.0d)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsOnDoublesOutsideOfUlpTolerance(20000000000000008.0d)" seed="366137110" />
      <test-case id="1862" name="FailsOnDoublesOutsideOfUlpTolerance(19999999999999992.0d)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsOnDoublesOutsideOfUlpTolerance(19999999999999992.0d)" seed="844120694" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1864" name="CanMatchSinglesWithUlpTolerance" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSinglesWithUlpTolerance" testcasecount="2">
      <test-case id="1865" name="CanMatchSinglesWithUlpTolerance(19999998.0f)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSinglesWithUlpTolerance(19999998.0f)" seed="883562991" />
      <test-case id="1866" name="CanMatchSinglesWithUlpTolerance(20000002.0f)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSinglesWithUlpTolerance(20000002.0f)" seed="146826440" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1868" name="FailsOnSinglesOutsideOfUlpTolerance" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsOnSinglesOutsideOfUlpTolerance" testcasecount="2">
      <test-case id="1869" name="FailsOnSinglesOutsideOfUlpTolerance(19999996.0f)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsOnSinglesOutsideOfUlpTolerance(19999996.0f)" seed="436862118" />
      <test-case id="1870" name="FailsOnSinglesOutsideOfUlpTolerance(20000004.0f)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsOnSinglesOutsideOfUlpTolerance(20000004.0f)" seed="1733495838" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1872" name="CanMatchDoublesWithRelativeTolerance" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDoublesWithRelativeTolerance" testcasecount="3">
      <test-case id="1873" name="CanMatchDoublesWithRelativeTolerance(9500.0d)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDoublesWithRelativeTolerance(9500.0d)" seed="2090314609" />
      <test-case id="1874" name="CanMatchDoublesWithRelativeTolerance(10000.0d)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDoublesWithRelativeTolerance(10000.0d)" seed="1563358194" />
      <test-case id="1875" name="CanMatchDoublesWithRelativeTolerance(10500.0d)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchDoublesWithRelativeTolerance(10500.0d)" seed="373979402" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1877" name="FailsOnDoublesOutsideOfRelativeTolerance" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsOnDoublesOutsideOfRelativeTolerance" testcasecount="2">
      <test-case id="1878" name="FailsOnDoublesOutsideOfRelativeTolerance(8500.0d)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsOnDoublesOutsideOfRelativeTolerance(8500.0d)" seed="1028167796" />
      <test-case id="1879" name="FailsOnDoublesOutsideOfRelativeTolerance(11500.0d)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsOnDoublesOutsideOfRelativeTolerance(11500.0d)" seed="463142769" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1881" name="CanMatchSinglesWithRelativeTolerance" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSinglesWithRelativeTolerance" testcasecount="3">
      <test-case id="1882" name="CanMatchSinglesWithRelativeTolerance(9500.0f)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSinglesWithRelativeTolerance(9500.0f)" seed="1267602974" />
      <test-case id="1883" name="CanMatchSinglesWithRelativeTolerance(10000.0f)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSinglesWithRelativeTolerance(10000.0f)" seed="104410532" />
      <test-case id="1884" name="CanMatchSinglesWithRelativeTolerance(10500.0f)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.CanMatchSinglesWithRelativeTolerance(10500.0f)" seed="1882227053" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1886" name="FailsOnSinglesOutsideOfRelativeTolerance" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsOnSinglesOutsideOfRelativeTolerance" testcasecount="2">
      <test-case id="1887" name="FailsOnSinglesOutsideOfRelativeTolerance(8500.0f)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsOnSinglesOutsideOfRelativeTolerance(8500.0f)" seed="2070228834" />
      <test-case id="1888" name="FailsOnSinglesOutsideOfRelativeTolerance(11500.0f)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsOnSinglesOutsideOfRelativeTolerance(11500.0f)" seed="1276314955" />
    </test-suite>
    <test-case id="1889" name="ErrorWithPercentAndUlpsToleranceModes" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorWithPercentAndUlpsToleranceModes" seed="368553022" />
    <test-case id="1890" name="ErrorWithUlpsAndPercentToleranceModes" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorWithUlpsAndPercentToleranceModes" seed="1405562240" />
    <test-case id="1891" name="ErrorIfPercentPrecedesWithin" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfPercentPrecedesWithin" seed="13303336" />
    <test-case id="1892" name="ErrorIfUlpsPrecedesWithin" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfUlpsPrecedesWithin" seed="1478683720" />
    <test-case id="1893" name="ErrorIfDaysPrecedesWithin" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfDaysPrecedesWithin" seed="260524875" />
    <test-case id="1894" name="ErrorIfHoursPrecedesWithin" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfHoursPrecedesWithin" seed="1192150410" />
    <test-case id="1895" name="ErrorIfMinutesPrecedesWithin" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfMinutesPrecedesWithin" seed="938577928" />
    <test-case id="1896" name="ErrorIfSecondsPrecedesWithin" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfSecondsPrecedesWithin" seed="991224064" />
    <test-case id="1897" name="ErrorIfMillisecondsPrecedesWithin" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfMillisecondsPrecedesWithin" seed="1125726476" />
    <test-case id="1898" name="ErrorIfTicksPrecedesWithin" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfTicksPrecedesWithin" seed="142489520" />
    <test-suite type="ParameterizedMethod" id="1900" name="ErrorIfUlpsIsUsedOnIntegralType" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfUlpsIsUsedOnIntegralType" testcasecount="4">
      <test-case id="1901" name="ErrorIfUlpsIsUsedOnIntegralType(1000,1010)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfUlpsIsUsedOnIntegralType(1000,1010)" seed="1829191023" />
      <test-case id="1902" name="ErrorIfUlpsIsUsedOnIntegralType(1000,1010)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfUlpsIsUsedOnIntegralType(1000,1010)" seed="1934073786" />
      <test-case id="1903" name="ErrorIfUlpsIsUsedOnIntegralType(1000L,1010L)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfUlpsIsUsedOnIntegralType(1000L,1010L)" seed="1282127276" />
      <test-case id="1904" name="ErrorIfUlpsIsUsedOnIntegralType(1000UL,1010UL)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfUlpsIsUsedOnIntegralType(1000UL,1010UL)" seed="583003640" />
    </test-suite>
    <test-case id="1905" name="ErrorIfUlpsIsUsedOnDecimal" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ErrorIfUlpsIsUsedOnDecimal" seed="365496353" />
    <test-case id="1906" name="UsesProvidedIComparer" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.UsesProvidedIComparer" seed="1707373254" />
    <test-case id="1907" name="UsesProvidedEqualityComparer" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.UsesProvidedEqualityComparer" seed="121431511" />
    <test-case id="1908" name="UsesProvidedEqualityComparerOfT" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.UsesProvidedEqualityComparerOfT" seed="1125269597" />
    <test-case id="1909" name="UsesProvidedComparerOfT" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.UsesProvidedComparerOfT" seed="1863880657" />
    <test-case id="1910" name="UsesProvidedComparisonOfT" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.UsesProvidedComparisonOfT" seed="965239075" />
    <test-case id="1911" name="UsesProvidedLambda_IntArgs" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.UsesProvidedLambda_IntArgs" seed="2112110338" />
    <test-case id="1912" name="UsesProvidedLambda_StringArgs" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.UsesProvidedLambda_StringArgs" seed="279917458" />
    <test-case id="1913" name="UsesProvidedListComparer" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.UsesProvidedListComparer" seed="494771809" />
    <test-case id="1914" name="UsesProvidedArrayComparer" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.UsesProvidedArrayComparer" seed="661463319" />
    <test-suite type="ParameterizedMethod" id="1916" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.SucceedsWithGoodValues" testcasecount="4">
      <test-case id="1917" name="SucceedsWithGoodValues(4)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.SucceedsWithGoodValues(4)" seed="1153003771" />
      <test-case id="1918" name="SucceedsWithGoodValues(4.0f)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.SucceedsWithGoodValues(4.0f)" seed="253394685" />
      <test-case id="1919" name="SucceedsWithGoodValues(4.0d)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.SucceedsWithGoodValues(4.0d)" seed="161864820" />
      <test-case id="1920" name="SucceedsWithGoodValues(4.0000m)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.SucceedsWithGoodValues(4.0000m)" seed="764456967" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1922" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsWithBadValues" testcasecount="5">
      <test-case id="1923" name="FailsWithBadValues(5,&quot;5&quot;)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsWithBadValues(5,&quot;5&quot;)" seed="253775040" />
      <test-case id="1924" name="FailsWithBadValues(null,&quot;null&quot;)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsWithBadValues(null,&quot;null&quot;)" seed="692883377" />
      <test-case id="1925" name="FailsWithBadValues(&quot;Hello&quot;,&quot;\&quot;Hello\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsWithBadValues(&quot;Hello&quot;,&quot;\&quot;Hello\&quot;&quot;)" seed="1811034120" />
      <test-case id="1926" name="FailsWithBadValues(double.NaN,&quot;NaN&quot;)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsWithBadValues(double.NaN,&quot;NaN&quot;)" seed="901754851" />
      <test-case id="1927" name="FailsWithBadValues(double.PositiveInfinity,&quot;Infinity&quot;)" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.FailsWithBadValues(double.PositiveInfinity,&quot;Infinity&quot;)" seed="1055718361" />
    </test-suite>
    <test-case id="1928" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="134301938" />
    <test-case id="1929" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.EqualConstraintTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1899554385" />
  </test-suite>
  <test-suite type="TestFixture" id="1930" name="ExactCountConstraintTests" fullname="TCLite.Framework.Constraints.Tests.ExactCountConstraintTests" testcasecount="6">
    <test-case id="1931" name="ZeroItemsMatch" fullname="TCLite.Framework.Constraints.Tests.ExactCountConstraintTests.ZeroItemsMatch" seed="420658964" />
    <test-case id="1932" name="ZeroItemsMatchFails" fullname="TCLite.Framework.Constraints.Tests.ExactCountConstraintTests.ZeroItemsMatchFails" seed="1418810505" />
    <test-case id="1933" name="ExactlyOneItemMatches" fullname="TCLite.Framework.Constraints.Tests.ExactCountConstraintTests.ExactlyOneItemMatches" seed="759181893" />
    <test-case id="1934" name="ExactlyOneItemMatchFails" fullname="TCLite.Framework.Constraints.Tests.ExactCountConstraintTests.ExactlyOneItemMatchFails" seed="2020238970" />
    <test-case id="1935" name="ExactlyTwoItemsMatch" fullname="TCLite.Framework.Constraints.Tests.ExactCountConstraintTests.ExactlyTwoItemsMatch" seed="1321470347" />
    <test-case id="1936" name="ExactlyTwoItemsMatchFails" fullname="TCLite.Framework.Constraints.Tests.ExactCountConstraintTests.ExactlyTwoItemsMatchFails" seed="2053026413" />
  </test-suite>
  <test-suite type="TestFixture" id="1937" name="ExactTypeConstraintTests" fullname="TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests" testcasecount="5">
    <test-suite type="ParameterizedMethod" id="1939" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests.SucceedsWithGoodValues" testcasecount="1">
      <test-case id="1940" name="SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests+D1)" fullname="TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests.SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests+D1)" seed="2039822574" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1942" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests.FailsWithBadValues" testcasecount="2">
      <test-case id="1943" name="FailsWithBadValues(TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests+B,&quot;&lt;TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests+B&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests.FailsWithBadValues(TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests+B,&quot;&lt;TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests+B&gt;&quot;)" seed="1168583611" />
      <test-case id="1944" name="FailsWithBadValues(TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests+D2,&quot;&lt;TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests+D2&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests.FailsWithBadValues(TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests+D2,&quot;&lt;TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests+D2&gt;&quot;)" seed="294372598" />
    </test-suite>
    <test-case id="1945" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="2051788462" />
    <test-case id="1946" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.ExactTypeConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="156240823" />
  </test-suite>
  <test-suite type="TestFixture" id="1947" name="FloatingPointNumericsTest" fullname="TCLite.Framework.Constraints.Tests.FloatingPointNumericsTest" testcasecount="6">
    <test-case id="1948" name="FloatEqualityWithUlps" fullname="TCLite.Framework.Constraints.Tests.FloatingPointNumericsTest.FloatEqualityWithUlps" seed="281230918" />
    <test-case id="1949" name="DoubleEqualityWithUlps" fullname="TCLite.Framework.Constraints.Tests.FloatingPointNumericsTest.DoubleEqualityWithUlps" seed="1938459409" />
    <test-case id="1950" name="MirroredIntegerReinterpretation" fullname="TCLite.Framework.Constraints.Tests.FloatingPointNumericsTest.MirroredIntegerReinterpretation" seed="662671443" />
    <test-case id="1951" name="MirroredLongReinterpretation" fullname="TCLite.Framework.Constraints.Tests.FloatingPointNumericsTest.MirroredLongReinterpretation" seed="903253162" />
    <test-case id="1952" name="MirroredFloatReinterpretation" fullname="TCLite.Framework.Constraints.Tests.FloatingPointNumericsTest.MirroredFloatReinterpretation" seed="1146171463" />
    <test-case id="1953" name="MirroredDoubleReinterpretation" fullname="TCLite.Framework.Constraints.Tests.FloatingPointNumericsTest.MirroredDoubleReinterpretation" seed="1126624582" />
  </test-suite>
  <test-suite type="TestFixture" id="1954" name="GreaterThanConstraintTests" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests" testcasecount="14">
    <test-case id="1955" name="CanCompareIComparables" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.CanCompareIComparables" seed="18346396" />
    <test-case id="1956" name="CanCompareIComparablesOfT" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.CanCompareIComparablesOfT" seed="1104989759" />
    <test-case id="1957" name="ComparisonConstraintTest.UsesProvidedIComparer" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.ComparisonConstraintTest.UsesProvidedIComparer" seed="1311688264" />
    <test-case id="1958" name="ComparisonConstraintTest.UsesProvidedComparerOfT" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.ComparisonConstraintTest.UsesProvidedComparerOfT" seed="88635564" />
    <test-case id="1959" name="ComparisonConstraintTest.UsesProvidedComparisonOfT" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.ComparisonConstraintTest.UsesProvidedComparisonOfT" seed="910790431" />
    <test-case id="1960" name="ComparisonConstraintTest.UsesProvidedLambda" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.ComparisonConstraintTest.UsesProvidedLambda" seed="1499323664" />
    <test-suite type="ParameterizedMethod" id="1962" name="InvalidDataThrowsArgumentException" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.InvalidDataThrowsArgumentException" testcasecount="2">
      <test-case id="1963" name="InvalidDataThrowsArgumentException(null)" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.InvalidDataThrowsArgumentException(null)" seed="325679949" />
      <test-case id="1964" name="InvalidDataThrowsArgumentException(&quot;xxx&quot;)" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.InvalidDataThrowsArgumentException(&quot;xxx&quot;)" seed="7130190" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1966" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="1967" name="SucceedsWithGoodValues(6)" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.SucceedsWithGoodValues(6)" seed="1030285590" />
      <test-case id="1968" name="SucceedsWithGoodValues(5.001d)" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.SucceedsWithGoodValues(5.001d)" seed="174120961" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1970" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.FailsWithBadValues" testcasecount="2">
      <test-case id="1971" name="FailsWithBadValues(4,&quot;4&quot;)" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.FailsWithBadValues(4,&quot;4&quot;)" seed="737449024" />
      <test-case id="1972" name="FailsWithBadValues(5,&quot;5&quot;)" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.FailsWithBadValues(5,&quot;5&quot;)" seed="432843099" />
    </test-suite>
    <test-case id="1973" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="478939047" />
    <test-case id="1974" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.GreaterThanConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="927436172" />
  </test-suite>
  <test-suite type="TestFixture" id="1975" name="GreaterThanOrEqualConstraintTests" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests" testcasecount="13">
    <test-case id="1976" name="CanCompareIComparables" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.CanCompareIComparables" seed="878355425" />
    <test-case id="1977" name="CanCompareIComparablesOfT" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.CanCompareIComparablesOfT" seed="1147825338" />
    <test-case id="1978" name="ComparisonConstraintTest.UsesProvidedIComparer" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.ComparisonConstraintTest.UsesProvidedIComparer" seed="830932902" />
    <test-case id="1979" name="ComparisonConstraintTest.UsesProvidedComparerOfT" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.ComparisonConstraintTest.UsesProvidedComparerOfT" seed="2092321036" />
    <test-case id="1980" name="ComparisonConstraintTest.UsesProvidedComparisonOfT" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.ComparisonConstraintTest.UsesProvidedComparisonOfT" seed="288562749" />
    <test-case id="1981" name="ComparisonConstraintTest.UsesProvidedLambda" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.ComparisonConstraintTest.UsesProvidedLambda" seed="1509733265" />
    <test-suite type="ParameterizedMethod" id="1983" name="InvalidDataThrowsArgumentException" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.InvalidDataThrowsArgumentException" testcasecount="2">
      <test-case id="1984" name="InvalidDataThrowsArgumentException(null)" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.InvalidDataThrowsArgumentException(null)" seed="1252514274" />
      <test-case id="1985" name="InvalidDataThrowsArgumentException(&quot;xxx&quot;)" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.InvalidDataThrowsArgumentException(&quot;xxx&quot;)" seed="542410310" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1987" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="1988" name="SucceedsWithGoodValues(6)" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.SucceedsWithGoodValues(6)" seed="1059696309" />
      <test-case id="1989" name="SucceedsWithGoodValues(5)" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.SucceedsWithGoodValues(5)" seed="72287764" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="1991" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.FailsWithBadValues" testcasecount="1">
      <test-case id="1992" name="FailsWithBadValues(4,&quot;4&quot;)" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.FailsWithBadValues(4,&quot;4&quot;)" seed="1258817494" />
    </test-suite>
    <test-case id="1993" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="200399211" />
    <test-case id="1994" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.GreaterThanOrEqualConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="757158504" />
  </test-suite>
  <test-suite type="TestFixture" id="1995" name="InstanceOfTypeConstraintTests" fullname="TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests" testcasecount="5">
    <test-suite type="ParameterizedMethod" id="1997" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="1998" name="SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests+D1)" fullname="TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests.SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests+D1)" seed="996762948" />
      <test-case id="1999" name="SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests+D2)" fullname="TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests.SucceedsWithGoodValues(TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests+D2)" seed="2119647414" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2001" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests.FailsWithBadValues" testcasecount="1">
      <test-case id="2002" name="FailsWithBadValues(TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests+B,&quot;&lt;TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests+B&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests.FailsWithBadValues(TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests+B,&quot;&lt;TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests+B&gt;&quot;)" seed="370889058" />
    </test-suite>
    <test-case id="2003" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="101785524" />
    <test-case id="2004" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.InstanceOfTypeConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1498005525" />
  </test-suite>
  <test-suite type="TestFixture" id="2005" name="LessThanConstraintTests" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests" testcasecount="14">
    <test-case id="2006" name="CanCompareIComparables" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.CanCompareIComparables" seed="1694195561" />
    <test-case id="2007" name="CanCompareIComparablesOfT" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.CanCompareIComparablesOfT" seed="684409538" />
    <test-case id="2008" name="ComparisonConstraintTest.UsesProvidedIComparer" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.ComparisonConstraintTest.UsesProvidedIComparer" seed="883408455" />
    <test-case id="2009" name="ComparisonConstraintTest.UsesProvidedComparerOfT" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.ComparisonConstraintTest.UsesProvidedComparerOfT" seed="2098212249" />
    <test-case id="2010" name="ComparisonConstraintTest.UsesProvidedComparisonOfT" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.ComparisonConstraintTest.UsesProvidedComparisonOfT" seed="970097321" />
    <test-case id="2011" name="ComparisonConstraintTest.UsesProvidedLambda" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.ComparisonConstraintTest.UsesProvidedLambda" seed="1810918821" />
    <test-suite type="ParameterizedMethod" id="2013" name="InvalidDataThrowsArgumentException" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.InvalidDataThrowsArgumentException" testcasecount="2">
      <test-case id="2014" name="InvalidDataThrowsArgumentException(null)" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.InvalidDataThrowsArgumentException(null)" seed="1657352180" />
      <test-case id="2015" name="InvalidDataThrowsArgumentException(&quot;xxx&quot;)" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.InvalidDataThrowsArgumentException(&quot;xxx&quot;)" seed="2066970488" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2017" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="2018" name="SucceedsWithGoodValues(4)" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.SucceedsWithGoodValues(4)" seed="433501944" />
      <test-case id="2019" name="SucceedsWithGoodValues(4.999d)" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.SucceedsWithGoodValues(4.999d)" seed="2013108780" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2021" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.FailsWithBadValues" testcasecount="2">
      <test-case id="2022" name="FailsWithBadValues(6,&quot;6&quot;)" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.FailsWithBadValues(6,&quot;6&quot;)" seed="291184757" />
      <test-case id="2023" name="FailsWithBadValues(5,&quot;5&quot;)" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.FailsWithBadValues(5,&quot;5&quot;)" seed="1878905452" />
    </test-suite>
    <test-case id="2024" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1302373550" />
    <test-case id="2025" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.LessThanConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="735740512" />
  </test-suite>
  <test-suite type="TestFixture" id="2026" name="LessThanOrEqualConstraintTests" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests" testcasecount="13">
    <test-case id="2027" name="CanCompareIComparables" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.CanCompareIComparables" seed="1962917198" />
    <test-case id="2028" name="CanCompareIComparablesOfT" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.CanCompareIComparablesOfT" seed="1124352290" />
    <test-case id="2029" name="ComparisonConstraintTest.UsesProvidedIComparer" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.ComparisonConstraintTest.UsesProvidedIComparer" seed="1425369045" />
    <test-case id="2030" name="ComparisonConstraintTest.UsesProvidedComparerOfT" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.ComparisonConstraintTest.UsesProvidedComparerOfT" seed="1280889227" />
    <test-case id="2031" name="ComparisonConstraintTest.UsesProvidedComparisonOfT" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.ComparisonConstraintTest.UsesProvidedComparisonOfT" seed="1107526507" />
    <test-case id="2032" name="ComparisonConstraintTest.UsesProvidedLambda" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.ComparisonConstraintTest.UsesProvidedLambda" seed="717834054" />
    <test-suite type="ParameterizedMethod" id="2034" name="InvalidDataThrowsArgumentException" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.InvalidDataThrowsArgumentException" testcasecount="2">
      <test-case id="2035" name="InvalidDataThrowsArgumentException(null)" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.InvalidDataThrowsArgumentException(null)" seed="614690413" />
      <test-case id="2036" name="InvalidDataThrowsArgumentException(&quot;xxx&quot;)" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.InvalidDataThrowsArgumentException(&quot;xxx&quot;)" seed="1783921845" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2038" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="2039" name="SucceedsWithGoodValues(4)" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.SucceedsWithGoodValues(4)" seed="2021593955" />
      <test-case id="2040" name="SucceedsWithGoodValues(5)" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.SucceedsWithGoodValues(5)" seed="1623419733" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2042" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.FailsWithBadValues" testcasecount="1">
      <test-case id="2043" name="FailsWithBadValues(6,&quot;6&quot;)" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.FailsWithBadValues(6,&quot;6&quot;)" seed="45293450" />
    </test-suite>
    <test-case id="2044" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1239400500" />
    <test-case id="2045" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.LessThanOrEqualConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="977301717" />
  </test-suite>
  <test-suite type="TestFixture" id="2046" name="MsgUtilTests" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests" testcasecount="29">
    <test-suite type="ParameterizedMethod" id="2048" name="EscapeControlCharsTest" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest" testcasecount="21">
      <test-case id="2049" name="EscapeControlCharsTest(&quot;\n&quot;,&quot;\\n&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\n&quot;,&quot;\\n&quot;)" seed="710391220" />
      <test-case id="2050" name="EscapeControlCharsTest(&quot;\n\n&quot;,&quot;\\n\\n&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\n\n&quot;,&quot;\\n\\n&quot;)" seed="742165160" />
      <test-case id="2051" name="EscapeControlCharsTest(&quot;\n\n\n&quot;,&quot;\\n\\n\\n&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\n\n\n&quot;,&quot;\\n\\n\\n&quot;)" seed="1476400648" />
      <test-case id="2052" name="EscapeControlCharsTest(&quot;\r&quot;,&quot;\\r&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\r&quot;,&quot;\\r&quot;)" seed="34966423" />
      <test-case id="2053" name="EscapeControlCharsTest(&quot;\r\r&quot;,&quot;\\r\\r&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\r\r&quot;,&quot;\\r\\r&quot;)" seed="659396532" />
      <test-case id="2054" name="EscapeControlCharsTest(&quot;\r\r\r&quot;,&quot;\\r\\r\\r&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\r\r\r&quot;,&quot;\\r\\r\\r&quot;)" seed="72335437" />
      <test-case id="2055" name="EscapeControlCharsTest(&quot;\r\n&quot;,&quot;\\r\\n&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\r\n&quot;,&quot;\\r\\n&quot;)" seed="1386927146" />
      <test-case id="2056" name="EscapeControlCharsTest(&quot;\n\r&quot;,&quot;\\n\\r&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\n\r&quot;,&quot;\\n\\r&quot;)" seed="886131185" />
      <test-case id="2057" name="EscapeControlCharsTest(&quot;This is a\rtest message&quot;,&quot;This is a\\rtest message&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;This is a\rtest message&quot;,&quot;This is a\\rtest message&quot;)" seed="1942013156" />
      <test-case id="2058" name="EscapeControlCharsTest(&quot;&quot;,&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;&quot;,&quot;&quot;)" seed="44027717" />
      <test-case id="2059" name="EscapeControlCharsTest(null,null)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(null,null)" seed="927626823" />
      <test-case id="2060" name="EscapeControlCharsTest(&quot;\t&quot;,&quot;\\t&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\t&quot;,&quot;\\t&quot;)" seed="177728017" />
      <test-case id="2061" name="EscapeControlCharsTest(&quot;\t\n&quot;,&quot;\\t\\n&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\t\n&quot;,&quot;\\t\\n&quot;)" seed="1167497728" />
      <test-case id="2062" name="EscapeControlCharsTest(&quot;\\r\\n&quot;,&quot;\\\\r\\\\n&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\\r\\n&quot;,&quot;\\\\r\\\\n&quot;)" seed="434968856" />
      <test-case id="2063" name="EscapeControlCharsTest(&quot;\a&quot;,&quot;\\a&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\a&quot;,&quot;\\a&quot;)" seed="369075908" />
      <test-case id="2064" name="EscapeControlCharsTest(&quot;\b&quot;,&quot;\\b&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\b&quot;,&quot;\\b&quot;)" seed="1076231321" />
      <test-case id="2065" name="EscapeControlCharsTest(&quot;\f&quot;,&quot;\\f&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\f&quot;,&quot;\\f&quot;)" seed="1386889141" />
      <test-case id="2066" name="EscapeControlCharsTest(&quot;\v&quot;,&quot;\\v&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\v&quot;,&quot;\\v&quot;)" seed="251225553" />
      <test-case id="2067" name="EscapeControlCharsTest(&quot;\x0085&quot;,&quot;\\x0085&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\x0085&quot;,&quot;\\x0085&quot;)" seed="1328274504">
        <properties>
          <property name="Description" value="Next line character" />
        </properties>
      </test-case>
      <test-case id="2068" name="EscapeControlCharsTest(&quot;\x2028&quot;,&quot;\\x2028&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\x2028&quot;,&quot;\\x2028&quot;)" seed="917397861">
        <properties>
          <property name="Description" value="Line separator character" />
        </properties>
      </test-case>
      <test-case id="2069" name="EscapeControlCharsTest(&quot;\x2029&quot;,&quot;\\x2029&quot;)" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeControlCharsTest(&quot;\x2029&quot;,&quot;\\x2029&quot;)" seed="523076982">
        <properties>
          <property name="Description" value="Paragraph separator character" />
        </properties>
      </test-case>
    </test-suite>
    <test-case id="2070" name="EscapeNullCharInString" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.EscapeNullCharInString" seed="384965660" />
    <test-suite type="ParameterizedMethod" id="2072" name="TestClipString" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.TestClipString" testcasecount="4">
      <test-case id="2073" name="NoClippingNeeded" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.NoClippingNeeded" seed="1780289861" />
      <test-case id="2074" name="ClipAtEnd" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.ClipAtEnd" seed="1718877550" />
      <test-case id="2075" name="ClipAtStart" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.ClipAtStart" seed="838758187" />
      <test-case id="2076" name="ClipAtStartAndEnd" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.ClipAtStartAndEnd" seed="1410846198" />
    </test-suite>
    <test-case id="2077" name="ClipExpectedAndActual_StringsFitInLine" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.ClipExpectedAndActual_StringsFitInLine" seed="1531435117" />
    <test-case id="2078" name="ClipExpectedAndActual_StringTailsFitInLine" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.ClipExpectedAndActual_StringTailsFitInLine" seed="883315112" />
    <test-case id="2079" name="ClipExpectedAndActual_StringsDoNotFitInLine" fullname="TCLite.Framework.Constraints.Tests.MsgUtilTests.ClipExpectedAndActual_StringsDoNotFitInLine" seed="2057757363" />
  </test-suite>
  <test-suite type="TestFixture" id="2080" name="NotConstraintTests" fullname="TCLite.Framework.Constraints.Tests.NotConstraintTests" testcasecount="9">
    <test-case id="2081" name="NotHonorsIgnoreCaseUsingConstructors" fullname="TCLite.Framework.Constraints.Tests.NotConstraintTests.NotHonorsIgnoreCaseUsingConstructors" seed="810299230" />
    <test-case id="2082" name="NotHonorsIgnoreCaseUsingPrefixNotation" fullname="TCLite.Framework.Constraints.Tests.NotConstraintTests.NotHonorsIgnoreCaseUsingPrefixNotation" seed="1407472369" />
    <test-case id="2083" name="NotHonorsTolerance" fullname="TCLite.Framework.Constraints.Tests.NotConstraintTests.NotHonorsTolerance" seed="2052918799" />
    <test-case id="2084" name="CanUseNotOperator" fullname="TCLite.Framework.Constraints.Tests.NotConstraintTests.CanUseNotOperator" seed="1878180468" />
    <test-suite type="ParameterizedMethod" id="2086" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.NotConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="2087" name="SucceedsWithGoodValues(42)" fullname="TCLite.Framework.Constraints.Tests.NotConstraintTests.SucceedsWithGoodValues(42)" seed="833617104" />
      <test-case id="2088" name="SucceedsWithGoodValues(&quot;Hello&quot;)" fullname="TCLite.Framework.Constraints.Tests.NotConstraintTests.SucceedsWithGoodValues(&quot;Hello&quot;)" seed="946960960" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2090" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.NotConstraintTests.FailsWithBadValues" testcasecount="1">
      <test-case id="2091" name="FailsWithBadValues(null,&quot;null&quot;)" fullname="TCLite.Framework.Constraints.Tests.NotConstraintTests.FailsWithBadValues(null,&quot;null&quot;)" seed="1324805328" />
    </test-suite>
    <test-case id="2092" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.NotConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1104584943" />
    <test-case id="2093" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.NotConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1978142357" />
  </test-suite>
  <test-suite type="TestFixture" id="2094" name="NumericsTest" fullname="TCLite.Framework.Constraints.Tests.NumericsTest" testcasecount="30">
    <test-suite type="ParameterizedMethod" id="2096" name="CanMatchWithoutToleranceMode" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchWithoutToleranceMode" testcasecount="6">
      <test-case id="2097" name="CanMatchWithoutToleranceMode(123456789)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchWithoutToleranceMode(123456789)" seed="1779271872" />
      <test-case id="2098" name="CanMatchWithoutToleranceMode(123456789)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchWithoutToleranceMode(123456789)" seed="1806570015" />
      <test-case id="2099" name="CanMatchWithoutToleranceMode(123456789L)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchWithoutToleranceMode(123456789L)" seed="2062930051" />
      <test-case id="2100" name="CanMatchWithoutToleranceMode(123456789UL)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchWithoutToleranceMode(123456789UL)" seed="1997092974" />
      <test-case id="2101" name="CanMatchWithoutToleranceMode(1234.5677f)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchWithoutToleranceMode(1234.5677f)" seed="20904042" />
      <test-case id="2102" name="CanMatchWithoutToleranceMode(1234.5678d)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchWithoutToleranceMode(1234.5678d)" seed="1080324573" />
    </test-suite>
    <test-case id="2103" name="CanMatchDecimalWithoutToleranceMode" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchDecimalWithoutToleranceMode" seed="497742222" />
    <test-suite type="ParameterizedMethod" id="2105" name="CanMatchIntegralsWithPercentage" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage" testcasecount="12">
      <test-case id="2106" name="CanMatchIntegralsWithPercentage(9500)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage(9500)" seed="1103161210" />
      <test-case id="2107" name="CanMatchIntegralsWithPercentage(10000)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage(10000)" seed="2087512426" />
      <test-case id="2108" name="CanMatchIntegralsWithPercentage(10500)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage(10500)" seed="282865198" />
      <test-case id="2109" name="CanMatchIntegralsWithPercentage(9500)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage(9500)" seed="245614505" />
      <test-case id="2110" name="CanMatchIntegralsWithPercentage(10000)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage(10000)" seed="707690524" />
      <test-case id="2111" name="CanMatchIntegralsWithPercentage(10500)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage(10500)" seed="634704814" />
      <test-case id="2112" name="CanMatchIntegralsWithPercentage(9500L)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage(9500L)" seed="1372194180" />
      <test-case id="2113" name="CanMatchIntegralsWithPercentage(10000L)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage(10000L)" seed="864502593" />
      <test-case id="2114" name="CanMatchIntegralsWithPercentage(10500L)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage(10500L)" seed="322002639" />
      <test-case id="2115" name="CanMatchIntegralsWithPercentage(9500UL)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage(9500UL)" seed="454224735" />
      <test-case id="2116" name="CanMatchIntegralsWithPercentage(10000UL)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage(10000UL)" seed="325425560" />
      <test-case id="2117" name="CanMatchIntegralsWithPercentage(10500UL)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchIntegralsWithPercentage(10500UL)" seed="1109358946" />
    </test-suite>
    <test-case id="2118" name="CanMatchDecimalWithPercentage" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.CanMatchDecimalWithPercentage" seed="1905006745" />
    <test-suite type="ParameterizedMethod" id="2120" name="FailsOnIntegralsOutsideOfPercentage" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.FailsOnIntegralsOutsideOfPercentage" testcasecount="8">
      <test-case id="2121" name="FailsOnIntegralsOutsideOfPercentage(8500)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.FailsOnIntegralsOutsideOfPercentage(8500)" seed="1343691883" />
      <test-case id="2122" name="FailsOnIntegralsOutsideOfPercentage(11500)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.FailsOnIntegralsOutsideOfPercentage(11500)" seed="1396033981" />
      <test-case id="2123" name="FailsOnIntegralsOutsideOfPercentage(8500)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.FailsOnIntegralsOutsideOfPercentage(8500)" seed="688383967" />
      <test-case id="2124" name="FailsOnIntegralsOutsideOfPercentage(11500)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.FailsOnIntegralsOutsideOfPercentage(11500)" seed="503612034" />
      <test-case id="2125" name="FailsOnIntegralsOutsideOfPercentage(8500L)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.FailsOnIntegralsOutsideOfPercentage(8500L)" seed="975857469" />
      <test-case id="2126" name="FailsOnIntegralsOutsideOfPercentage(11500L)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.FailsOnIntegralsOutsideOfPercentage(11500L)" seed="1131713926" />
      <test-case id="2127" name="FailsOnIntegralsOutsideOfPercentage(8500UL)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.FailsOnIntegralsOutsideOfPercentage(8500UL)" seed="784038995" />
      <test-case id="2128" name="FailsOnIntegralsOutsideOfPercentage(11500UL)" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.FailsOnIntegralsOutsideOfPercentage(11500UL)" seed="1022191671" />
    </test-suite>
    <test-case id="2129" name="FailsOnDecimalBelowPercentage" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.FailsOnDecimalBelowPercentage" seed="447031196" />
    <test-case id="2130" name="FailsOnDecimalAbovePercentage" fullname="TCLite.Framework.Constraints.Tests.NumericsTest.FailsOnDecimalAbovePercentage" seed="333880624" />
  </test-suite>
  <test-suite type="TestFixture" id="2131" name="NUnitComparerTests" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests" testcasecount="20">
    <test-suite type="ParameterizedMethod" id="2133" name="EqualItems" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.EqualItems" testcasecount="10">
      <test-case id="2134" name="EqualItems(4,4)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.EqualItems(4,4)" seed="1635491543" />
      <test-case id="2135" name="EqualItems(4.0d,4.0d)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.EqualItems(4.0d,4.0d)" seed="1191754227" />
      <test-case id="2136" name="EqualItems(4.0f,4.0f)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.EqualItems(4.0f,4.0f)" seed="2119130025" />
      <test-case id="2137" name="EqualItems(4,4.0d)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.EqualItems(4,4.0d)" seed="1556230431" />
      <test-case id="2138" name="EqualItems(4,4.0f)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.EqualItems(4,4.0f)" seed="619437328" />
      <test-case id="2139" name="EqualItems(4.0d,4)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.EqualItems(4.0d,4)" seed="1669188136" />
      <test-case id="2140" name="EqualItems(4.0d,4.0f)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.EqualItems(4.0d,4.0f)" seed="1001951457" />
      <test-case id="2141" name="EqualItems(4.0f,4)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.EqualItems(4.0f,4)" seed="673467655" />
      <test-case id="2142" name="EqualItems(4.0f,4.0d)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.EqualItems(4.0f,4.0d)" seed="364061618" />
      <test-case id="2143" name="EqualItems(null,null)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.EqualItems(null,null)" seed="699965288" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2145" name="UnequalItems" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.UnequalItems" testcasecount="10">
      <test-case id="2146" name="UnequalItems(4,2)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.UnequalItems(4,2)" seed="1221135328" />
      <test-case id="2147" name="UnequalItems(4.0d,2.0d)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.UnequalItems(4.0d,2.0d)" seed="1883080624" />
      <test-case id="2148" name="UnequalItems(4.0f,2.0f)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.UnequalItems(4.0f,2.0f)" seed="1470817419" />
      <test-case id="2149" name="UnequalItems(4,2.0d)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.UnequalItems(4,2.0d)" seed="1248569919" />
      <test-case id="2150" name="UnequalItems(4,2.0f)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.UnequalItems(4,2.0f)" seed="637700607" />
      <test-case id="2151" name="UnequalItems(4.0d,2)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.UnequalItems(4.0d,2)" seed="1350066839" />
      <test-case id="2152" name="UnequalItems(4.0d,2.0f)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.UnequalItems(4.0d,2.0f)" seed="175594416" />
      <test-case id="2153" name="UnequalItems(4.0f,2)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.UnequalItems(4.0f,2)" seed="35278189" />
      <test-case id="2154" name="UnequalItems(4.0f,2.0d)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.UnequalItems(4.0f,2.0d)" seed="1188416206" />
      <test-case id="2155" name="UnequalItems(4,null)" fullname="TCLite.Framework.Constraints.Tests.NUnitComparerTests.UnequalItems(4,null)" seed="1556177829" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="2156" name="OrConstraintTests" fullname="TCLite.Framework.Constraints.Tests.OrConstraintTests" testcasecount="6">
    <test-case id="2157" name="CanCombineTestsWithOrOperator" fullname="TCLite.Framework.Constraints.Tests.OrConstraintTests.CanCombineTestsWithOrOperator" seed="379392369" />
    <test-suite type="ParameterizedMethod" id="2159" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.OrConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="2160" name="SucceedsWithGoodValues(99)" fullname="TCLite.Framework.Constraints.Tests.OrConstraintTests.SucceedsWithGoodValues(99)" seed="621535400" />
      <test-case id="2161" name="SucceedsWithGoodValues(42)" fullname="TCLite.Framework.Constraints.Tests.OrConstraintTests.SucceedsWithGoodValues(42)" seed="215446382" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2163" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.OrConstraintTests.FailsWithBadValues" testcasecount="1">
      <test-case id="2164" name="FailsWithBadValues(37,&quot;37&quot;)" fullname="TCLite.Framework.Constraints.Tests.OrConstraintTests.FailsWithBadValues(37,&quot;37&quot;)" seed="1347061845" />
    </test-suite>
    <test-case id="2165" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.OrConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="634450474" />
    <test-case id="2166" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.OrConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="383237891" />
  </test-suite>
  <test-suite type="TestFixture" id="2167" name="PredicateConstraintTests" fullname="TCLite.Framework.Constraints.Tests.PredicateConstraintTests" testcasecount="6">
    <test-case id="2168" name="CanUseConstraintExpressionSyntax" fullname="TCLite.Framework.Constraints.Tests.PredicateConstraintTests.CanUseConstraintExpressionSyntax" seed="1118186048" />
    <test-suite type="ParameterizedMethod" id="2170" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.PredicateConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="2171" name="SucceedsWithGoodValues(0)" fullname="TCLite.Framework.Constraints.Tests.PredicateConstraintTests.SucceedsWithGoodValues(0)" seed="1559318017" />
      <test-case id="2172" name="SucceedsWithGoodValues(-5)" fullname="TCLite.Framework.Constraints.Tests.PredicateConstraintTests.SucceedsWithGoodValues(-5)" seed="1021235505" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2174" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.PredicateConstraintTests.FailsWithBadValues" testcasecount="1">
      <test-case id="2175" name="FailsWithBadValues(123,&quot;123&quot;)" fullname="TCLite.Framework.Constraints.Tests.PredicateConstraintTests.FailsWithBadValues(123,&quot;123&quot;)" seed="1036673763" />
    </test-suite>
    <test-case id="2176" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.PredicateConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="296285578" />
    <test-case id="2177" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.PredicateConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1623034198" />
  </test-suite>
  <test-suite type="TestFixture" id="2178" name="PropertyExistsTest" fullname="TCLite.Framework.Constraints.Tests.PropertyExistsTest" testcasecount="8">
    <test-suite type="ParameterizedMethod" id="2180" name="InvalidDataThrowsException" fullname="TCLite.Framework.Constraints.Tests.PropertyExistsTest.InvalidDataThrowsException" testcasecount="0" />
    <test-suite type="ParameterizedMethod" id="2182" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.PropertyExistsTest.SucceedsWithGoodValues" testcasecount="3">
      <test-case id="2183" name="SucceedsWithGoodValues(System.Int32[])" fullname="TCLite.Framework.Constraints.Tests.PropertyExistsTest.SucceedsWithGoodValues(System.Int32[])" seed="656130014" />
      <test-case id="2184" name="SucceedsWithGoodValues(&quot;hello&quot;)" fullname="TCLite.Framework.Constraints.Tests.PropertyExistsTest.SucceedsWithGoodValues(&quot;hello&quot;)" seed="1753631802" />
      <test-case id="2185" name="SucceedsWithGoodValues(System.Array)" fullname="TCLite.Framework.Constraints.Tests.PropertyExistsTest.SucceedsWithGoodValues(System.Array)" seed="794857302" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2187" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.PropertyExistsTest.FailsWithBadValues" testcasecount="3">
      <test-case id="2188" name="FailsWithBadValues(42,&quot;&lt;System.Int32&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.PropertyExistsTest.FailsWithBadValues(42,&quot;&lt;System.Int32&gt;&quot;)" seed="1201343925" />
      <test-case id="2189" name="FailsWithBadValues(TCLite.TestUtilities.SimpleObjectCollection,&quot;&lt;TCLite.TestUtilities.SimpleObjectCollection&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.PropertyExistsTest.FailsWithBadValues(TCLite.TestUtilities.SimpleObjectCollection,&quot;&lt;TCLite.TestUtilities.SimpleObjectCollection&gt;&quot;)" seed="736044146" />
      <test-case id="2190" name="FailsWithBadValues(System.Int32,&quot;&lt;System.Int32&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.PropertyExistsTest.FailsWithBadValues(System.Int32,&quot;&lt;System.Int32&gt;&quot;)" seed="1225958030" />
    </test-suite>
    <test-case id="2191" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.PropertyExistsTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="752756852" />
    <test-case id="2192" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.PropertyExistsTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1342798104" />
  </test-suite>
  <test-suite type="TestFixture" id="2193" name="PropertyTest" fullname="TCLite.Framework.Constraints.Tests.PropertyTest" testcasecount="7">
    <test-case id="2194" name="PropertyEqualToValueWithTolerance" fullname="TCLite.Framework.Constraints.Tests.PropertyTest.PropertyEqualToValueWithTolerance" seed="1467534829" />
    <test-suite type="ParameterizedMethod" id="2196" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.PropertyTest.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="2197" name="SucceedsWithGoodValues(System.Int32[])" fullname="TCLite.Framework.Constraints.Tests.PropertyTest.SucceedsWithGoodValues(System.Int32[])" seed="1928240727" />
      <test-case id="2198" name="SucceedsWithGoodValues(&quot;hello&quot;)" fullname="TCLite.Framework.Constraints.Tests.PropertyTest.SucceedsWithGoodValues(&quot;hello&quot;)" seed="2108847589" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2200" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.PropertyTest.FailsWithBadValues" testcasecount="2">
      <test-case id="2201" name="FailsWithBadValues(System.Int32[],&quot;3&quot;)" fullname="TCLite.Framework.Constraints.Tests.PropertyTest.FailsWithBadValues(System.Int32[],&quot;3&quot;)" seed="409393658" />
      <test-case id="2202" name="FailsWithBadValues(&quot;goodbye&quot;,&quot;7&quot;)" fullname="TCLite.Framework.Constraints.Tests.PropertyTest.FailsWithBadValues(&quot;goodbye&quot;,&quot;7&quot;)" seed="683871417" />
    </test-suite>
    <test-case id="2203" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.PropertyTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1608094906" />
    <test-case id="2204" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.PropertyTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="2072700209" />
  </test-suite>
  <test-suite type="TestFixture" id="2205" name="RangeConstraintTest" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest" testcasecount="13">
    <test-case id="2206" name="UsesProvidedIComparer" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.UsesProvidedIComparer" seed="1587297695" />
    <test-case id="2207" name="UsesProvidedComparerOfT" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.UsesProvidedComparerOfT" seed="2013395074" />
    <test-case id="2208" name="UsesProvidedComparisonOfT" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.UsesProvidedComparisonOfT" seed="1773274277" />
    <test-case id="2209" name="UsesProvidedLambda" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.UsesProvidedLambda" seed="956119510" />
    <test-suite type="ParameterizedMethod" id="2211" name="InvalidDataThrowsArgumentException" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.InvalidDataThrowsArgumentException" testcasecount="2">
      <test-case id="2212" name="InvalidDataThrowsArgumentException(null)" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.InvalidDataThrowsArgumentException(null)" seed="748760806" />
      <test-case id="2213" name="InvalidDataThrowsArgumentException(&quot;xxx&quot;)" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.InvalidDataThrowsArgumentException(&quot;xxx&quot;)" seed="1981259112" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2215" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.SucceedsWithGoodValues" testcasecount="3">
      <test-case id="2216" name="SucceedsWithGoodValues(5)" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.SucceedsWithGoodValues(5)" seed="1038337014" />
      <test-case id="2217" name="SucceedsWithGoodValues(23)" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.SucceedsWithGoodValues(23)" seed="2101971902" />
      <test-case id="2218" name="SucceedsWithGoodValues(42)" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.SucceedsWithGoodValues(42)" seed="1013956143" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2220" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.FailsWithBadValues" testcasecount="2">
      <test-case id="2221" name="FailsWithBadValues(4,&quot;4&quot;)" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.FailsWithBadValues(4,&quot;4&quot;)" seed="976307845" />
      <test-case id="2222" name="FailsWithBadValues(43,&quot;43&quot;)" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.FailsWithBadValues(43,&quot;43&quot;)" seed="772068180" />
    </test-suite>
    <test-case id="2223" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="921779957" />
    <test-case id="2224" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.RangeConstraintTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="236199437" />
  </test-suite>
  <test-suite type="TestFixture" id="2225" name="RangeTests" fullname="TCLite.Framework.Constraints.Tests.RangeTests" testcasecount="4">
    <test-case id="2226" name="InRangeSucceeds" fullname="TCLite.Framework.Constraints.Tests.RangeTests.InRangeSucceeds" seed="551002088" />
    <test-case id="2227" name="InRangeFails" fullname="TCLite.Framework.Constraints.Tests.RangeTests.InRangeFails" seed="1590117087" />
    <test-case id="2228" name="NotInRangeSucceeds" fullname="TCLite.Framework.Constraints.Tests.RangeTests.NotInRangeSucceeds" seed="1799715797" />
    <test-case id="2229" name="NotInRangeFails" fullname="TCLite.Framework.Constraints.Tests.RangeTests.NotInRangeFails" seed="1474871502" />
  </test-suite>
  <test-suite type="TestFixture" id="2230" name="SameAsTest" fullname="TCLite.Framework.Constraints.Tests.SameAsTest" testcasecount="6">
    <test-suite type="ParameterizedMethod" id="2232" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.SameAsTest.SucceedsWithGoodValues" testcasecount="1">
      <test-case id="2233" name="SucceedsWithGoodValues(System.Object)" fullname="TCLite.Framework.Constraints.Tests.SameAsTest.SucceedsWithGoodValues(System.Object)" seed="403679710" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2235" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.SameAsTest.FailsWithBadValues" testcasecount="3">
      <test-case id="2236" name="FailsWithBadValues(System.Object,&quot;&lt;System.Object&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.SameAsTest.FailsWithBadValues(System.Object,&quot;&lt;System.Object&gt;&quot;)" seed="1745584777" />
      <test-case id="2237" name="FailsWithBadValues(3,&quot;3&quot;)" fullname="TCLite.Framework.Constraints.Tests.SameAsTest.FailsWithBadValues(3,&quot;3&quot;)" seed="1226950610" />
      <test-case id="2238" name="FailsWithBadValues(&quot;Hello&quot;,&quot;\&quot;Hello\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.SameAsTest.FailsWithBadValues(&quot;Hello&quot;,&quot;\&quot;Hello\&quot;&quot;)" seed="1864669264" />
    </test-suite>
    <test-case id="2239" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.SameAsTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="453712617" />
    <test-case id="2240" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.SameAsTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1583840329" />
  </test-suite>
  <test-suite type="TestFixture" id="2241" name="StartsWithConstraintTests" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests" testcasecount="10">
    <test-suite type="ParameterizedMethod" id="2243" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="2244" name="SucceedsWithGoodValues(&quot;hello&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests.SucceedsWithGoodValues(&quot;hello&quot;)" seed="614022693" />
      <test-case id="2245" name="SucceedsWithGoodValues(&quot;hello there&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests.SucceedsWithGoodValues(&quot;hello there&quot;)" seed="1097120033" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2247" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests.FailsWithBadValues" testcasecount="6">
      <test-case id="2248" name="FailsWithBadValues(&quot;goodbye&quot;,&quot;\&quot;goodbye\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests.FailsWithBadValues(&quot;goodbye&quot;,&quot;\&quot;goodbye\&quot;&quot;)" seed="1430004984" />
      <test-case id="2249" name="FailsWithBadValues(&quot;HELLO THERE&quot;,&quot;\&quot;HELLO THERE\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests.FailsWithBadValues(&quot;HELLO THERE&quot;,&quot;\&quot;HELLO THERE\&quot;&quot;)" seed="1993101749" />
      <test-case id="2250" name="FailsWithBadValues(&quot;I said hello&quot;,&quot;\&quot;I said hello\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests.FailsWithBadValues(&quot;I said hello&quot;,&quot;\&quot;I said hello\&quot;&quot;)" seed="88643000" />
      <test-case id="2251" name="FailsWithBadValues(&quot;say hello to Fred&quot;,&quot;\&quot;say hello to Fred\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests.FailsWithBadValues(&quot;say hello to Fred&quot;,&quot;\&quot;say hello to Fred\&quot;&quot;)" seed="598635289" />
      <test-case id="2252" name="FailsWithBadValues(&quot;&quot;,&quot;&lt;string.Empty&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests.FailsWithBadValues(&quot;&quot;,&quot;&lt;string.Empty&gt;&quot;)" seed="660171458" />
      <test-case id="2253" name="FailsWithBadValues(null,&quot;null&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests.FailsWithBadValues(null,&quot;null&quot;)" seed="1953536371" />
    </test-suite>
    <test-case id="2254" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="663190428" />
    <test-case id="2255" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1173839215" />
  </test-suite>
  <test-suite type="TestFixture" id="2256" name="StartsWithConstraintTestsIgnoringCase" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase" testcasecount="10">
    <test-suite type="ParameterizedMethod" id="2258" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="2259" name="SucceedsWithGoodValues(&quot;Hello&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase.SucceedsWithGoodValues(&quot;Hello&quot;)" seed="458021329" />
      <test-case id="2260" name="SucceedsWithGoodValues(&quot;HELLO there&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase.SucceedsWithGoodValues(&quot;HELLO there&quot;)" seed="1678372000" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2262" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase.FailsWithBadValues" testcasecount="6">
      <test-case id="2263" name="FailsWithBadValues(&quot;goodbye&quot;,&quot;\&quot;goodbye\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase.FailsWithBadValues(&quot;goodbye&quot;,&quot;\&quot;goodbye\&quot;&quot;)" seed="1693406590" />
      <test-case id="2264" name="FailsWithBadValues(&quot;What the hell?&quot;,&quot;\&quot;What the hell?\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase.FailsWithBadValues(&quot;What the hell?&quot;,&quot;\&quot;What the hell?\&quot;&quot;)" seed="1395444875" />
      <test-case id="2265" name="FailsWithBadValues(&quot;I said hello&quot;,&quot;\&quot;I said hello\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase.FailsWithBadValues(&quot;I said hello&quot;,&quot;\&quot;I said hello\&quot;&quot;)" seed="80554253" />
      <test-case id="2266" name="FailsWithBadValues(&quot;say hello to Fred&quot;,&quot;\&quot;say hello to Fred\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase.FailsWithBadValues(&quot;say hello to Fred&quot;,&quot;\&quot;say hello to Fred\&quot;&quot;)" seed="1695008419" />
      <test-case id="2267" name="FailsWithBadValues(&quot;&quot;,&quot;&lt;string.Empty&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase.FailsWithBadValues(&quot;&quot;,&quot;&lt;string.Empty&gt;&quot;)" seed="1789258733" />
      <test-case id="2268" name="FailsWithBadValues(null,&quot;null&quot;)" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase.FailsWithBadValues(null,&quot;null&quot;)" seed="1765276647" />
    </test-suite>
    <test-case id="2269" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1799143547" />
    <test-case id="2270" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.StartsWithConstraintTestsIgnoringCase.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1928384806" />
  </test-suite>
  <test-suite type="TestFixture" id="2271" name="SubstringConstraintTests" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests" testcasecount="11">
    <test-suite type="ParameterizedMethod" id="2273" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.SucceedsWithGoodValues" testcasecount="4">
      <test-case id="2274" name="SucceedsWithGoodValues(&quot;hello&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.SucceedsWithGoodValues(&quot;hello&quot;)" seed="225036080" />
      <test-case id="2275" name="SucceedsWithGoodValues(&quot;hello there&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.SucceedsWithGoodValues(&quot;hello there&quot;)" seed="2111459613" />
      <test-case id="2276" name="SucceedsWithGoodValues(&quot;I said hello&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.SucceedsWithGoodValues(&quot;I said hello&quot;)" seed="304178073" />
      <test-case id="2277" name="SucceedsWithGoodValues(&quot;say hello to fred&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.SucceedsWithGoodValues(&quot;say hello to fred&quot;)" seed="516557415" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2279" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.FailsWithBadValues" testcasecount="5">
      <test-case id="2280" name="FailsWithBadValues(&quot;goodbye&quot;,&quot;\&quot;goodbye\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.FailsWithBadValues(&quot;goodbye&quot;,&quot;\&quot;goodbye\&quot;&quot;)" seed="791796016" />
      <test-case id="2281" name="FailsWithBadValues(&quot;HELLO&quot;,&quot;\&quot;HELLO\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.FailsWithBadValues(&quot;HELLO&quot;,&quot;\&quot;HELLO\&quot;&quot;)" seed="2024901389" />
      <test-case id="2282" name="FailsWithBadValues(&quot;What the hell?&quot;,&quot;\&quot;What the hell?\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.FailsWithBadValues(&quot;What the hell?&quot;,&quot;\&quot;What the hell?\&quot;&quot;)" seed="128524930" />
      <test-case id="2283" name="FailsWithBadValues(&quot;&quot;,&quot;&lt;string.Empty&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.FailsWithBadValues(&quot;&quot;,&quot;&lt;string.Empty&gt;&quot;)" seed="633976087" />
      <test-case id="2284" name="FailsWithBadValues(null,&quot;null&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.FailsWithBadValues(null,&quot;null&quot;)" seed="5713948" />
    </test-suite>
    <test-case id="2285" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1085770287" />
    <test-case id="2286" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTests.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="381144296" />
  </test-suite>
  <test-suite type="TestFixture" id="2287" name="SubstringConstraintTestsIgnoringCase" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase" testcasecount="10">
    <test-suite type="ParameterizedMethod" id="2289" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase.SucceedsWithGoodValues" testcasecount="4">
      <test-case id="2290" name="SucceedsWithGoodValues(&quot;Hello&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase.SucceedsWithGoodValues(&quot;Hello&quot;)" seed="208030945" />
      <test-case id="2291" name="SucceedsWithGoodValues(&quot;HellO there&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase.SucceedsWithGoodValues(&quot;HellO there&quot;)" seed="1133585078" />
      <test-case id="2292" name="SucceedsWithGoodValues(&quot;I said HELLO&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase.SucceedsWithGoodValues(&quot;I said HELLO&quot;)" seed="429554745" />
      <test-case id="2293" name="SucceedsWithGoodValues(&quot;say hello to fred&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase.SucceedsWithGoodValues(&quot;say hello to fred&quot;)" seed="1159251584" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2295" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase.FailsWithBadValues" testcasecount="4">
      <test-case id="2296" name="FailsWithBadValues(&quot;goodbye&quot;,&quot;\&quot;goodbye\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase.FailsWithBadValues(&quot;goodbye&quot;,&quot;\&quot;goodbye\&quot;&quot;)" seed="2006483124" />
      <test-case id="2297" name="FailsWithBadValues(&quot;What the hell?&quot;,&quot;\&quot;What the hell?\&quot;&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase.FailsWithBadValues(&quot;What the hell?&quot;,&quot;\&quot;What the hell?\&quot;&quot;)" seed="1466239469" />
      <test-case id="2298" name="FailsWithBadValues(&quot;&quot;,&quot;&lt;string.Empty&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase.FailsWithBadValues(&quot;&quot;,&quot;&lt;string.Empty&gt;&quot;)" seed="2135641010" />
      <test-case id="2299" name="FailsWithBadValues(null,&quot;null&quot;)" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase.FailsWithBadValues(null,&quot;null&quot;)" seed="949694014" />
    </test-suite>
    <test-case id="2300" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1503336613" />
    <test-case id="2301" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.SubstringConstraintTestsIgnoringCase.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="353784685" />
  </test-suite>
  <test-suite type="TestFixture" id="2302" name="ThrowsConstraintTest_ExactType" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_ExactType" testcasecount="5">
    <test-suite type="ParameterizedMethod" id="2304" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_ExactType.SucceedsWithGoodValues" testcasecount="1">
      <test-case id="2305" name="SucceedsWithGoodValues(TCLite.Framework.TestDelegate)" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_ExactType.SucceedsWithGoodValues(TCLite.Framework.TestDelegate)" seed="1170255121" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2307" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_ExactType.FailsWithBadValues" testcasecount="2">
      <test-case id="2308" name="FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;no exception thrown&quot;)" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_ExactType.FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;no exception thrown&quot;)" seed="108877752" />
      <test-case id="2309" name="FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;&lt;System.Exception&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_ExactType.FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;&lt;System.Exception&gt;&quot;)" seed="1895424389" />
    </test-suite>
    <test-case id="2310" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_ExactType.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1925661755" />
    <test-case id="2311" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_ExactType.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1020113735" />
  </test-suite>
  <test-suite type="TestFixture" id="2312" name="ThrowsConstraintTest_InstanceOfType" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_InstanceOfType" testcasecount="7">
    <test-suite type="ParameterizedMethod" id="2314" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_InstanceOfType.SucceedsWithGoodValues" testcasecount="2">
      <test-case id="2315" name="SucceedsWithGoodValues(TCLite.Framework.TestDelegate)" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_InstanceOfType.SucceedsWithGoodValues(TCLite.Framework.TestDelegate)" seed="2044194144" />
      <test-case id="2316" name="SucceedsWithGoodValues(TCLite.Framework.TestDelegate)" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_InstanceOfType.SucceedsWithGoodValues(TCLite.Framework.TestDelegate)" seed="404270922" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2318" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_InstanceOfType.FailsWithBadValues" testcasecount="3">
      <test-case id="2319" name="FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;&lt;System.ArgumentException&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_InstanceOfType.FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;&lt;System.ArgumentException&gt;&quot;)" seed="1394317249" />
      <test-case id="2320" name="FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;no exception thrown&quot;)" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_InstanceOfType.FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;no exception thrown&quot;)" seed="856154938" />
      <test-case id="2321" name="FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;&lt;System.Exception&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_InstanceOfType.FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;&lt;System.Exception&gt;&quot;)" seed="2103809691" />
    </test-suite>
    <test-case id="2322" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_InstanceOfType.ConstraintTestBaseNoData.ProvidesProperDescription" seed="1609157610" />
    <test-case id="2323" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_InstanceOfType.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="65525717" />
  </test-suite>
  <test-suite type="TestFixture" id="2324" name="ThrowsConstraintTest_WithConstraint" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_WithConstraint" testcasecount="6">
    <test-suite type="ParameterizedMethod" id="2326" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_WithConstraint.SucceedsWithGoodValues" testcasecount="1">
      <test-case id="2327" name="SucceedsWithGoodValues(TCLite.Framework.TestDelegate)" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_WithConstraint.SucceedsWithGoodValues(TCLite.Framework.TestDelegate)" seed="672811458" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2329" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_WithConstraint.FailsWithBadValues" testcasecount="3">
      <test-case id="2330" name="FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;&lt;TCLite.TestUtilities.TestDelegates+CustomException&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_WithConstraint.FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;&lt;TCLite.TestUtilities.TestDelegates+CustomException&gt;&quot;)" seed="1358804249" />
      <test-case id="2331" name="FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;no exception thrown&quot;)" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_WithConstraint.FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;no exception thrown&quot;)" seed="650046727" />
      <test-case id="2332" name="FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;&lt;System.Exception&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_WithConstraint.FailsWithBadValues(TCLite.Framework.TestDelegate,&quot;&lt;System.Exception&gt;&quot;)" seed="792941960" />
    </test-suite>
    <test-case id="2333" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_WithConstraint.ConstraintTestBaseNoData.ProvidesProperDescription" seed="913447569" />
    <test-case id="2334" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.ThrowsConstraintTest_WithConstraint.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1201305733" />
  </test-suite>
  <test-suite type="TestFixture" id="2335" name="XmlSerializableTest" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest" testcasecount="9">
    <test-suite type="ParameterizedMethod" id="2337" name="InvalidDataThrowsArgumentException" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest.InvalidDataThrowsArgumentException" testcasecount="1">
      <test-case id="2338" name="InvalidDataThrowsArgumentException(null)" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest.InvalidDataThrowsArgumentException(null)" seed="211225258" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2340" name="SucceedsWithGoodValues" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest.SucceedsWithGoodValues" testcasecount="3">
      <test-case id="2341" name="SucceedsWithGoodValues(1)" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest.SucceedsWithGoodValues(1)" seed="470110359" />
      <test-case id="2342" name="SucceedsWithGoodValues(&quot;a&quot;)" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest.SucceedsWithGoodValues(&quot;a&quot;)" seed="26195371" />
      <test-case id="2343" name="SucceedsWithGoodValues(System.Collections.ArrayList)" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest.SucceedsWithGoodValues(System.Collections.ArrayList)" seed="1947822423" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2345" name="FailsWithBadValues" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest.FailsWithBadValues" testcasecount="3">
      <test-case id="2346" name="FailsWithBadValues(System.Collections.Generic.Dictionary`2[System.String,System.String],&quot;&lt;Dictionary`2&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest.FailsWithBadValues(System.Collections.Generic.Dictionary`2[System.String,System.String],&quot;&lt;Dictionary`2&gt;&quot;)" seed="1724903788" />
      <test-case id="2347" name="FailsWithBadValues(TCLite.Framework.Constraints.Tests.InternalClass,&quot;&lt;InternalClass&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest.FailsWithBadValues(TCLite.Framework.Constraints.Tests.InternalClass,&quot;&lt;InternalClass&gt;&quot;)" seed="792694919" />
      <test-case id="2348" name="FailsWithBadValues(TCLite.Framework.Constraints.Tests.InternalWithSerializableAttributeClass,&quot;&lt;InternalWithSerializableAttributeClass&gt;&quot;)" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest.FailsWithBadValues(TCLite.Framework.Constraints.Tests.InternalWithSerializableAttributeClass,&quot;&lt;InternalWithSerializableAttributeClass&gt;&quot;)" seed="249990384" />
    </test-suite>
    <test-case id="2349" name="ConstraintTestBaseNoData.ProvidesProperDescription" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest.ConstraintTestBaseNoData.ProvidesProperDescription" seed="544786922" />
    <test-case id="2350" name="ConstraintTestBaseNoData.ProvidesProperStringRepresentation" fullname="TCLite.Framework.Constraints.Tests.XmlSerializableTest.ConstraintTestBaseNoData.ProvidesProperStringRepresentation" seed="1263851845" />
  </test-suite>
  <test-suite type="TestFixture" id="2351" name="AttributeInheritanceTests" fullname="TCLite.Framework.Tests.AttributeInheritanceTests" testcasecount="2">
    <test-case id="2352" name="InheritedFixtureAttributeIsRecognized" fullname="TCLite.Framework.Tests.AttributeInheritanceTests.InheritedFixtureAttributeIsRecognized" seed="236193291" />
    <test-case id="2353" name="InheritedTestAttributeIsRecognized" fullname="TCLite.Framework.Tests.AttributeInheritanceTests.InheritedTestAttributeIsRecognized" seed="221554776" />
  </test-suite>
  <test-suite type="TestFixture" id="2354" name="MaxTimeTests" fullname="TCLite.Framework.Tests.MaxTimeTests" testcasecount="4">
    <test-case id="2355" name="MaxTimeNotExceeded" fullname="TCLite.Framework.Tests.MaxTimeTests.MaxTimeNotExceeded" seed="228768950">
      <properties>
        <property name="MaxTime" value="1000" />
      </properties>
    </test-case>
    <test-case id="2356" name="MaxTimeExceeded" fullname="TCLite.Framework.Tests.MaxTimeTests.MaxTimeExceeded" seed="1801101370" />
    <test-case id="2357" name="FailureReportHasPriorityOverMaxTime" fullname="TCLite.Framework.Tests.MaxTimeTests.FailureReportHasPriorityOverMaxTime" seed="815582633" />
    <test-case id="2358" name="ErrorReportHasPriorityOverMaxTime" fullname="TCLite.Framework.Tests.MaxTimeTests.ErrorReportHasPriorityOverMaxTime" seed="295806934" />
  </test-suite>
  <test-suite type="TestFixture" id="2359" name="TestCaseAttributeTests" fullname="TCLite.Framework.Tests.TestCaseAttributeTests" testcasecount="33">
    <test-suite type="ParameterizedMethod" id="2361" name="IntegerDivisionWithResultPassedToTest" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.IntegerDivisionWithResultPassedToTest" testcasecount="3">
      <test-case id="2362" name="IntegerDivisionWithResultPassedToTest(12,3,4)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.IntegerDivisionWithResultPassedToTest(12,3,4)" seed="1574600121" />
      <test-case id="2363" name="IntegerDivisionWithResultPassedToTest(12,2,6)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.IntegerDivisionWithResultPassedToTest(12,2,6)" seed="1202264606" />
      <test-case id="2364" name="IntegerDivisionWithResultPassedToTest(12,4,3)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.IntegerDivisionWithResultPassedToTest(12,4,3)" seed="2002581861" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2366" name="IntegerDivisionWithResultCheckedByNUnit" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.IntegerDivisionWithResultCheckedByNUnit" testcasecount="3">
      <test-case id="2367" name="IntegerDivisionWithResultCheckedByNUnit(12,3)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.IntegerDivisionWithResultCheckedByNUnit(12,3)" seed="556237331" />
      <test-case id="2368" name="IntegerDivisionWithResultCheckedByNUnit(12,2)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.IntegerDivisionWithResultCheckedByNUnit(12,2)" seed="738379307" />
      <test-case id="2369" name="IntegerDivisionWithResultCheckedByNUnit(12,4)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.IntegerDivisionWithResultCheckedByNUnit(12,4)" seed="1919165928" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2371" name="CanConvertIntToDouble" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertIntToDouble" testcasecount="1">
      <test-case id="2372" name="CanConvertIntToDouble(2.0d,2.0d)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertIntToDouble(2.0d,2.0d)" seed="2128190892" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2374" name="CanConvertStringToDecimal" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertStringToDecimal" testcasecount="1">
      <test-case id="2375" name="CanConvertStringToDecimal(2.2m,3.3m)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertStringToDecimal(2.2m,3.3m)" seed="1871737655" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2377" name="CanConvertDoubleToDecimal" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertDoubleToDecimal" testcasecount="1">
      <test-case id="2378" name="CanConvertDoubleToDecimal(2.2m,3.3m)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertDoubleToDecimal(2.2m,3.3m)" seed="1387142485" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2380" name="CanConvertIntToDecimal" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertIntToDecimal" testcasecount="1">
      <test-case id="2381" name="CanConvertIntToDecimal(5m,2m)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertIntToDecimal(5m,2m)" seed="1297042657" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2383" name="CanConvertSmallIntsToShort" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertSmallIntsToShort" testcasecount="1">
      <test-case id="2384" name="CanConvertSmallIntsToShort(5,2)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertSmallIntsToShort(5,2)" seed="1129444243" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2386" name="CanConvertSmallIntsToByte" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertSmallIntsToByte" testcasecount="1">
      <test-case id="2387" name="CanConvertSmallIntsToByte(5,2)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertSmallIntsToByte(5,2)" seed="919470333" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2389" name="CanConvertSmallIntsToSByte" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertSmallIntsToSByte" testcasecount="1">
      <test-case id="2390" name="CanConvertSmallIntsToSByte(5,2)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertSmallIntsToSByte(5,2)" seed="142505228" />
    </test-suite>
    <test-case id="2391" name="ConversionOverflowMakesTestNotRunnable" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.ConversionOverflowMakesTestNotRunnable" seed="460773620" />
    <test-suite type="ParameterizedMethod" id="2393" name="CanConvertStringToDateTime" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertStringToDateTime" testcasecount="1">
      <test-case id="2394" name="CanConvertStringToDateTime(10/12/1942 00:00:00)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanConvertStringToDateTime(10/12/1942 00:00:00)" seed="1218234143" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2396" name="CanPassNullAsFirstArgument" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanPassNullAsFirstArgument" testcasecount="1">
      <test-case id="2397" name="CanPassNullAsFirstArgument(null)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanPassNullAsFirstArgument(null)" seed="509204857" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2399" name="CanPassObjectArrayAsFirstArgument" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanPassObjectArrayAsFirstArgument" testcasecount="2">
      <test-case id="2400" name="CanPassObjectArrayAsFirstArgument(1,&quot;two&quot;,3.0d)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanPassObjectArrayAsFirstArgument(1,&quot;two&quot;,3.0d)" seed="1213541164" />
      <test-case id="2401" name="CanPassObjectArrayAsFirstArgument(&quot;zip&quot;)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanPassObjectArrayAsFirstArgument(&quot;zip&quot;)" seed="552791900" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2403" name="CanPassArrayAsArgument" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanPassArrayAsArgument" testcasecount="1">
      <test-case id="2404" name="CanPassArrayAsArgument(&quot;a&quot;,&quot;b&quot;)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanPassArrayAsArgument(&quot;a&quot;,&quot;b&quot;)" seed="934335277" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2406" name="ArgumentsAreCoalescedInObjectArray" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.ArgumentsAreCoalescedInObjectArray" testcasecount="1">
      <test-case id="2407" name="ArgumentsAreCoalescedInObjectArray(&quot;a&quot;,&quot;b&quot;)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.ArgumentsAreCoalescedInObjectArray(&quot;a&quot;,&quot;b&quot;)" seed="738468756" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2409" name="ArgumentsOfDifferentTypeAreCoalescedInObjectArray" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.ArgumentsOfDifferentTypeAreCoalescedInObjectArray" testcasecount="1">
      <test-case id="2410" name="ArgumentsOfDifferentTypeAreCoalescedInObjectArray(1,&quot;b&quot;)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.ArgumentsOfDifferentTypeAreCoalescedInObjectArray(1,&quot;b&quot;)" seed="1033226254" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2412" name="ResultCanBeNull" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.ResultCanBeNull" testcasecount="1">
      <test-case id="2413" name="ResultCanBeNull()" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.ResultCanBeNull()" seed="327589314" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2415" name="HandlesParamsArrayAsSoleArgument" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.HandlesParamsArrayAsSoleArgument" testcasecount="1">
      <test-case id="2416" name="HandlesParamsArrayAsSoleArgument(&quot;a&quot;,&quot;b&quot;)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.HandlesParamsArrayAsSoleArgument(&quot;a&quot;,&quot;b&quot;)" seed="1369916345" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2418" name="HandlesParamsArrayWithOneItemAsSoleArgument" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.HandlesParamsArrayWithOneItemAsSoleArgument" testcasecount="1">
      <test-case id="2419" name="HandlesParamsArrayWithOneItemAsSoleArgument(System.String[])" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.HandlesParamsArrayWithOneItemAsSoleArgument(System.String[])" seed="531457611" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2421" name="HandlesParamsArrayAsLastArgument" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.HandlesParamsArrayAsLastArgument" testcasecount="1">
      <test-case id="2422" name="HandlesParamsArrayAsLastArgument(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.HandlesParamsArrayAsLastArgument(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;)" seed="1102729470" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2424" name="HandlesParamsArrayWithNoItemsAsLastArgument" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.HandlesParamsArrayWithNoItemsAsLastArgument" testcasecount="1">
      <test-case id="2425" name="HandlesParamsArrayWithNoItemsAsLastArgument(&quot;a&quot;,&quot;b&quot;)" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.HandlesParamsArrayWithNoItemsAsLastArgument(&quot;a&quot;,&quot;b&quot;)" seed="1675671371" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2427" name="HandlesParamsArrayWithOneItemAsLastArgument" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.HandlesParamsArrayWithOneItemAsLastArgument" testcasecount="1">
      <test-case id="2428" name="HandlesParamsArrayWithOneItemAsLastArgument(&quot;a&quot;,&quot;b&quot;,System.Object[])" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.HandlesParamsArrayWithOneItemAsLastArgument(&quot;a&quot;,&quot;b&quot;,System.Object[])" seed="475326813" />
    </test-suite>
    <test-case id="2429" name="CanSpecifyDescription" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanSpecifyDescription" seed="780342299" />
    <test-case id="2430" name="CanSpecifyTestName" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanSpecifyTestName" seed="168077631" />
    <test-case id="2431" name="CanSpecifyCategory" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanSpecifyCategory" seed="1172762473" />
    <test-case id="2432" name="CanSpecifyMultipleCategories" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanSpecifyMultipleCategories" seed="627385988" />
    <test-case id="2433" name="CanIgnoreIndividualTestCases" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanIgnoreIndividualTestCases" seed="302708321" />
    <test-case id="2434" name="CanMarkIndividualTestCasesExplicit" fullname="TCLite.Framework.Tests.TestCaseAttributeTests.CanMarkIndividualTestCasesExplicit" seed="793574977" />
  </test-suite>
  <test-suite type="TestFixture" id="2435" name="TestCaseSourceTests" fullname="TCLite.Framework.Tests.TestCaseSourceTests" testcasecount="38">
    <test-suite type="ParameterizedMethod" id="2437" name="SourceCanBeStaticProperty" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeStaticProperty" testcasecount="1">
      <test-case id="2438" name="SourceCanBeStaticProperty(&quot;StaticProperty&quot;)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeStaticProperty(&quot;StaticProperty&quot;)" seed="1917202430" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2440" name="SourceCanBeInstanceProperty" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeInstanceProperty" testcasecount="1">
      <test-case id="2441" name="SourceCanBeInstanceProperty(&quot;InstanceProperty&quot;)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeInstanceProperty(&quot;InstanceProperty&quot;)" seed="1245694984" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2443" name="SourceCanBeStaticMethod" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeStaticMethod" testcasecount="1">
      <test-case id="2444" name="SourceCanBeStaticMethod(&quot;StaticMethod&quot;)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeStaticMethod(&quot;StaticMethod&quot;)" seed="156539643" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2446" name="SourceCanBeInstanceMethod" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeInstanceMethod" testcasecount="1">
      <test-case id="2447" name="SourceCanBeInstanceMethod(&quot;InstanceMethod&quot;)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeInstanceMethod(&quot;InstanceMethod&quot;)" seed="794948513" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2449" name="SourceCanBeStaticField" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeStaticField" testcasecount="1">
      <test-case id="2450" name="SourceCanBeStaticField(&quot;StaticField&quot;)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeStaticField(&quot;StaticField&quot;)" seed="236704629" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2452" name="SourceCanBeInstanceField" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeInstanceField" testcasecount="1">
      <test-case id="2453" name="SourceCanBeInstanceField(&quot;InstanceField&quot;)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeInstanceField(&quot;InstanceField&quot;)" seed="175068262" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2455" name="SourceCanBeInstanceOfIEnumerable" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeInstanceOfIEnumerable" testcasecount="1">
      <test-case id="2456" name="SourceCanBeInstanceOfIEnumerable(&quot;DataSourceClass&quot;)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceCanBeInstanceOfIEnumerable(&quot;DataSourceClass&quot;)" seed="1429623452" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2458" name="SourceMayReturnArgumentsAsObjectArray" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnArgumentsAsObjectArray" testcasecount="3">
      <test-case id="2459" name="SourceMayReturnArgumentsAsObjectArray(12,3,4)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnArgumentsAsObjectArray(12,3,4)" seed="230518013" />
      <test-case id="2460" name="SourceMayReturnArgumentsAsObjectArray(12,4,3)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnArgumentsAsObjectArray(12,4,3)" seed="745856351" />
      <test-case id="2461" name="SourceMayReturnArgumentsAsObjectArray(12,6,2)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnArgumentsAsObjectArray(12,6,2)" seed="786536533" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2463" name="TestAttributeIsOptional" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestAttributeIsOptional" testcasecount="3">
      <test-case id="2464" name="TestAttributeIsOptional(12,3,4)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestAttributeIsOptional(12,3,4)" seed="650779766" />
      <test-case id="2465" name="TestAttributeIsOptional(12,4,3)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestAttributeIsOptional(12,4,3)" seed="595459545" />
      <test-case id="2466" name="TestAttributeIsOptional(12,6,2)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestAttributeIsOptional(12,6,2)" seed="2020708233" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2468" name="SourceMayReturnArgumentsAsIntArray" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnArgumentsAsIntArray" testcasecount="3">
      <test-case id="2469" name="SourceMayReturnArgumentsAsIntArray(12,3,4)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnArgumentsAsIntArray(12,3,4)" seed="107485156" />
      <test-case id="2470" name="SourceMayReturnArgumentsAsIntArray(12,4,3)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnArgumentsAsIntArray(12,4,3)" seed="84013302" />
      <test-case id="2471" name="SourceMayReturnArgumentsAsIntArray(12,6,2)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnArgumentsAsIntArray(12,6,2)" seed="45617702" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2473" name="SourceMayReturnSinglePrimitiveArgumentAlone" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnSinglePrimitiveArgumentAlone" testcasecount="4">
      <test-case id="2474" name="SourceMayReturnSinglePrimitiveArgumentAlone(2)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnSinglePrimitiveArgumentAlone(2)" seed="1874472081" />
      <test-case id="2475" name="SourceMayReturnSinglePrimitiveArgumentAlone(4)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnSinglePrimitiveArgumentAlone(4)" seed="1155497259" />
      <test-case id="2476" name="SourceMayReturnSinglePrimitiveArgumentAlone(6)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnSinglePrimitiveArgumentAlone(6)" seed="1823460697" />
      <test-case id="2477" name="SourceMayReturnSinglePrimitiveArgumentAlone(8)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnSinglePrimitiveArgumentAlone(8)" seed="866766093" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2479" name="SourceMayReturnArgumentsAsParamSet" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnArgumentsAsParamSet" testcasecount="2">
      <test-case id="2480" name="SourceMayReturnArgumentsAsParamSet(24,3)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnArgumentsAsParamSet(24,3)" seed="77113877" />
      <test-case id="2481" name="SourceMayReturnArgumentsAsParamSet(24,2)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayReturnArgumentsAsParamSet(24,2)" seed="1410064327" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2483" name="TestMayUseMultipleSourceAttributes" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestMayUseMultipleSourceAttributes" testcasecount="5">
      <test-case id="2484" name="TestMayUseMultipleSourceAttributes(12,3,4)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestMayUseMultipleSourceAttributes(12,3,4)" seed="1247010807" />
      <test-case id="2485" name="TestMayUseMultipleSourceAttributes(12,4,3)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestMayUseMultipleSourceAttributes(12,4,3)" seed="1979831908" />
      <test-case id="2486" name="TestMayUseMultipleSourceAttributes(12,6,2)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestMayUseMultipleSourceAttributes(12,6,2)" seed="1471124250" />
      <test-case id="2487" name="TestMayUseMultipleSourceAttributes(12,1,12)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestMayUseMultipleSourceAttributes(12,1,12)" seed="1600991508">
        <properties>
          <property name="Category" value="Extra" />
        </properties>
      </test-case>
      <test-case id="2488" name="TestMayUseMultipleSourceAttributes(12,2,6)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestMayUseMultipleSourceAttributes(12,2,6)" seed="1210191583">
        <properties>
          <property name="Category" value="Extra" />
        </properties>
      </test-case>
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2490" name="TestWithFourArguments" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestWithFourArguments" testcasecount="3">
      <test-case id="2491" name="TestWithFourArguments(12,3,4,0)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestWithFourArguments(12,3,4,0)" seed="1443839115" />
      <test-case id="2492" name="TestWithFourArguments(12,4,3,0)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestWithFourArguments(12,4,3,0)" seed="1347848593" />
      <test-case id="2493" name="TestWithFourArguments(12,5,2,2)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TestWithFourArguments(12,5,2,2)" seed="1703660024" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2495" name="SourceMayBeInAnotherClass" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayBeInAnotherClass" testcasecount="2">
      <test-case id="2496" name="SourceMayBeInAnotherClass(100,20,5)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayBeInAnotherClass(100,20,5)" seed="214380012" />
      <test-case id="2497" name="SourceMayBeInAnotherClass(100,4,25)" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayBeInAnotherClass(100,4,25)" seed="669656669" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2499" name="SourceMayBeInAnotherClassWithReturn" fullname="TCLite.Framework.Tests.TestCaseSourceTests.SourceMayBeInAnotherClassWithReturn" testcasecount="2">
      <test-case id="2500" name="TC2" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TC2" seed="826735922" />
      <test-case id="2501" name="TC3" fullname="TCLite.Framework.Tests.TestCaseSourceTests.TC3" seed="125895356" />
    </test-suite>
    <test-case id="2502" name="CanIgnoreIndividualTestCases" fullname="TCLite.Framework.Tests.TestCaseSourceTests.CanIgnoreIndividualTestCases" seed="372786445" />
    <test-case id="2503" name="CanMarkIndividualTestCasesExplicit" fullname="TCLite.Framework.Tests.TestCaseSourceTests.CanMarkIndividualTestCasesExplicit" seed="1362562283" />
    <test-case id="2504" name="HandlesExceptionInTestCaseSource" fullname="TCLite.Framework.Tests.TestCaseSourceTests.HandlesExceptionInTestCaseSource" seed="1061694500" />
    <test-suite type="ParameterizedMethod" id="2506" name="MethodTakingTwoStringArrays" fullname="TCLite.Framework.Tests.TestCaseSourceTests.MethodTakingTwoStringArrays" testcasecount="1">
      <test-case id="2507" name="MethodTakingTwoStringArrays(System.String[],System.String[])" fullname="TCLite.Framework.Tests.TestCaseSourceTests.MethodTakingTwoStringArrays(System.String[],System.String[])" seed="1861739991" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="2508" name="TheoryTests" fullname="TCLite.Framework.Tests.TheoryTests" testcasecount="17">
    <test-case id="2509" name="TheoryWithNoArgumentsIsTreatedAsTest" fullname="TCLite.Framework.Tests.TheoryTests.TheoryWithNoArgumentsIsTreatedAsTest" seed="976836535" />
    <test-case id="2510" name="TheoryWithNoDatapointsIsNotRunnable" fullname="TCLite.Framework.Tests.TheoryTests.TheoryWithNoDatapointsIsNotRunnable" seed="377723638" />
    <test-case id="2511" name="TheoryWithDatapointsIsRunnable" fullname="TCLite.Framework.Tests.TheoryTests.TheoryWithDatapointsIsRunnable" seed="1652195472" />
    <test-case id="2512" name="BooleanArgumentsAreSuppliedAutomatically" fullname="TCLite.Framework.Tests.TheoryTests.BooleanArgumentsAreSuppliedAutomatically" seed="507950743" />
    <test-suite type="Theory" id="2514" name="NullDatapointIsOK" fullname="TCLite.Framework.Tests.TheoryTests.NullDatapointIsOK" testcasecount="1">
      <test-case id="2515" name="NullDatapointIsOK(null)" fullname="TCLite.Framework.Tests.TheoryTests.NullDatapointIsOK(null)" seed="287369903" />
    </test-suite>
    <test-case id="2516" name="EnumArgumentsAreSuppliedAutomatically" fullname="TCLite.Framework.Tests.TheoryTests.EnumArgumentsAreSuppliedAutomatically" seed="1688536428" />
    <test-suite type="Theory" id="2518" name="SquareRootWithAllGoodValues" fullname="TCLite.Framework.Tests.TheoryTests.SquareRootWithAllGoodValues" testcasecount="3">
      <test-case id="2519" name="SquareRootWithAllGoodValues(12.0d)" fullname="TCLite.Framework.Tests.TheoryTests.SquareRootWithAllGoodValues(12.0d)" seed="719136579" />
      <test-case id="2520" name="SquareRootWithAllGoodValues(4.0d)" fullname="TCLite.Framework.Tests.TheoryTests.SquareRootWithAllGoodValues(4.0d)" seed="2083481713" />
      <test-case id="2521" name="SquareRootWithAllGoodValues(9.0d)" fullname="TCLite.Framework.Tests.TheoryTests.SquareRootWithAllGoodValues(9.0d)" seed="1229504884" />
    </test-suite>
    <test-suite type="Theory" id="2523" name="SquareRootWithOneBadValue" fullname="TCLite.Framework.Tests.TheoryTests.SquareRootWithOneBadValue" testcasecount="3">
      <test-case id="2524" name="SquareRootWithOneBadValue(12.0d)" fullname="TCLite.Framework.Tests.TheoryTests.SquareRootWithOneBadValue(12.0d)" seed="1568186215" />
      <test-case id="2525" name="SquareRootWithOneBadValue(-4.0d)" fullname="TCLite.Framework.Tests.TheoryTests.SquareRootWithOneBadValue(-4.0d)" seed="391313511" />
      <test-case id="2526" name="SquareRootWithOneBadValue(9.0d)" fullname="TCLite.Framework.Tests.TheoryTests.SquareRootWithOneBadValue(9.0d)" seed="734724597" />
    </test-suite>
    <test-suite type="Theory" id="2528" name="ArrayWithDatapointsAttributeIsUsed" fullname="TCLite.Framework.Tests.TheoryTests.ArrayWithDatapointsAttributeIsUsed" testcasecount="3">
      <test-case id="2529" name="ArrayWithDatapointsAttributeIsUsed(&quot;xyz1&quot;)" fullname="TCLite.Framework.Tests.TheoryTests.ArrayWithDatapointsAttributeIsUsed(&quot;xyz1&quot;)" seed="441089197" />
      <test-case id="2530" name="ArrayWithDatapointsAttributeIsUsed(&quot;xyz2&quot;)" fullname="TCLite.Framework.Tests.TheoryTests.ArrayWithDatapointsAttributeIsUsed(&quot;xyz2&quot;)" seed="17265214" />
      <test-case id="2531" name="ArrayWithDatapointsAttributeIsUsed(&quot;xyz3&quot;)" fullname="TCLite.Framework.Tests.TheoryTests.ArrayWithDatapointsAttributeIsUsed(&quot;xyz3&quot;)" seed="951408938" />
    </test-suite>
    <test-case id="2532" name="SimpleTestIgnoresDataPoints" fullname="TCLite.Framework.Tests.TheoryTests.SimpleTestIgnoresDataPoints" seed="1583425875" />
    <test-case id="2533" name="TheoryFailsIfAllTestsAreInconclusive" fullname="TCLite.Framework.Tests.TheoryTests.TheoryFailsIfAllTestsAreInconclusive" seed="716461100" />
  </test-suite>
  <test-suite type="TestFixture" id="2534" name="StackFilterTest" fullname="TCLite.Framework.Tests.StackFilterTest" testcasecount="2">
    <test-case id="2535" name="FilterFailureTrace1" fullname="TCLite.Framework.Tests.StackFilterTest.FilterFailureTrace1" seed="507138103" />
    <test-case id="2536" name="FilterFailureTrace2" fullname="TCLite.Framework.Tests.StackFilterTest.FilterFailureTrace2" seed="2146167824" />
  </test-suite>
  <test-suite type="TestFixture" id="2537" name="SyntaxTests" fullname="TCLite.Framework.Tests.SyntaxTests" testcasecount="16">
    <test-case id="2538" name="NullTests" fullname="TCLite.Framework.Tests.SyntaxTests.NullTests" seed="324191382" />
    <test-case id="2539" name="NotNullTests" fullname="TCLite.Framework.Tests.SyntaxTests.NotNullTests" seed="1471307910" />
    <test-case id="2540" name="TrueTests" fullname="TCLite.Framework.Tests.SyntaxTests.TrueTests" seed="783196768" />
    <test-case id="2541" name="FalseTests" fullname="TCLite.Framework.Tests.SyntaxTests.FalseTests" seed="1112360326" />
    <test-case id="2542" name="NaNTests" fullname="TCLite.Framework.Tests.SyntaxTests.NaNTests" seed="2133267984" />
    <test-case id="2543" name="EmptyTests" fullname="TCLite.Framework.Tests.SyntaxTests.EmptyTests" seed="1030153067" />
    <test-case id="2544" name="TypeTests" fullname="TCLite.Framework.Tests.SyntaxTests.TypeTests" seed="1189679974" />
    <test-case id="2545" name="StringTests" fullname="TCLite.Framework.Tests.SyntaxTests.StringTests" seed="572156521" />
    <test-case id="2546" name="EqualToTests" fullname="TCLite.Framework.Tests.SyntaxTests.EqualToTests" seed="2128606744" />
    <test-case id="2547" name="ComparisonTests" fullname="TCLite.Framework.Tests.SyntaxTests.ComparisonTests" seed="1916207270" />
    <test-case id="2548" name="AllItemsTests" fullname="TCLite.Framework.Tests.SyntaxTests.AllItemsTests" seed="1894812877" />
    <test-case id="2549" name="CollectionContainsTests" fullname="TCLite.Framework.Tests.SyntaxTests.CollectionContainsTests" seed="1882182358" />
    <test-case id="2550" name="NotTests" fullname="TCLite.Framework.Tests.SyntaxTests.NotTests" seed="868934666" />
    <test-case id="2551" name="AndTests" fullname="TCLite.Framework.Tests.SyntaxTests.AndTests" seed="1131406849" />
    <test-case id="2552" name="OrTests" fullname="TCLite.Framework.Tests.SyntaxTests.OrTests" seed="12732090" />
    <test-case id="2553" name="ComplexTests" fullname="TCLite.Framework.Tests.SyntaxTests.ComplexTests" seed="178660724" />
  </test-suite>
  <test-suite type="TestFixture" id="2554" name="TestContextTests" fullname="TCLite.Framework.Tests.TestContextTests" testcasecount="9">
    <test-case id="2555" name="TestCanAccessItsOwnName" fullname="TCLite.Framework.Tests.TestContextTests.TestCanAccessItsOwnName" seed="1445737059" />
    <test-case id="2556" name="TestCanAccessItsOwnFullName" fullname="TCLite.Framework.Tests.TestContextTests.TestCanAccessItsOwnFullName" seed="1362054268" />
    <test-case id="2557" name="TestCanAccessItsOwnProperties" fullname="TCLite.Framework.Tests.TestContextTests.TestCanAccessItsOwnProperties" seed="1716646781">
      <properties>
        <property name="Answer" value="42" />
      </properties>
    </test-case>
    <test-case id="2558" name="TestCanAccessTestDirectory" fullname="TCLite.Framework.Tests.TestContextTests.TestCanAccessTestDirectory" seed="1122694424" />
    <test-case id="2559" name="TestCanAccessWorkDirectory" fullname="TCLite.Framework.Tests.TestContextTests.TestCanAccessWorkDirectory" seed="1705958026" />
    <test-case id="2560" name="TestCanAccessTestState_PassingTest" fullname="TCLite.Framework.Tests.TestContextTests.TestCanAccessTestState_PassingTest" seed="1260695329" />
    <test-case id="2561" name="TestCanAccessTestState_FailureInSetUp" fullname="TCLite.Framework.Tests.TestContextTests.TestCanAccessTestState_FailureInSetUp" seed="1535126184" />
    <test-case id="2562" name="TestCanAccessTestState_FailingTest" fullname="TCLite.Framework.Tests.TestContextTests.TestCanAccessTestState_FailingTest" seed="371486624" />
    <test-case id="2563" name="TestCanAccessTestState_IgnoredInSetUp" fullname="TCLite.Framework.Tests.TestContextTests.TestCanAccessTestState_IgnoredInSetUp" seed="1789489015" />
  </test-suite>
  <test-suite type="TestFixture" id="2564" name="TestResultTests" fullname="TCLite.Framework.Tests.TestResultTests" testcasecount="5">
    <test-case id="2565" name="DefaultStateIsInconclusive" fullname="TCLite.Framework.Tests.TestResultTests.DefaultStateIsInconclusive" seed="1052525604" />
    <test-case id="2566" name="CanMarkAsSuccess" fullname="TCLite.Framework.Tests.TestResultTests.CanMarkAsSuccess" seed="613123996" />
    <test-case id="2567" name="CanMarkAsFailure" fullname="TCLite.Framework.Tests.TestResultTests.CanMarkAsFailure" seed="1262570827" />
    <test-case id="2568" name="CanMarkAsError" fullname="TCLite.Framework.Tests.TestResultTests.CanMarkAsError" seed="197114798" />
    <test-case id="2569" name="CanMarkAsIgnored" fullname="TCLite.Framework.Tests.TestResultTests.CanMarkAsIgnored" seed="1865731378" />
  </test-suite>
  <test-suite type="TestFixture" id="2570" name="ApplyToTestTests" fullname="TCLite.Framework.Attributes.ApplyToTestTests" testcasecount="18">
    <test-case id="2571" name="CategoryAttributeSetsCategory" fullname="TCLite.Framework.Attributes.ApplyToTestTests.CategoryAttributeSetsCategory" seed="1390793694" />
    <test-case id="2572" name="CategoryAttributeSetsMultipleCategories" fullname="TCLite.Framework.Attributes.ApplyToTestTests.CategoryAttributeSetsMultipleCategories" seed="1556917903" />
    <test-case id="2573" name="DescriptionAttributeSetsDescription" fullname="TCLite.Framework.Attributes.ApplyToTestTests.DescriptionAttributeSetsDescription" seed="2013131989" />
    <test-case id="2574" name="IgnoreAttributeIgnoresTest" fullname="TCLite.Framework.Attributes.ApplyToTestTests.IgnoreAttributeIgnoresTest" seed="1363878106" />
    <test-case id="2575" name="IgnoreAttributeSetsIgnoreReason" fullname="TCLite.Framework.Attributes.ApplyToTestTests.IgnoreAttributeSetsIgnoreReason" seed="737503118" />
    <test-case id="2576" name="ExplicitAttributeMakesTestExplicit" fullname="TCLite.Framework.Attributes.ApplyToTestTests.ExplicitAttributeMakesTestExplicit" seed="390432081" />
    <test-case id="2577" name="ExplicitAttributeSetsIgnoreReason" fullname="TCLite.Framework.Attributes.ApplyToTestTests.ExplicitAttributeSetsIgnoreReason" seed="193639767" />
    <test-case id="2578" name="CombinatorialAttributeSetsJoinType" fullname="TCLite.Framework.Attributes.ApplyToTestTests.CombinatorialAttributeSetsJoinType" seed="1412846959" />
    <test-case id="2579" name="CultureAttributeIncludingCurrentCultureRunsTest" fullname="TCLite.Framework.Attributes.ApplyToTestTests.CultureAttributeIncludingCurrentCultureRunsTest" seed="1666411135" />
    <test-case id="2580" name="CultureAttributeExcludingCurrentCultureSkipsTest" fullname="TCLite.Framework.Attributes.ApplyToTestTests.CultureAttributeExcludingCurrentCultureSkipsTest" seed="1625281323" />
    <test-case id="2581" name="CultureAttributeIncludingOtherCultureSkipsTest" fullname="TCLite.Framework.Attributes.ApplyToTestTests.CultureAttributeIncludingOtherCultureSkipsTest" seed="1245173576" />
    <test-case id="2582" name="CultureAttributeExcludingOtherCultureRunsTest" fullname="TCLite.Framework.Attributes.ApplyToTestTests.CultureAttributeExcludingOtherCultureRunsTest" seed="1116379907" />
    <test-case id="2583" name="CultureAttributeWithMultipleCulturesIncluded" fullname="TCLite.Framework.Attributes.ApplyToTestTests.CultureAttributeWithMultipleCulturesIncluded" seed="738013482" />
    <test-case id="2584" name="MaxTimeAttributeSetsMaxTime" fullname="TCLite.Framework.Attributes.ApplyToTestTests.MaxTimeAttributeSetsMaxTime" seed="167274443" />
    <test-case id="2585" name="PairwiseAttributeSetsJoinType" fullname="TCLite.Framework.Attributes.ApplyToTestTests.PairwiseAttributeSetsJoinType" seed="1482175654" />
    <test-case id="2586" name="PlatformAttributeRunsTest" fullname="TCLite.Framework.Attributes.ApplyToTestTests.PlatformAttributeRunsTest" seed="1833487504" />
    <test-case id="2587" name="PlatformAttributeSkipsTest" fullname="TCLite.Framework.Attributes.ApplyToTestTests.PlatformAttributeSkipsTest" seed="1669862492" />
    <test-case id="2588" name="SequentialAttributeSetsJoinType" fullname="TCLite.Framework.Attributes.ApplyToTestTests.SequentialAttributeSetsJoinType" seed="1750801395" />
  </test-suite>
  <test-suite type="TestFixture" id="2589" name="CategoryAttributeTests" fullname="TCLite.Framework.Attributes.CategoryAttributeTests" testcasecount="6">
    <test-case id="2590" name="CategoryOnFixture" fullname="TCLite.Framework.Attributes.CategoryAttributeTests.CategoryOnFixture" seed="428357107" />
    <test-case id="2591" name="CategoryOnTestMethod" fullname="TCLite.Framework.Attributes.CategoryAttributeTests.CategoryOnTestMethod" seed="1986088137" />
    <test-case id="2592" name="CanDeriveFromCategoryAttribute" fullname="TCLite.Framework.Attributes.CategoryAttributeTests.CanDeriveFromCategoryAttribute" seed="1653155526" />
    <test-case id="2593" name="DerivedCategoryMayBeInherited" fullname="TCLite.Framework.Attributes.CategoryAttributeTests.DerivedCategoryMayBeInherited" seed="221371607" />
    <test-case id="2594" name="CanSpecifyOnMethodAndTestCase" fullname="TCLite.Framework.Attributes.CategoryAttributeTests.CanSpecifyOnMethodAndTestCase" seed="1147297966" />
    <test-case id="2595" name="CategoryNameMayContainSpeckalCharacters" fullname="TCLite.Framework.Attributes.CategoryAttributeTests.CategoryNameMayContainSpeckalCharacters" seed="1531927326" />
  </test-suite>
  <test-suite type="TestFixture" id="2596" name="CombinatorialTests" fullname="TCLite.Framework.Attributes.CombinatorialTests" testcasecount="48">
    <test-suite type="ParameterizedMethod" id="2598" name="SingleArgument" fullname="TCLite.Framework.Attributes.CombinatorialTests.SingleArgument" testcasecount="3">
      <test-case id="2599" name="SingleArgument(1.3d)" fullname="TCLite.Framework.Attributes.CombinatorialTests.SingleArgument(1.3d)" seed="440209798" />
      <test-case id="2600" name="SingleArgument(1.7d)" fullname="TCLite.Framework.Attributes.CombinatorialTests.SingleArgument(1.7d)" seed="1210979700" />
      <test-case id="2601" name="SingleArgument(1.5d)" fullname="TCLite.Framework.Attributes.CombinatorialTests.SingleArgument(1.5d)" seed="2083665373" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2603" name="TwoArguments_Combinatorial" fullname="TCLite.Framework.Attributes.CombinatorialTests.TwoArguments_Combinatorial" testcasecount="6">
      <properties>
        <property name="_JOINTYPE" value="Combinatorial" />
      </properties>
      <test-case id="2604" name="TwoArguments_Combinatorial(1,10)" fullname="TCLite.Framework.Attributes.CombinatorialTests.TwoArguments_Combinatorial(1,10)" seed="411710144" />
      <test-case id="2605" name="TwoArguments_Combinatorial(1,20)" fullname="TCLite.Framework.Attributes.CombinatorialTests.TwoArguments_Combinatorial(1,20)" seed="1470354958" />
      <test-case id="2606" name="TwoArguments_Combinatorial(2,10)" fullname="TCLite.Framework.Attributes.CombinatorialTests.TwoArguments_Combinatorial(2,10)" seed="1080742380" />
      <test-case id="2607" name="TwoArguments_Combinatorial(2,20)" fullname="TCLite.Framework.Attributes.CombinatorialTests.TwoArguments_Combinatorial(2,20)" seed="417029071" />
      <test-case id="2608" name="TwoArguments_Combinatorial(3,10)" fullname="TCLite.Framework.Attributes.CombinatorialTests.TwoArguments_Combinatorial(3,10)" seed="2074592794" />
      <test-case id="2609" name="TwoArguments_Combinatorial(3,20)" fullname="TCLite.Framework.Attributes.CombinatorialTests.TwoArguments_Combinatorial(3,20)" seed="375041723" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2611" name="TwoArguments_Sequential" fullname="TCLite.Framework.Attributes.CombinatorialTests.TwoArguments_Sequential" testcasecount="3">
      <properties>
        <property name="_JOINTYPE" value="Sequential" />
      </properties>
      <test-case id="2612" name="TwoArguments_Sequential(1,10)" fullname="TCLite.Framework.Attributes.CombinatorialTests.TwoArguments_Sequential(1,10)" seed="262875366" />
      <test-case id="2613" name="TwoArguments_Sequential(2,20)" fullname="TCLite.Framework.Attributes.CombinatorialTests.TwoArguments_Sequential(2,20)" seed="525413576" />
      <test-case id="2614" name="TwoArguments_Sequential(3,null)" fullname="TCLite.Framework.Attributes.CombinatorialTests.TwoArguments_Sequential(3,null)" seed="337894974" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2616" name="ThreeArguments_Combinatorial" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial" testcasecount="18">
      <properties>
        <property name="_JOINTYPE" value="Combinatorial" />
      </properties>
      <test-case id="2617" name="ThreeArguments_Combinatorial(1,10,&quot;Charlie&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(1,10,&quot;Charlie&quot;)" seed="2016534016" />
      <test-case id="2618" name="ThreeArguments_Combinatorial(1,10,&quot;Joe&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(1,10,&quot;Joe&quot;)" seed="1652540207" />
      <test-case id="2619" name="ThreeArguments_Combinatorial(1,10,&quot;Frank&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(1,10,&quot;Frank&quot;)" seed="393903731" />
      <test-case id="2620" name="ThreeArguments_Combinatorial(1,20,&quot;Charlie&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(1,20,&quot;Charlie&quot;)" seed="1769783656" />
      <test-case id="2621" name="ThreeArguments_Combinatorial(1,20,&quot;Joe&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(1,20,&quot;Joe&quot;)" seed="2132504604" />
      <test-case id="2622" name="ThreeArguments_Combinatorial(1,20,&quot;Frank&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(1,20,&quot;Frank&quot;)" seed="32890100" />
      <test-case id="2623" name="ThreeArguments_Combinatorial(2,10,&quot;Charlie&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(2,10,&quot;Charlie&quot;)" seed="1843126780" />
      <test-case id="2624" name="ThreeArguments_Combinatorial(2,10,&quot;Joe&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(2,10,&quot;Joe&quot;)" seed="91365458" />
      <test-case id="2625" name="ThreeArguments_Combinatorial(2,10,&quot;Frank&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(2,10,&quot;Frank&quot;)" seed="2025004495" />
      <test-case id="2626" name="ThreeArguments_Combinatorial(2,20,&quot;Charlie&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(2,20,&quot;Charlie&quot;)" seed="589578119" />
      <test-case id="2627" name="ThreeArguments_Combinatorial(2,20,&quot;Joe&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(2,20,&quot;Joe&quot;)" seed="522681847" />
      <test-case id="2628" name="ThreeArguments_Combinatorial(2,20,&quot;Frank&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(2,20,&quot;Frank&quot;)" seed="1367851741" />
      <test-case id="2629" name="ThreeArguments_Combinatorial(3,10,&quot;Charlie&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(3,10,&quot;Charlie&quot;)" seed="1036794617" />
      <test-case id="2630" name="ThreeArguments_Combinatorial(3,10,&quot;Joe&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(3,10,&quot;Joe&quot;)" seed="2103485158" />
      <test-case id="2631" name="ThreeArguments_Combinatorial(3,10,&quot;Frank&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(3,10,&quot;Frank&quot;)" seed="1530146759" />
      <test-case id="2632" name="ThreeArguments_Combinatorial(3,20,&quot;Charlie&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(3,20,&quot;Charlie&quot;)" seed="1009806248" />
      <test-case id="2633" name="ThreeArguments_Combinatorial(3,20,&quot;Joe&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(3,20,&quot;Joe&quot;)" seed="834213720" />
      <test-case id="2634" name="ThreeArguments_Combinatorial(3,20,&quot;Frank&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Combinatorial(3,20,&quot;Frank&quot;)" seed="358510308" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2636" name="ThreeArguments_Sequential" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Sequential" testcasecount="3">
      <properties>
        <property name="_JOINTYPE" value="Sequential" />
      </properties>
      <test-case id="2637" name="ThreeArguments_Sequential(1,10,&quot;Charlie&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Sequential(1,10,&quot;Charlie&quot;)" seed="212575852" />
      <test-case id="2638" name="ThreeArguments_Sequential(2,20,&quot;Joe&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Sequential(2,20,&quot;Joe&quot;)" seed="1169422087" />
      <test-case id="2639" name="ThreeArguments_Sequential(3,null,&quot;Frank&quot;)" fullname="TCLite.Framework.Attributes.CombinatorialTests.ThreeArguments_Sequential(3,null,&quot;Frank&quot;)" seed="409619937" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2641" name="RangeTest" fullname="TCLite.Framework.Attributes.CombinatorialTests.RangeTest" testcasecount="9">
      <test-case id="2642" name="RangeTest(0.2d,10)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RangeTest(0.2d,10)" seed="481204663" />
      <test-case id="2643" name="RangeTest(0.2d,15)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RangeTest(0.2d,15)" seed="923668308" />
      <test-case id="2644" name="RangeTest(0.2d,20)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RangeTest(0.2d,20)" seed="1674007065" />
      <test-case id="2645" name="RangeTest(0.4d,10)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RangeTest(0.4d,10)" seed="454250355" />
      <test-case id="2646" name="RangeTest(0.4d,15)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RangeTest(0.4d,15)" seed="1929413270" />
      <test-case id="2647" name="RangeTest(0.4d,20)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RangeTest(0.4d,20)" seed="2089975648" />
      <test-case id="2648" name="RangeTest(0.6000000000000001d,10)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RangeTest(0.6000000000000001d,10)" seed="585668755" />
      <test-case id="2649" name="RangeTest(0.6000000000000001d,15)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RangeTest(0.6000000000000001d,15)" seed="1208252252" />
      <test-case id="2650" name="RangeTest(0.6000000000000001d,20)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RangeTest(0.6000000000000001d,20)" seed="1318064429" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2652" name="RandomTest" fullname="TCLite.Framework.Attributes.CombinatorialTests.RandomTest" testcasecount="5">
      <properties>
        <property name="_JOINTYPE" value="Sequential" />
      </properties>
      <test-case id="2653" name="RandomTest(154,0.9742049793592678d,Delegate)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RandomTest(154,0.9742049793592678d,Delegate)" seed="741338184" />
      <test-case id="2654" name="RandomTest(150,0.01640382922087043d,ReturnValue)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RandomTest(150,0.01640382922087043d,ReturnValue)" seed="475138116" />
      <test-case id="2655" name="RandomTest(171,0.6018964623109887d,Method)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RandomTest(171,0.6018964623109887d,Method)" seed="1789344514" />
      <test-case id="2656" name="RandomTest(57,0.5407187550052622d,Method)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RandomTest(57,0.5407187550052622d,Method)" seed="1144280680" />
      <test-case id="2657" name="RandomTest(58,0.8159467185921719d,Module)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RandomTest(58,0.8159467185921719d,Module)" seed="1964437135" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2659" name="RandomArgsAreIndependent" fullname="TCLite.Framework.Attributes.CombinatorialTests.RandomArgsAreIndependent" testcasecount="1">
      <properties>
        <property name="_JOINTYPE" value="Sequential" />
      </properties>
      <test-case id="2660" name="RandomArgsAreIndependent(0.9459828259171839d,0.29060041359188055d)" fullname="TCLite.Framework.Attributes.CombinatorialTests.RandomArgsAreIndependent(0.9459828259171839d,0.29060041359188055d)" seed="17322285" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="2661" name="DatapointTests" fullname="TCLite.Framework.Attributes.DatapointTests" testcasecount="8">
    <test-case id="2662" name="WorksOnField" fullname="TCLite.Framework.Attributes.DatapointTests.WorksOnField" seed="1356897664" />
    <test-case id="2663" name="WorksOnArray" fullname="TCLite.Framework.Attributes.DatapointTests.WorksOnArray" seed="806057098" />
    <test-case id="2664" name="WorksOnPropertyReturningArray" fullname="TCLite.Framework.Attributes.DatapointTests.WorksOnPropertyReturningArray" seed="2001067180" />
    <test-case id="2665" name="WorksOnMethodReturningArray" fullname="TCLite.Framework.Attributes.DatapointTests.WorksOnMethodReturningArray" seed="1620265426" />
    <test-case id="2666" name="WorksOnIEnumerableOfT" fullname="TCLite.Framework.Attributes.DatapointTests.WorksOnIEnumerableOfT" seed="525728474" />
    <test-case id="2667" name="WorksOnPropertyReturningIEnumerableOfT" fullname="TCLite.Framework.Attributes.DatapointTests.WorksOnPropertyReturningIEnumerableOfT" seed="1055932508" />
    <test-case id="2668" name="WorksOnMethodReturningIEnumerableOfT" fullname="TCLite.Framework.Attributes.DatapointTests.WorksOnMethodReturningIEnumerableOfT" seed="1654406478" />
    <test-case id="2669" name="WorksOnEnumeratorReturningIEnumerableOfT" fullname="TCLite.Framework.Attributes.DatapointTests.WorksOnEnumeratorReturningIEnumerableOfT" seed="1998115326" />
  </test-suite>
  <test-suite type="TestFixture" id="2670" name="DescriptionTests" fullname="TCLite.Framework.Attributes.DescriptionTests" testcasecount="6">
    <test-case id="2671" name="ReflectionTest" fullname="TCLite.Framework.Attributes.DescriptionTests.ReflectionTest" seed="688297853" />
    <test-case id="2672" name="Description" fullname="TCLite.Framework.Attributes.DescriptionTests.Description" seed="715813632" />
    <test-case id="2673" name="NoDescription" fullname="TCLite.Framework.Attributes.DescriptionTests.NoDescription" seed="1522399174" />
    <test-case id="2674" name="FixtureDescription" fullname="TCLite.Framework.Attributes.DescriptionTests.FixtureDescription" seed="1514353447" />
    <test-case id="2675" name="SeparateDescriptionAttribute" fullname="TCLite.Framework.Attributes.DescriptionTests.SeparateDescriptionAttribute" seed="1698079268" />
    <test-case id="2676" name="DescriptionOnTestCase" fullname="TCLite.Framework.Attributes.DescriptionTests.DescriptionOnTestCase" seed="1554706470" />
  </test-suite>
  <test-suite type="TestFixture" id="2677" name="FixtureSetupTearDownTest" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest" testcasecount="18">
    <test-case id="2678" name="MakeSureSetUpAndTearDownAreCalled" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.MakeSureSetUpAndTearDownAreCalled" seed="1240379074" />
    <test-case id="2679" name="MakeSureSetUpAndTearDownAreCalledOnExplicitFixture" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.MakeSureSetUpAndTearDownAreCalledOnExplicitFixture" seed="16531415" />
    <test-case id="2680" name="CheckInheritedSetUpAndTearDownAreCalled" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.CheckInheritedSetUpAndTearDownAreCalled" seed="50299514" />
    <test-case id="2681" name="StaticSetUpAndTearDownAreCalled" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.StaticSetUpAndTearDownAreCalled" seed="1503475136" />
    <test-case id="2682" name="StaticClassSetUpAndTearDownAreCalled" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.StaticClassSetUpAndTearDownAreCalled" seed="2075758684" />
    <test-case id="2683" name="OverriddenSetUpAndTearDownAreNotCalled" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.OverriddenSetUpAndTearDownAreNotCalled" seed="1535329353" />
    <test-case id="2684" name="BaseSetUpCalledFirstAndTearDownCalledLast" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.BaseSetUpCalledFirstAndTearDownCalledLast" seed="728871899" />
    <test-case id="2685" name="StaticBaseSetUpCalledFirstAndTearDownCalledLast" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.StaticBaseSetUpCalledFirstAndTearDownCalledLast" seed="867380313" />
    <test-case id="2686" name="HandleErrorInFixtureSetup" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.HandleErrorInFixtureSetup" seed="1315533301" />
    <test-case id="2687" name="RerunFixtureAfterSetUpFixed" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.RerunFixtureAfterSetUpFixed" seed="203091334" />
    <test-case id="2688" name="HandleIgnoreInFixtureSetup" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.HandleIgnoreInFixtureSetup" seed="90398099" />
    <test-case id="2689" name="HandleErrorInFixtureTearDown" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.HandleErrorInFixtureTearDown" seed="1257458025" />
    <test-case id="2690" name="HandleExceptionInFixtureConstructor" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.HandleExceptionInFixtureConstructor" seed="1030596853" />
    <test-case id="2691" name="RerunFixtureAfterTearDownFixed" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.RerunFixtureAfterTearDownFixed" seed="706940066" />
    <test-case id="2692" name="HandleSetUpAndTearDownWithTestInName" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.HandleSetUpAndTearDownWithTestInName" seed="1995723582" />
    <test-case id="2693" name="IgnoredFixtureShouldNotCallFixtureSetUpOrTearDown" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.IgnoredFixtureShouldNotCallFixtureSetUpOrTearDown" seed="47543731" />
    <test-case id="2694" name="FixtureWithNoTestsShouldCallFixtureSetUpOrTearDown" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.FixtureWithNoTestsShouldCallFixtureSetUpOrTearDown" seed="1725990874" />
    <test-case id="2695" name="DisposeCalledWhenFixtureImplementsIDisposable" fullname="TCLite.Framework.Attributes.FixtureSetupTearDownTest.DisposeCalledWhenFixtureImplementsIDisposable" seed="2039997584" />
  </test-suite>
  <test-suite type="TestFixture" id="2696" name="ChangesMadeInFixtureSetUp" fullname="TCLite.Framework.Attributes.ChangesMadeInFixtureSetUp" testcasecount="1">
    <test-case id="2697" name="TestThatChangesPersistUsingSameThread" fullname="TCLite.Framework.Attributes.ChangesMadeInFixtureSetUp.TestThatChangesPersistUsingSameThread" seed="139048023" />
  </test-suite>
  <test-suite type="TestFixture" id="2698" name="PairwiseTest" fullname="TCLite.Framework.Attributes.PairwiseTest" testcasecount="9">
    <test-suite type="ParameterizedMethod" id="2700" name="Test" fullname="TCLite.Framework.Attributes.PairwiseTest.Test" testcasecount="9">
      <test-case id="2701" name="Test 2x4" fullname="TCLite.Framework.Attributes.PairwiseTest.Test 2x4" seed="1512824474" />
      <test-case id="2702" name="Test 2x2x2" fullname="TCLite.Framework.Attributes.PairwiseTest.Test 2x2x2" seed="1800392231" />
      <test-case id="2703" name="Test 3x2x2" fullname="TCLite.Framework.Attributes.PairwiseTest.Test 3x2x2" seed="28156622" />
      <test-case id="2704" name="Test 3x2x2x2" fullname="TCLite.Framework.Attributes.PairwiseTest.Test 3x2x2x2" seed="504926775" />
      <test-case id="2705" name="Test 3x2x2x2x2" fullname="TCLite.Framework.Attributes.PairwiseTest.Test 3x2x2x2x2" seed="739794073" />
      <test-case id="2706" name="Test 3x2x2x2x2x2" fullname="TCLite.Framework.Attributes.PairwiseTest.Test 3x2x2x2x2x2" seed="643693613" />
      <test-case id="2707" name="Test 3x3x3" fullname="TCLite.Framework.Attributes.PairwiseTest.Test 3x3x3" seed="1501171076" />
      <test-case id="2708" name="Test 4x4x4" fullname="TCLite.Framework.Attributes.PairwiseTest.Test 4x4x4" seed="974281832" />
      <test-case id="2709" name="Test 5x5x5" fullname="TCLite.Framework.Attributes.PairwiseTest.Test 5x5x5" seed="1073036629" />
    </test-suite>
  </test-suite>
  <test-suite type="ParameterizedFixture" id="2711" name="ParameterizedTestFixture" fullname="TCLite.Framework.Attributes.ParameterizedTestFixture" testcasecount="6">
    <test-suite type="TestFixture" id="2712" name="ParameterizedTestFixture(&quot;hello&quot;,&quot;hello&quot;,&quot;goodbye&quot;)" fullname="TCLite.Framework.Attributes.ParameterizedTestFixture(&quot;hello&quot;,&quot;hello&quot;,&quot;goodbye&quot;)" testcasecount="2">
      <test-case id="2713" name="TestEquality" fullname="TCLite.Framework.Attributes.ParameterizedTestFixture(&quot;hello&quot;,&quot;hello&quot;,&quot;goodbye&quot;).TestEquality" seed="985709212" />
      <test-case id="2714" name="TestInequality" fullname="TCLite.Framework.Attributes.ParameterizedTestFixture(&quot;hello&quot;,&quot;hello&quot;,&quot;goodbye&quot;).TestInequality" seed="1885920370" />
    </test-suite>
    <test-suite type="TestFixture" id="2715" name="ParameterizedTestFixture(&quot;zip&quot;,&quot;zip&quot;)" fullname="TCLite.Framework.Attributes.ParameterizedTestFixture(&quot;zip&quot;,&quot;zip&quot;)" testcasecount="2">
      <test-case id="2716" name="TestEquality" fullname="TCLite.Framework.Attributes.ParameterizedTestFixture(&quot;zip&quot;,&quot;zip&quot;).TestEquality" seed="407014096" />
      <test-case id="2717" name="TestInequality" fullname="TCLite.Framework.Attributes.ParameterizedTestFixture(&quot;zip&quot;,&quot;zip&quot;).TestInequality" seed="575622201" />
    </test-suite>
    <test-suite type="TestFixture" id="2718" name="ParameterizedTestFixture(42,42,99)" fullname="TCLite.Framework.Attributes.ParameterizedTestFixture(42,42,99)" testcasecount="2">
      <test-case id="2719" name="TestEquality" fullname="TCLite.Framework.Attributes.ParameterizedTestFixture(42,42,99).TestEquality" seed="1035073134" />
      <test-case id="2720" name="TestInequality" fullname="TCLite.Framework.Attributes.ParameterizedTestFixture(42,42,99).TestInequality" seed="1801029429" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="2721" name="ParameterizedTestFixtureNamingTests" fullname="TCLite.Framework.Attributes.ParameterizedTestFixtureNamingTests" testcasecount="5">
    <test-case id="2722" name="TopLevelSuiteIsNamedCorrectly" fullname="TCLite.Framework.Attributes.ParameterizedTestFixtureNamingTests.TopLevelSuiteIsNamedCorrectly" seed="77685355" />
    <test-case id="2723" name="SuiteHasCorrectNumberOfInstances" fullname="TCLite.Framework.Attributes.ParameterizedTestFixtureNamingTests.SuiteHasCorrectNumberOfInstances" seed="724806769" />
    <test-case id="2724" name="FixtureInstancesAreNamedCorrectly" fullname="TCLite.Framework.Attributes.ParameterizedTestFixtureNamingTests.FixtureInstancesAreNamedCorrectly" seed="424838602" />
    <test-case id="2725" name="MethodWithoutParamsIsNamedCorrectly" fullname="TCLite.Framework.Attributes.ParameterizedTestFixtureNamingTests.MethodWithoutParamsIsNamedCorrectly" seed="285869378" />
    <test-case id="2726" name="MethodWithParamsIsNamedCorrectly" fullname="TCLite.Framework.Attributes.ParameterizedTestFixtureNamingTests.MethodWithParamsIsNamedCorrectly" seed="1216005643" />
  </test-suite>
  <test-suite type="TestFixture" id="2727" name="ParameterizedTestFixtureTests" fullname="TCLite.Framework.Attributes.ParameterizedTestFixtureTests" testcasecount="2">
    <test-case id="2728" name="CanSpecifyCategory" fullname="TCLite.Framework.Attributes.ParameterizedTestFixtureTests.CanSpecifyCategory" seed="429107782" />
    <test-case id="2729" name="CanSpecifyMultipleCategories" fullname="TCLite.Framework.Attributes.ParameterizedTestFixtureTests.CanSpecifyMultipleCategories" seed="1435934033" />
  </test-suite>
  <test-suite type="TestFixture" id="2730" name="PropertyAttributeTests" fullname="TCLite.Framework.Attributes.PropertyAttributeTests" testcasecount="4">
    <test-case id="2731" name="PropertyWithStringValue" fullname="TCLite.Framework.Attributes.PropertyAttributeTests.PropertyWithStringValue" seed="489517351" />
    <test-case id="2732" name="PropertiesWithNumericValues" fullname="TCLite.Framework.Attributes.PropertyAttributeTests.PropertiesWithNumericValues" seed="1638007444" />
    <test-case id="2733" name="PropertyWorksOnFixtures" fullname="TCLite.Framework.Attributes.PropertyAttributeTests.PropertyWorksOnFixtures" seed="1797975846" />
    <test-case id="2734" name="CanDeriveFromPropertyAttribute" fullname="TCLite.Framework.Attributes.PropertyAttributeTests.CanDeriveFromPropertyAttribute" seed="1529867327" />
  </test-suite>
  <test-suite type="TestFixture" id="2735" name="SetCultureAttributeTests" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests" testcasecount="9">
    <test-case id="2736" name="SetUICultureOnlyToFrench" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests.SetUICultureOnlyToFrench" seed="1415754096">
      <properties>
        <property name="SetUICulture" value="fr-FR" />
      </properties>
    </test-case>
    <test-case id="2737" name="SetUICultureOnlyToFrenchCanadian" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests.SetUICultureOnlyToFrenchCanadian" seed="25335655">
      <properties>
        <property name="SetUICulture" value="fr-CA" />
      </properties>
    </test-case>
    <test-case id="2738" name="SetUICultureOnlyToRussian" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests.SetUICultureOnlyToRussian" seed="947466412">
      <properties>
        <property name="SetUICulture" value="ru-RU" />
      </properties>
    </test-case>
    <test-case id="2739" name="SetBothCulturesToFrench" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests.SetBothCulturesToFrench" seed="2391744">
      <properties>
        <property name="SetCulture" value="fr-FR" />
        <property name="SetUICulture" value="fr-FR" />
      </properties>
    </test-case>
    <test-case id="2740" name="SetBothCulturesToFrenchCanadian" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests.SetBothCulturesToFrenchCanadian" seed="640754122">
      <properties>
        <property name="SetCulture" value="fr-CA" />
        <property name="SetUICulture" value="fr-CA" />
      </properties>
    </test-case>
    <test-case id="2741" name="SetBothCulturesToRussian" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests.SetBothCulturesToRussian" seed="1137306405">
      <properties>
        <property name="SetCulture" value="ru-RU" />
        <property name="SetUICulture" value="ru-RU" />
      </properties>
    </test-case>
    <test-case id="2742" name="SetMixedCulturesToFrenchAndUIFrenchCanadian" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests.SetMixedCulturesToFrenchAndUIFrenchCanadian" seed="1629885237">
      <properties>
        <property name="SetCulture" value="fr-FR" />
        <property name="SetUICulture" value="fr-CA" />
      </properties>
    </test-case>
    <test-case id="2743" name="SetMixedCulturesToRussianAndUIEnglishUS" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests.SetMixedCulturesToRussianAndUIEnglishUS" seed="1375305424">
      <properties>
        <property name="SetCulture" value="ru-RU" />
        <property name="SetUICulture" value="en-US" />
      </properties>
    </test-case>
    <test-suite type="ParameterizedMethod" id="2745" name="UseWithParameterizedTest" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests.UseWithParameterizedTest" testcasecount="1">
      <properties>
        <property name="SetCulture" value="de-DE" />
      </properties>
      <test-case id="2746" name="UseWithParameterizedTest()" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests.UseWithParameterizedTest()" seed="185254794" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="2747" name="TestFixtureAttributeTests" fullname="TCLite.Framework.Attributes.TestFixtureAttributeTests" testcasecount="6">
    <test-case id="2748" name="ConstructWithoutArguments" fullname="TCLite.Framework.Attributes.TestFixtureAttributeTests.ConstructWithoutArguments" seed="1901797886" />
    <test-case id="2749" name="ConstructWithFixtureArgs" fullname="TCLite.Framework.Attributes.TestFixtureAttributeTests.ConstructWithFixtureArgs" seed="1212222452" />
    <test-case id="2750" name="ConstructWithJustTypeArgs" fullname="TCLite.Framework.Attributes.TestFixtureAttributeTests.ConstructWithJustTypeArgs" seed="1659088287" />
    <test-case id="2751" name="ConstructWithNoArgumentsAndSetTypeArgs" fullname="TCLite.Framework.Attributes.TestFixtureAttributeTests.ConstructWithNoArgumentsAndSetTypeArgs" seed="1457989088" />
    <test-case id="2752" name="ConstructWithFixtureArgsAndSetTypeArgs" fullname="TCLite.Framework.Attributes.TestFixtureAttributeTests.ConstructWithFixtureArgsAndSetTypeArgs" seed="859781523" />
    <test-case id="2753" name="ConstructWithCombinedArgs" fullname="TCLite.Framework.Attributes.TestFixtureAttributeTests.ConstructWithCombinedArgs" seed="574587608" />
  </test-suite>
  <test-suite type="TestFixture" id="2754" name="TimeoutTests" fullname="TCLite.Framework.Attributes.TimeoutTests" testcasecount="2">
    <test-case id="2755" name="TestWithTimeoutRunsOnSeparateThread" fullname="TCLite.Framework.Attributes.TimeoutTests.TestWithTimeoutRunsOnSeparateThread" seed="561047521">
      <properties>
        <property name="Timeout" value="50" />
      </properties>
    </test-case>
    <test-case id="2756" name="TestWithTimeoutRunsSetUpAndTestOnSameThread" fullname="TCLite.Framework.Attributes.TimeoutTests.TestWithTimeoutRunsSetUpAndTestOnSameThread" seed="1803318917">
      <properties>
        <property name="Timeout" value="50" />
      </properties>
    </test-case>
  </test-suite>
  <test-suite type="TestFixture" id="2757" name="ValuesAttributeTests" fullname="TCLite.Framework.Attributes.ValuesAttributeTests" testcasecount="43">
    <test-case id="2758" name="ValuesAttributeProvidesSpecifiedValues" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.ValuesAttributeProvidesSpecifiedValues" seed="2029154748" />
    <test-suite type="ParameterizedMethod" id="2760" name="CanConvertSmallIntsToShort" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertSmallIntsToShort" testcasecount="1">
      <test-case id="2761" name="CanConvertSmallIntsToShort(5)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertSmallIntsToShort(5)" seed="1577096578" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2763" name="CanConvertSmallIntsToByte" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertSmallIntsToByte" testcasecount="1">
      <test-case id="2764" name="CanConvertSmallIntsToByte(5)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertSmallIntsToByte(5)" seed="1943560885" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2766" name="CanConvertSmallIntsToSByte" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertSmallIntsToSByte" testcasecount="1">
      <test-case id="2767" name="CanConvertSmallIntsToSByte(5)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertSmallIntsToSByte(5)" seed="1662259545" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2769" name="CanConvertIntToDecimal" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntToDecimal" testcasecount="1">
      <test-case id="2770" name="CanConvertIntToDecimal(12m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntToDecimal(12m)" seed="222384891" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2772" name="CanConverDoubleToDecimal" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConverDoubleToDecimal" testcasecount="1">
      <test-case id="2773" name="CanConverDoubleToDecimal(12.5m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConverDoubleToDecimal(12.5m)" seed="1377051071" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2775" name="CanConvertStringToDecimal" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertStringToDecimal" testcasecount="1">
      <test-case id="2776" name="CanConvertStringToDecimal(12.5m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertStringToDecimal(12.5m)" seed="629254711" />
    </test-suite>
    <test-case id="2777" name="RangeAttributeWithIntRange" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.RangeAttributeWithIntRange" seed="1270916813" />
    <test-case id="2778" name="RangeAttributeWithIntRangeAndStep" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.RangeAttributeWithIntRangeAndStep" seed="1770188776" />
    <test-case id="2779" name="RangeAttributeWithLongRangeAndStep" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.RangeAttributeWithLongRangeAndStep" seed="1440121496" />
    <test-case id="2780" name="RangeAttributeWithDoubleRangeAndStep" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.RangeAttributeWithDoubleRangeAndStep" seed="823991941" />
    <test-case id="2781" name="RangeAttributeWithFloatRangeAndStep" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.RangeAttributeWithFloatRangeAndStep" seed="1857423888" />
    <test-suite type="ParameterizedMethod" id="2783" name="CanConvertIntRangeToShort" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToShort" testcasecount="3">
      <test-case id="2784" name="CanConvertIntRangeToShort(1)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToShort(1)" seed="76890441" />
      <test-case id="2785" name="CanConvertIntRangeToShort(2)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToShort(2)" seed="1310874880" />
      <test-case id="2786" name="CanConvertIntRangeToShort(3)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToShort(3)" seed="537632825" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2788" name="CanConvertIntRangeToByte" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToByte" testcasecount="3">
      <test-case id="2789" name="CanConvertIntRangeToByte(1)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToByte(1)" seed="854434576" />
      <test-case id="2790" name="CanConvertIntRangeToByte(2)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToByte(2)" seed="1357410393" />
      <test-case id="2791" name="CanConvertIntRangeToByte(3)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToByte(3)" seed="1375423164" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2793" name="CanConvertIntRangeToSByte" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToSByte" testcasecount="3">
      <test-case id="2794" name="CanConvertIntRangeToSByte(1)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToSByte(1)" seed="1475835421" />
      <test-case id="2795" name="CanConvertIntRangeToSByte(2)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToSByte(2)" seed="26815420" />
      <test-case id="2796" name="CanConvertIntRangeToSByte(3)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToSByte(3)" seed="1070644885" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2798" name="CanConvertIntRangeToDecimal" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToDecimal" testcasecount="3">
      <test-case id="2799" name="CanConvertIntRangeToDecimal(1m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToDecimal(1m)" seed="344955090" />
      <test-case id="2800" name="CanConvertIntRangeToDecimal(2m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToDecimal(2m)" seed="748613965" />
      <test-case id="2801" name="CanConvertIntRangeToDecimal(3m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertIntRangeToDecimal(3m)" seed="924612506" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2803" name="CanConvertDoubleRangeToDecimal" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertDoubleRangeToDecimal" testcasecount="4">
      <test-case id="2804" name="CanConvertDoubleRangeToDecimal(1m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertDoubleRangeToDecimal(1m)" seed="1347800424" />
      <test-case id="2805" name="CanConvertDoubleRangeToDecimal(1.1m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertDoubleRangeToDecimal(1.1m)" seed="849818340" />
      <test-case id="2806" name="CanConvertDoubleRangeToDecimal(1.2m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertDoubleRangeToDecimal(1.2m)" seed="2046715190" />
      <test-case id="2807" name="CanConvertDoubleRangeToDecimal(1.3m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertDoubleRangeToDecimal(1.3m)" seed="1012946550" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2809" name="CanConvertRandomIntToShort" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToShort" testcasecount="3">
      <test-case id="2810" name="CanConvertRandomIntToShort(6)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToShort(6)" seed="1213202129" />
      <test-case id="2811" name="CanConvertRandomIntToShort(7)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToShort(7)" seed="1114333161" />
      <test-case id="2812" name="CanConvertRandomIntToShort(5)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToShort(5)" seed="1573571502" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2814" name="CanConvertRandomIntToByte" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToByte" testcasecount="3">
      <test-case id="2815" name="CanConvertRandomIntToByte(6)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToByte(6)" seed="641418035" />
      <test-case id="2816" name="CanConvertRandomIntToByte(6)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToByte(6)" seed="2015543908" />
      <test-case id="2817" name="CanConvertRandomIntToByte(5)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToByte(5)" seed="1780098763" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2819" name="CanConvertRandomIntToSByte" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToSByte" testcasecount="3">
      <test-case id="2820" name="CanConvertRandomIntToSByte(8)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToSByte(8)" seed="607846250" />
      <test-case id="2821" name="CanConvertRandomIntToSByte(1)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToSByte(1)" seed="60910866" />
      <test-case id="2822" name="CanConvertRandomIntToSByte(9)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToSByte(9)" seed="2001898608" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2824" name="CanConvertRandomIntToDecimal" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToDecimal" testcasecount="3">
      <test-case id="2825" name="CanConvertRandomIntToDecimal(1m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToDecimal(1m)" seed="2015091429" />
      <test-case id="2826" name="CanConvertRandomIntToDecimal(1m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToDecimal(1m)" seed="1193369205" />
      <test-case id="2827" name="CanConvertRandomIntToDecimal(2m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomIntToDecimal(2m)" seed="795768231" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2829" name="CanConvertRandomDoubleToDecimal" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomDoubleToDecimal" testcasecount="3">
      <test-case id="2830" name="CanConvertRandomDoubleToDecimal(5.25269228418017m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomDoubleToDecimal(5.25269228418017m)" seed="318211701" />
      <test-case id="2831" name="CanConvertRandomDoubleToDecimal(2.32354038503186m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomDoubleToDecimal(2.32354038503186m)" seed="878958578" />
      <test-case id="2832" name="CanConvertRandomDoubleToDecimal(6.56311830578517m)" fullname="TCLite.Framework.Attributes.ValuesAttributeTests.CanConvertRandomDoubleToDecimal(6.56311830578517m)" seed="1018048993" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="2833" name="ValueSourceTests" fullname="TCLite.Framework.Attributes.ValueSourceTests" testcasecount="16">
    <test-suite type="ParameterizedMethod" id="2835" name="ValueSourceCanBeStaticProperty" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceCanBeStaticProperty" testcasecount="1">
      <test-case id="2836" name="ValueSourceCanBeStaticProperty(&quot;StaticProperty&quot;)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceCanBeStaticProperty(&quot;StaticProperty&quot;)" seed="1844668556" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2838" name="ValueSourceCanBeInstanceProperty" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceCanBeInstanceProperty" testcasecount="1">
      <test-case id="2839" name="ValueSourceCanBeInstanceProperty(&quot;InstanceProperty&quot;)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceCanBeInstanceProperty(&quot;InstanceProperty&quot;)" seed="805893296" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2841" name="ValueSourceCanBeStaticMethod" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceCanBeStaticMethod" testcasecount="1">
      <test-case id="2842" name="ValueSourceCanBeStaticMethod(&quot;StaticMethod&quot;)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceCanBeStaticMethod(&quot;StaticMethod&quot;)" seed="1665365183" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2844" name="ValueSourceCanBeInstanceMethod" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceCanBeInstanceMethod" testcasecount="1">
      <test-case id="2845" name="ValueSourceCanBeInstanceMethod(&quot;InstanceMethod&quot;)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceCanBeInstanceMethod(&quot;InstanceMethod&quot;)" seed="108364353" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2847" name="ValueSourceCanBeStaticField" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceCanBeStaticField" testcasecount="1">
      <test-case id="2848" name="ValueSourceCanBeStaticField(&quot;StaticField&quot;)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceCanBeStaticField(&quot;StaticField&quot;)" seed="590923006" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2850" name="ValueSourceCanBeInstanceField" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceCanBeInstanceField" testcasecount="1">
      <test-case id="2851" name="ValueSourceCanBeInstanceField(&quot;InstanceField&quot;)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceCanBeInstanceField(&quot;InstanceField&quot;)" seed="674589627" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2853" name="MultipleArguments" fullname="TCLite.Framework.Attributes.ValueSourceTests.MultipleArguments" testcasecount="3">
      <properties>
        <property name="_JOINTYPE" value="Sequential" />
      </properties>
      <test-case id="2854" name="MultipleArguments(12,3,4)" fullname="TCLite.Framework.Attributes.ValueSourceTests.MultipleArguments(12,3,4)" seed="804653711" />
      <test-case id="2855" name="MultipleArguments(12,4,3)" fullname="TCLite.Framework.Attributes.ValueSourceTests.MultipleArguments(12,4,3)" seed="100578695" />
      <test-case id="2856" name="MultipleArguments(12,6,2)" fullname="TCLite.Framework.Attributes.ValueSourceTests.MultipleArguments(12,6,2)" seed="1631842006" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2858" name="ValueSourceMayBeInAnotherClass" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceMayBeInAnotherClass" testcasecount="3">
      <properties>
        <property name="_JOINTYPE" value="Sequential" />
      </properties>
      <test-case id="2859" name="ValueSourceMayBeInAnotherClass(12,3,4)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceMayBeInAnotherClass(12,3,4)" seed="1246235834" />
      <test-case id="2860" name="ValueSourceMayBeInAnotherClass(12,4,3)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceMayBeInAnotherClass(12,4,3)" seed="534232101" />
      <test-case id="2861" name="ValueSourceMayBeInAnotherClass(12,6,2)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceMayBeInAnotherClass(12,6,2)" seed="732674032" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="2863" name="ValueSourceMayBeGeneric" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceMayBeGeneric" testcasecount="4">
      <test-case id="2864" name="ValueSourceMayBeGeneric(1)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceMayBeGeneric(1)" seed="1684199658" />
      <test-case id="2865" name="ValueSourceMayBeGeneric(2)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceMayBeGeneric(2)" seed="828482613" />
      <test-case id="2866" name="ValueSourceMayBeGeneric(4)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceMayBeGeneric(4)" seed="1018948379" />
      <test-case id="2867" name="ValueSourceMayBeGeneric(8)" fullname="TCLite.Framework.Attributes.ValueSourceTests.ValueSourceMayBeGeneric(8)" seed="314459121" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="2868" name="ConditionAssertTests" fullname="TCLite.Framework.Assertions.ConditionAssertTests" testcasecount="4">
    <test-case id="2869" name="IsTrue" fullname="TCLite.Framework.Assertions.ConditionAssertTests.IsTrue" seed="1520050198" />
    <test-case id="2870" name="IsFalse" fullname="TCLite.Framework.Assertions.ConditionAssertTests.IsFalse" seed="1477819528" />
    <test-case id="2871" name="IsNull" fullname="TCLite.Framework.Assertions.ConditionAssertTests.IsNull" seed="1763791808" />
    <test-case id="2872" name="IsNotNull" fullname="TCLite.Framework.Assertions.ConditionAssertTests.IsNotNull" seed="57714684" />
  </test-suite>
  <test-suite type="TestFixture" id="2873" name="ArrayEqualsFailureMessageFixture" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture" testcasecount="15">
    <test-case id="2874" name="ArraysHaveDifferentRanks" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.ArraysHaveDifferentRanks" seed="655855615" />
    <test-case id="2875" name="ExpectedArrayIsLonger" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.ExpectedArrayIsLonger" seed="2014033641" />
    <test-case id="2876" name="ActualArrayIsLonger" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.ActualArrayIsLonger" seed="182573906" />
    <test-case id="2877" name="FailureOnSingleDimensionedArrays" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.FailureOnSingleDimensionedArrays" seed="1989363627" />
    <test-case id="2878" name="DoubleDimensionedArrays" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.DoubleDimensionedArrays" seed="444275325" />
    <test-case id="2879" name="TripleDimensionedArrays" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.TripleDimensionedArrays" seed="703028630" />
    <test-case id="2880" name="FiveDimensionedArrays" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.FiveDimensionedArrays" seed="476721959" />
    <test-case id="2881" name="JaggedArrays" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.JaggedArrays" seed="1000019615" />
    <test-case id="2882" name="JaggedArrayComparedToSimpleArray" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.JaggedArrayComparedToSimpleArray" seed="1489802611" />
    <test-case id="2883" name="ArraysWithDifferentRanksAsCollection" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.ArraysWithDifferentRanksAsCollection" seed="182053959" />
    <test-case id="2884" name="ArraysWithDifferentDimensionsAsCollection" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.ArraysWithDifferentDimensionsAsCollection" seed="680067190" />
    <test-case id="2885" name="SameLengthDifferentContent" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.SameLengthDifferentContent" seed="1856087366" />
    <test-case id="2886" name="ArraysDeclaredAsDifferentTypes" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.ArraysDeclaredAsDifferentTypes" seed="191686307" />
    <test-case id="2887" name="ArrayAndCollection_Failure" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.ArrayAndCollection_Failure" seed="1474389744" />
    <test-case id="2888" name="DifferentArrayTypesEqualFails" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFailureMessageFixture.DifferentArrayTypesEqualFails" seed="1051429056" />
  </test-suite>
  <test-suite type="TestFixture" id="2889" name="ArrayEqualsFixture" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture" testcasecount="17">
    <test-case id="2890" name="ArrayIsEqualToItself" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArrayIsEqualToItself" seed="118719210" />
    <test-case id="2891" name="ArraysOfString" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArraysOfString" seed="1829918888" />
    <test-case id="2892" name="ArraysOfInt" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArraysOfInt" seed="741453987" />
    <test-case id="2893" name="ArraysOfDouble" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArraysOfDouble" seed="1455792184" />
    <test-case id="2894" name="ArraysOfDecimal" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArraysOfDecimal" seed="338356923" />
    <test-case id="2895" name="ArrayOfIntAndArrayOfDouble" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArrayOfIntAndArrayOfDouble" seed="408548418" />
    <test-case id="2896" name="ArraysDeclaredAsDifferentTypes" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArraysDeclaredAsDifferentTypes" seed="1013754466" />
    <test-case id="2897" name="ArraysOfMixedTypes" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArraysOfMixedTypes" seed="2089213143" />
    <test-case id="2898" name="DoubleDimensionedArrays" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.DoubleDimensionedArrays" seed="1542665848" />
    <test-case id="2899" name="TripleDimensionedArrays" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.TripleDimensionedArrays" seed="1481311807" />
    <test-case id="2900" name="FiveDimensionedArrays" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.FiveDimensionedArrays" seed="1047424731" />
    <test-case id="2901" name="ArraysOfArrays" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArraysOfArrays" seed="1071130239" />
    <test-case id="2902" name="JaggedArrays" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.JaggedArrays" seed="1379911900" />
    <test-case id="2903" name="ArraysPassedAsObjects" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArraysPassedAsObjects" seed="982950229" />
    <test-case id="2904" name="ArrayAndCollection" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArrayAndCollection" seed="1700632308" />
    <test-case id="2905" name="ArraysWithDifferentRanksComparedAsCollection" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArraysWithDifferentRanksComparedAsCollection" seed="1820802654" />
    <test-case id="2906" name="ArraysWithDifferentDimensionsMatchedAsCollection" fullname="TCLite.Framework.AssertionTests.ArrayEqualsFixture.ArraysWithDifferentDimensionsMatchedAsCollection" seed="1465432350" />
  </test-suite>
  <test-suite type="TestFixture" id="2907" name="ArrayNotEqualFixture" fullname="TCLite.Framework.AssertionTests.ArrayNotEqualFixture" testcasecount="3">
    <test-case id="2908" name="DifferentLengthArrays" fullname="TCLite.Framework.AssertionTests.ArrayNotEqualFixture.DifferentLengthArrays" seed="701903540" />
    <test-case id="2909" name="SameLengthDifferentContent" fullname="TCLite.Framework.AssertionTests.ArrayNotEqualFixture.SameLengthDifferentContent" seed="821243894" />
    <test-case id="2910" name="ArraysDeclaredAsDifferentTypes" fullname="TCLite.Framework.AssertionTests.ArrayNotEqualFixture.ArraysDeclaredAsDifferentTypes" seed="362193378" />
  </test-suite>
  <test-suite type="TestFixture" id="2911" name="AssertFailTests" fullname="TCLite.Framework.AssertionTests.AssertFailTests" testcasecount="3">
    <test-case id="2912" name="ThrowsAssertionException" fullname="TCLite.Framework.AssertionTests.AssertFailTests.ThrowsAssertionException" seed="1978118562" />
    <test-case id="2913" name="ThrowsAssertionExceptionWithMessage" fullname="TCLite.Framework.AssertionTests.AssertFailTests.ThrowsAssertionExceptionWithMessage" seed="623319390" />
    <test-case id="2914" name="ThrowsAssertionExceptionWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssertFailTests.ThrowsAssertionExceptionWithMessageAndArgs" seed="1823485203" />
  </test-suite>
  <test-suite type="TestFixture" id="2915" name="AssertIgnoreTests" fullname="TCLite.Framework.AssertionTests.AssertIgnoreTests" testcasecount="3">
    <test-case id="2916" name="ThrowsIgnoreException" fullname="TCLite.Framework.AssertionTests.AssertIgnoreTests.ThrowsIgnoreException" seed="1811572675" />
    <test-case id="2917" name="ThrowsIgnoreExceptionWithMessage" fullname="TCLite.Framework.AssertionTests.AssertIgnoreTests.ThrowsIgnoreExceptionWithMessage" seed="2035378023" />
    <test-case id="2918" name="ThrowsIgnoreExceptionWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssertIgnoreTests.ThrowsIgnoreExceptionWithMessageAndArgs" seed="197867668" />
  </test-suite>
  <test-suite type="TestFixture" id="2919" name="AssertInconclusiveTests" fullname="TCLite.Framework.AssertionTests.AssertInconclusiveTests" testcasecount="3">
    <test-case id="2920" name="ThrowsInconclusiveException" fullname="TCLite.Framework.AssertionTests.AssertInconclusiveTests.ThrowsInconclusiveException" seed="1952117743" />
    <test-case id="2921" name="ThrowsInconclusiveExceptionWithMessage" fullname="TCLite.Framework.AssertionTests.AssertInconclusiveTests.ThrowsInconclusiveExceptionWithMessage" seed="758259731" />
    <test-case id="2922" name="ThrowsInconclusiveExceptionWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssertInconclusiveTests.ThrowsInconclusiveExceptionWithMessageAndArgs" seed="1449788047" />
  </test-suite>
  <test-suite type="TestFixture" id="2923" name="AssertPassTests" fullname="TCLite.Framework.AssertionTests.AssertPassTests" testcasecount="4">
    <test-case id="2924" name="ThrowsSuccessException" fullname="TCLite.Framework.AssertionTests.AssertPassTests.ThrowsSuccessException" seed="566168644" />
    <test-case id="2925" name="ThrowsSuccessExceptionWithMessage" fullname="TCLite.Framework.AssertionTests.AssertPassTests.ThrowsSuccessExceptionWithMessage" seed="825628382" />
    <test-case id="2926" name="AssertPassReturnsSuccess" fullname="TCLite.Framework.AssertionTests.AssertPassTests.AssertPassReturnsSuccess" seed="540987725" />
    <test-case id="2927" name="SubsequentFailureIsIrrelevant" fullname="TCLite.Framework.AssertionTests.AssertPassTests.SubsequentFailureIsIrrelevant" seed="209809914" />
  </test-suite>
  <test-suite type="TestFixture" id="2928" name="AssertThatTests" fullname="TCLite.Framework.AssertionTests.AssertThatTests" testcasecount="19">
    <test-case id="2929" name="AssertionPasses_Boolean" fullname="TCLite.Framework.AssertionTests.AssertThatTests.AssertionPasses_Boolean" seed="1924537204" />
    <test-case id="2930" name="AssertionPasses_BooleanWithMessage" fullname="TCLite.Framework.AssertionTests.AssertThatTests.AssertionPasses_BooleanWithMessage" seed="900229169" />
    <test-case id="2931" name="AssertionPasses_BooleanWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssertThatTests.AssertionPasses_BooleanWithMessageAndArgs" seed="632023880" />
    <test-case id="2932" name="AssertionPasses_ActualAndConstraint" fullname="TCLite.Framework.AssertionTests.AssertThatTests.AssertionPasses_ActualAndConstraint" seed="778596211" />
    <test-case id="2933" name="AssertionPasses_ActualAndConstraintWithMessage" fullname="TCLite.Framework.AssertionTests.AssertThatTests.AssertionPasses_ActualAndConstraintWithMessage" seed="22027344" />
    <test-case id="2934" name="AssertionPasses_ActualAndConstraintWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssertThatTests.AssertionPasses_ActualAndConstraintWithMessageAndArgs" seed="1425434885" />
    <test-case id="2935" name="AssertionPasses_ReferenceAndConstraint" fullname="TCLite.Framework.AssertionTests.AssertThatTests.AssertionPasses_ReferenceAndConstraint" seed="1796649913" />
    <test-case id="2936" name="AssertionPasses_ReferenceAndConstraintWithMessage" fullname="TCLite.Framework.AssertionTests.AssertThatTests.AssertionPasses_ReferenceAndConstraintWithMessage" seed="1789584796" />
    <test-case id="2937" name="AssertionPasses_ReferenceAndConstraintWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssertThatTests.AssertionPasses_ReferenceAndConstraintWithMessageAndArgs" seed="2072304145" />
    <test-case id="2938" name="AssertionPasses_DelegateAndConstraint" fullname="TCLite.Framework.AssertionTests.AssertThatTests.AssertionPasses_DelegateAndConstraint" seed="787391705" />
    <test-case id="2939" name="FailureThrowsAssertionException_Boolean" fullname="TCLite.Framework.AssertionTests.AssertThatTests.FailureThrowsAssertionException_Boolean" seed="508051820" />
    <test-case id="2940" name="FailureThrowsAssertionException_BooleanWithMessage" fullname="TCLite.Framework.AssertionTests.AssertThatTests.FailureThrowsAssertionException_BooleanWithMessage" seed="1544334241" />
    <test-case id="2941" name="FailureThrowsAssertionException_ActualAndConstraint" fullname="TCLite.Framework.AssertionTests.AssertThatTests.FailureThrowsAssertionException_ActualAndConstraint" seed="1779382038" />
    <test-case id="2942" name="FailureThrowsAssertionException_ActualAndConstraintWithMessage" fullname="TCLite.Framework.AssertionTests.AssertThatTests.FailureThrowsAssertionException_ActualAndConstraintWithMessage" seed="1244293706" />
    <test-case id="2943" name="FailureThrowsAssertionException_ReferenceAndConstraint" fullname="TCLite.Framework.AssertionTests.AssertThatTests.FailureThrowsAssertionException_ReferenceAndConstraint" seed="17069386" />
    <test-case id="2944" name="FailureThrowsAssertionException_ReferenceAndConstraintWithMessage" fullname="TCLite.Framework.AssertionTests.AssertThatTests.FailureThrowsAssertionException_ReferenceAndConstraintWithMessage" seed="1936653950" />
    <test-case id="2945" name="FailureThrowsAssertionException_DelegateAndConstraint" fullname="TCLite.Framework.AssertionTests.AssertThatTests.FailureThrowsAssertionException_DelegateAndConstraint" seed="508734952" />
    <test-case id="2946" name="FailureThrowsAssertionException_DelegateAndConstraintWithMessage" fullname="TCLite.Framework.AssertionTests.AssertThatTests.FailureThrowsAssertionException_DelegateAndConstraintWithMessage" seed="1362118487" />
    <test-case id="2947" name="AssertionsAreCountedCorrectly" fullname="TCLite.Framework.AssertionTests.AssertThatTests.AssertionsAreCountedCorrectly" seed="1154183826" />
  </test-suite>
  <test-suite type="TestFixture" id="2948" name="AssertThrowsTests" fullname="TCLite.Framework.AssertionTests.AssertThrowsTests" testcasecount="8">
    <test-case id="2949" name="CorrectExceptionThrown" fullname="TCLite.Framework.AssertionTests.AssertThrowsTests.CorrectExceptionThrown" seed="1517926060" />
    <test-case id="2950" name="CorrectExceptionIsReturnedToMethod" fullname="TCLite.Framework.AssertionTests.AssertThrowsTests.CorrectExceptionIsReturnedToMethod" seed="1112196366" />
    <test-case id="2951" name="NoExceptionThrown" fullname="TCLite.Framework.AssertionTests.AssertThrowsTests.NoExceptionThrown" seed="1220794141" />
    <test-case id="2952" name="UnrelatedExceptionThrown" fullname="TCLite.Framework.AssertionTests.AssertThrowsTests.UnrelatedExceptionThrown" seed="1642883467" />
    <test-case id="2953" name="BaseExceptionThrown" fullname="TCLite.Framework.AssertionTests.AssertThrowsTests.BaseExceptionThrown" seed="6433685" />
    <test-case id="2954" name="DerivedExceptionThrown" fullname="TCLite.Framework.AssertionTests.AssertThrowsTests.DerivedExceptionThrown" seed="1077364959" />
    <test-case id="2955" name="DoesNotThrowSucceeds" fullname="TCLite.Framework.AssertionTests.AssertThrowsTests.DoesNotThrowSucceeds" seed="1567897808" />
    <test-case id="2956" name="DoesNotThrowFails" fullname="TCLite.Framework.AssertionTests.AssertThrowsTests.DoesNotThrowFails" seed="140489255" />
  </test-suite>
  <test-suite type="TestFixture" id="2957" name="AssumeThatTests" fullname="TCLite.Framework.AssertionTests.AssumeThatTests" testcasecount="24">
    <test-case id="2958" name="AssumptionPasses_Boolean" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.AssumptionPasses_Boolean" seed="603914322" />
    <test-case id="2959" name="AssumptionPasses_BooleanWithMessage" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.AssumptionPasses_BooleanWithMessage" seed="255494735" />
    <test-case id="2960" name="AssumptionPasses_BooleanWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.AssumptionPasses_BooleanWithMessageAndArgs" seed="639425096" />
    <test-case id="2961" name="AssumptionPasses_ActualAndConstraint" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.AssumptionPasses_ActualAndConstraint" seed="976497204" />
    <test-case id="2962" name="AssumptionPasses_ActualAndConstraintWithMessage" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.AssumptionPasses_ActualAndConstraintWithMessage" seed="655683425" />
    <test-case id="2963" name="AssumptionPasses_ActualAndConstraintWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.AssumptionPasses_ActualAndConstraintWithMessageAndArgs" seed="506437006" />
    <test-case id="2964" name="AssumptionPasses_ReferenceAndConstraint" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.AssumptionPasses_ReferenceAndConstraint" seed="861320325" />
    <test-case id="2965" name="AssumptionPasses_ReferenceAndConstraintWithMessage" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.AssumptionPasses_ReferenceAndConstraintWithMessage" seed="1602858343" />
    <test-case id="2966" name="AssumptionPasses_ReferenceAndConstraintWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.AssumptionPasses_ReferenceAndConstraintWithMessageAndArgs" seed="82721060" />
    <test-case id="2967" name="AssumptionPasses_DelegateAndConstraint" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.AssumptionPasses_DelegateAndConstraint" seed="1068608428" />
    <test-case id="2968" name="AssumptionPasses_DelegateAndConstraintWithMessage" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.AssumptionPasses_DelegateAndConstraintWithMessage" seed="1042206443" />
    <test-case id="2969" name="AssumptionPasses_DelegateAndConstraintWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.AssumptionPasses_DelegateAndConstraintWithMessageAndArgs" seed="1443405006" />
    <test-case id="2970" name="FailureThrowsInconclusiveException_Boolean" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.FailureThrowsInconclusiveException_Boolean" seed="1423952302" />
    <test-case id="2971" name="FailureThrowsInconclusiveException_BooleanWithMessage" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.FailureThrowsInconclusiveException_BooleanWithMessage" seed="1172077628" />
    <test-case id="2972" name="FailureThrowsInconclusiveException_BooleanWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.FailureThrowsInconclusiveException_BooleanWithMessageAndArgs" seed="720092229" />
    <test-case id="2973" name="FailureThrowsInconclusiveException_ActualAndConstraint" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.FailureThrowsInconclusiveException_ActualAndConstraint" seed="2053298064" />
    <test-case id="2974" name="FailureThrowsInconclusiveException_ActualAndConstraintWithMessage" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.FailureThrowsInconclusiveException_ActualAndConstraintWithMessage" seed="1983411332" />
    <test-case id="2975" name="FailureThrowsInconclusiveException_ActualAndConstraintWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.FailureThrowsInconclusiveException_ActualAndConstraintWithMessageAndArgs" seed="1315433383" />
    <test-case id="2976" name="FailureThrowsInconclusiveException_ReferenceAndConstraint" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.FailureThrowsInconclusiveException_ReferenceAndConstraint" seed="267238434" />
    <test-case id="2977" name="FailureThrowsInconclusiveException_ReferenceAndConstraintWithMessage" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.FailureThrowsInconclusiveException_ReferenceAndConstraintWithMessage" seed="255995985" />
    <test-case id="2978" name="FailureThrowsInconclusiveException_ReferenceAndConstraintWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.FailureThrowsInconclusiveException_ReferenceAndConstraintWithMessageAndArgs" seed="1101057609" />
    <test-case id="2979" name="FailureThrowsInconclusiveException_DelegateAndConstraint" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.FailureThrowsInconclusiveException_DelegateAndConstraint" seed="1935048357" />
    <test-case id="2980" name="FailureThrowsInconclusiveException_DelegateAndConstraintWithMessage" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.FailureThrowsInconclusiveException_DelegateAndConstraintWithMessage" seed="969089428" />
    <test-case id="2981" name="FailureThrowsInconclusiveException_DelegateAndConstraintWithMessageAndArgs" fullname="TCLite.Framework.AssertionTests.AssumeThatTests.FailureThrowsInconclusiveException_DelegateAndConstraintWithMessageAndArgs" seed="941053095" />
  </test-suite>
  <test-suite type="TestFixture" id="2982" name="CollectionTests" fullname="TCLite.Framework.AssertionTests.CollectionTests" testcasecount="3">
    <test-case id="2983" name="CanMatchTwoCollections" fullname="TCLite.Framework.AssertionTests.CollectionTests.CanMatchTwoCollections" seed="1351533804" />
    <test-case id="2984" name="CanMatchAnArrayWithACollection" fullname="TCLite.Framework.AssertionTests.CollectionTests.CanMatchAnArrayWithACollection" seed="1818928203" />
    <test-case id="2985" name="FailureMatchingArrayAndCollection" fullname="TCLite.Framework.AssertionTests.CollectionTests.FailureMatchingArrayAndCollection" seed="1170545312" />
  </test-suite>
  <test-suite type="TestFixture" id="2986" name="EqualsFixture" fullname="TCLite.Framework.AssertionTests.EqualsFixture" testcasecount="36">
    <test-case id="2987" name="Equals" fullname="TCLite.Framework.AssertionTests.EqualsFixture.Equals" seed="1245097195" />
    <test-case id="2988" name="EqualsNull" fullname="TCLite.Framework.AssertionTests.EqualsFixture.EqualsNull" seed="703743063" />
    <test-case id="2989" name="Bug575936Int32Int64Comparison" fullname="TCLite.Framework.AssertionTests.EqualsFixture.Bug575936Int32Int64Comparison" seed="1404829349" />
    <test-case id="2990" name="IntegerLongComparison" fullname="TCLite.Framework.AssertionTests.EqualsFixture.IntegerLongComparison" seed="625590195" />
    <test-case id="2991" name="IntegerEquals" fullname="TCLite.Framework.AssertionTests.EqualsFixture.IntegerEquals" seed="1848714899" />
    <test-case id="2992" name="EqualsFail" fullname="TCLite.Framework.AssertionTests.EqualsFixture.EqualsFail" seed="601613183" />
    <test-case id="2993" name="EqualsNaNFails" fullname="TCLite.Framework.AssertionTests.EqualsFixture.EqualsNaNFails" seed="1284945630" />
    <test-case id="2994" name="NanEqualsFails" fullname="TCLite.Framework.AssertionTests.EqualsFixture.NanEqualsFails" seed="1192735591" />
    <test-case id="2995" name="NanEqualsNaNSucceeds" fullname="TCLite.Framework.AssertionTests.EqualsFixture.NanEqualsNaNSucceeds" seed="1534090061" />
    <test-case id="2996" name="NegInfinityEqualsInfinity" fullname="TCLite.Framework.AssertionTests.EqualsFixture.NegInfinityEqualsInfinity" seed="1432879049" />
    <test-case id="2997" name="PosInfinityEqualsInfinity" fullname="TCLite.Framework.AssertionTests.EqualsFixture.PosInfinityEqualsInfinity" seed="1958378148" />
    <test-case id="2998" name="PosInfinityNotEquals" fullname="TCLite.Framework.AssertionTests.EqualsFixture.PosInfinityNotEquals" seed="1999852042" />
    <test-case id="2999" name="PosInfinityNotEqualsNegInfinity" fullname="TCLite.Framework.AssertionTests.EqualsFixture.PosInfinityNotEqualsNegInfinity" seed="1037897235" />
    <test-case id="3000" name="SinglePosInfinityNotEqualsNegInfinity" fullname="TCLite.Framework.AssertionTests.EqualsFixture.SinglePosInfinityNotEqualsNegInfinity" seed="918061713" />
    <test-case id="3001" name="EqualsThrowsException" fullname="TCLite.Framework.AssertionTests.EqualsFixture.EqualsThrowsException" seed="1788919010" />
    <test-case id="3002" name="ReferenceEqualsThrowsException" fullname="TCLite.Framework.AssertionTests.EqualsFixture.ReferenceEqualsThrowsException" seed="2081831973" />
    <test-case id="3003" name="Float" fullname="TCLite.Framework.AssertionTests.EqualsFixture.Float" seed="868045522" />
    <test-case id="3004" name="Byte" fullname="TCLite.Framework.AssertionTests.EqualsFixture.Byte" seed="1614012156" />
    <test-case id="3005" name="String" fullname="TCLite.Framework.AssertionTests.EqualsFixture.String" seed="2066197128" />
    <test-case id="3006" name="Short" fullname="TCLite.Framework.AssertionTests.EqualsFixture.Short" seed="1877715171" />
    <test-case id="3007" name="Int" fullname="TCLite.Framework.AssertionTests.EqualsFixture.Int" seed="345848432" />
    <test-case id="3008" name="UInt" fullname="TCLite.Framework.AssertionTests.EqualsFixture.UInt" seed="392104137" />
    <test-case id="3009" name="Decimal" fullname="TCLite.Framework.AssertionTests.EqualsFixture.Decimal" seed="1314979724" />
    <test-case id="3010" name="EqualsSameTypes" fullname="TCLite.Framework.AssertionTests.EqualsFixture.EqualsSameTypes" seed="1806955782" />
    <test-case id="3011" name="EnumsEqual" fullname="TCLite.Framework.AssertionTests.EqualsFixture.EnumsEqual" seed="838483949" />
    <test-case id="3012" name="EnumsNotEqual" fullname="TCLite.Framework.AssertionTests.EqualsFixture.EnumsNotEqual" seed="810126525" />
    <test-case id="3013" name="DateTimeEqual" fullname="TCLite.Framework.AssertionTests.EqualsFixture.DateTimeEqual" seed="1311901823" />
    <test-case id="3014" name="DateTimeNotEqual" fullname="TCLite.Framework.AssertionTests.EqualsFixture.DateTimeNotEqual" seed="1186915293" />
    <test-case id="3015" name="DoubleNotEqualMessageDisplaysAllDigits" fullname="TCLite.Framework.AssertionTests.EqualsFixture.DoubleNotEqualMessageDisplaysAllDigits" seed="816349612" />
    <test-case id="3016" name="FloatNotEqualMessageDisplaysAllDigits" fullname="TCLite.Framework.AssertionTests.EqualsFixture.FloatNotEqualMessageDisplaysAllDigits" seed="1433888954" />
    <test-case id="3017" name="DoubleNotEqualMessageDisplaysTolerance" fullname="TCLite.Framework.AssertionTests.EqualsFixture.DoubleNotEqualMessageDisplaysTolerance" seed="1845855648" />
    <test-case id="3018" name="FloatNotEqualMessageDisplaysTolerance" fullname="TCLite.Framework.AssertionTests.EqualsFixture.FloatNotEqualMessageDisplaysTolerance" seed="1772447047" />
    <test-case id="3019" name="DoubleNotEqualMessageDisplaysDefaultTolerance" fullname="TCLite.Framework.AssertionTests.EqualsFixture.DoubleNotEqualMessageDisplaysDefaultTolerance" seed="984238869" />
    <test-case id="3020" name="DoubleNotEqualWithNanDoesNotDisplayDefaultTolerance" fullname="TCLite.Framework.AssertionTests.EqualsFixture.DoubleNotEqualWithNanDoesNotDisplayDefaultTolerance" seed="1483375341" />
    <test-case id="3021" name="IEquatableSuccess_OldSyntax" fullname="TCLite.Framework.AssertionTests.EqualsFixture.IEquatableSuccess_OldSyntax" seed="1763706777" />
    <test-case id="3022" name="IEquatableSuccess_ConstraintSyntax" fullname="TCLite.Framework.AssertionTests.EqualsFixture.IEquatableSuccess_ConstraintSyntax" seed="899115280" />
  </test-suite>
  <test-suite type="TestFixture" id="3023" name="NotEqualFixture" fullname="TCLite.Framework.AssertionTests.NotEqualFixture" testcasecount="8">
    <test-case id="3024" name="NotEqual" fullname="TCLite.Framework.AssertionTests.NotEqualFixture.NotEqual" seed="825375358" />
    <test-case id="3025" name="NotEqualFails" fullname="TCLite.Framework.AssertionTests.NotEqualFixture.NotEqualFails" seed="443018233" />
    <test-case id="3026" name="NullNotEqualToNonNull" fullname="TCLite.Framework.AssertionTests.NotEqualFixture.NullNotEqualToNonNull" seed="1340975191" />
    <test-case id="3027" name="NullEqualsNull" fullname="TCLite.Framework.AssertionTests.NotEqualFixture.NullEqualsNull" seed="841791823" />
    <test-case id="3028" name="ArraysNotEqual" fullname="TCLite.Framework.AssertionTests.NotEqualFixture.ArraysNotEqual" seed="139006672" />
    <test-case id="3029" name="ArraysNotEqualFails" fullname="TCLite.Framework.AssertionTests.NotEqualFixture.ArraysNotEqualFails" seed="2126825684" />
    <test-case id="3030" name="UInt" fullname="TCLite.Framework.AssertionTests.NotEqualFixture.UInt" seed="1333485815" />
    <test-case id="3031" name="NotEqualSameTypes" fullname="TCLite.Framework.AssertionTests.NotEqualFixture.NotEqualSameTypes" seed="620419015" />
  </test-suite>
  <test-suite type="TestFixture" id="3032" name="NotSameFixture" fullname="TCLite.Framework.AssertionTests.NotSameFixture" testcasecount="2">
    <test-case id="3033" name="NotSame" fullname="TCLite.Framework.AssertionTests.NotSameFixture.NotSame" seed="25033184" />
    <test-case id="3034" name="NotSameFails" fullname="TCLite.Framework.AssertionTests.NotSameFixture.NotSameFails" seed="1463064988" />
  </test-suite>
  <test-suite type="TestFixture" id="3035" name="NullableTypesTests" fullname="TCLite.Framework.AssertionTests.NullableTypesTests" testcasecount="6">
    <properties>
      <property name="Category" value="Generics" />
    </properties>
    <test-case id="3036" name="CanTestForNull" fullname="TCLite.Framework.AssertionTests.NullableTypesTests.CanTestForNull" seed="1376824846" />
    <test-case id="3037" name="CanTestForNaN" fullname="TCLite.Framework.AssertionTests.NullableTypesTests.CanTestForNaN" seed="1485417919" />
    <test-case id="3038" name="CanCompareWithTolerance" fullname="TCLite.Framework.AssertionTests.NullableTypesTests.CanCompareWithTolerance" seed="1459622246" />
    <test-case id="3039" name="CanCompareNullableEnums" fullname="TCLite.Framework.AssertionTests.NullableTypesTests.CanCompareNullableEnums" seed="2000700031" />
    <test-case id="3040" name="CanCompareNullableMixedNumerics" fullname="TCLite.Framework.AssertionTests.NullableTypesTests.CanCompareNullableMixedNumerics" seed="101043906" />
    <test-case id="3041" name="CanCompareNullableStructs" fullname="TCLite.Framework.AssertionTests.NullableTypesTests.CanCompareNullableStructs" seed="1474524586" />
  </test-suite>
  <test-suite type="TestFixture" id="3042" name="SameFixture" fullname="TCLite.Framework.AssertionTests.SameFixture" testcasecount="3">
    <test-case id="3043" name="Same" fullname="TCLite.Framework.AssertionTests.SameFixture.Same" seed="1432820323" />
    <test-case id="3044" name="SameFails" fullname="TCLite.Framework.AssertionTests.SameFixture.SameFails" seed="2088696679" />
    <test-case id="3045" name="SameValueTypes" fullname="TCLite.Framework.AssertionTests.SameFixture.SameValueTypes" seed="824696880" />
  </test-suite>
  <test-suite type="TestFixture" id="3046" name="ResultStateTests" fullname="TCLite.Framework.Internal.ResultStateTests" testcasecount="22">
    <test-suite type="ParameterizedMethod" id="3048" name="Status_ConstructorWithOneArguments_ReturnsConstructorArgumentStatus" fullname="TCLite.Framework.Internal.ResultStateTests.Status_ConstructorWithOneArguments_ReturnsConstructorArgumentStatus" testcasecount="4">
      <test-case id="3049" name="Status_ConstructorWithOneArguments_ReturnsConstructorArgumentStatus(Failed)" fullname="TCLite.Framework.Internal.ResultStateTests.Status_ConstructorWithOneArguments_ReturnsConstructorArgumentStatus(Failed)" seed="852993058" />
      <test-case id="3050" name="Status_ConstructorWithOneArguments_ReturnsConstructorArgumentStatus(Skipped)" fullname="TCLite.Framework.Internal.ResultStateTests.Status_ConstructorWithOneArguments_ReturnsConstructorArgumentStatus(Skipped)" seed="1536246986" />
      <test-case id="3051" name="Status_ConstructorWithOneArguments_ReturnsConstructorArgumentStatus(Inconclusive)" fullname="TCLite.Framework.Internal.ResultStateTests.Status_ConstructorWithOneArguments_ReturnsConstructorArgumentStatus(Inconclusive)" seed="1745357214" />
      <test-case id="3052" name="Status_ConstructorWithOneArguments_ReturnsConstructorArgumentStatus(Passed)" fullname="TCLite.Framework.Internal.ResultStateTests.Status_ConstructorWithOneArguments_ReturnsConstructorArgumentStatus(Passed)" seed="1934589893" />
    </test-suite>
    <test-case id="3053" name="Label_ConstructorWithOneArguments_ReturnsStringEmpty" fullname="TCLite.Framework.Internal.ResultStateTests.Label_ConstructorWithOneArguments_ReturnsStringEmpty" seed="1038588374" />
    <test-suite type="ParameterizedMethod" id="3055" name="Status_ConstructorWithTwoArguments_ReturnsConstructorArgumentStatus" fullname="TCLite.Framework.Internal.ResultStateTests.Status_ConstructorWithTwoArguments_ReturnsConstructorArgumentStatus" testcasecount="4">
      <test-case id="3056" name="Status_ConstructorWithTwoArguments_ReturnsConstructorArgumentStatus(Failed)" fullname="TCLite.Framework.Internal.ResultStateTests.Status_ConstructorWithTwoArguments_ReturnsConstructorArgumentStatus(Failed)" seed="1437195007" />
      <test-case id="3057" name="Status_ConstructorWithTwoArguments_ReturnsConstructorArgumentStatus(Skipped)" fullname="TCLite.Framework.Internal.ResultStateTests.Status_ConstructorWithTwoArguments_ReturnsConstructorArgumentStatus(Skipped)" seed="98030337" />
      <test-case id="3058" name="Status_ConstructorWithTwoArguments_ReturnsConstructorArgumentStatus(Inconclusive)" fullname="TCLite.Framework.Internal.ResultStateTests.Status_ConstructorWithTwoArguments_ReturnsConstructorArgumentStatus(Inconclusive)" seed="376385979" />
      <test-case id="3059" name="Status_ConstructorWithTwoArguments_ReturnsConstructorArgumentStatus(Passed)" fullname="TCLite.Framework.Internal.ResultStateTests.Status_ConstructorWithTwoArguments_ReturnsConstructorArgumentStatus(Passed)" seed="100201107" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="3061" name="Label_ConstructorWithTwoArguments_ReturnsConstructorArgumentLabel" fullname="TCLite.Framework.Internal.ResultStateTests.Label_ConstructorWithTwoArguments_ReturnsConstructorArgumentLabel" testcasecount="2">
      <test-case id="3062" name="Label_ConstructorWithTwoArguments_ReturnsConstructorArgumentLabel(&quot;&quot;)" fullname="TCLite.Framework.Internal.ResultStateTests.Label_ConstructorWithTwoArguments_ReturnsConstructorArgumentLabel(&quot;&quot;)" seed="1734507048" />
      <test-case id="3063" name="Label_ConstructorWithTwoArguments_ReturnsConstructorArgumentLabel(&quot;label&quot;)" fullname="TCLite.Framework.Internal.ResultStateTests.Label_ConstructorWithTwoArguments_ReturnsConstructorArgumentLabel(&quot;label&quot;)" seed="185931101" />
    </test-suite>
    <test-case id="3064" name="Label_ConstructorWithTwoArgumentsLabelArgumentIsNull_ReturnsEmptyString" fullname="TCLite.Framework.Internal.ResultStateTests.Label_ConstructorWithTwoArgumentsLabelArgumentIsNull_ReturnsEmptyString" seed="1015613173" />
    <test-suite type="ParameterizedMethod" id="3066" name="ToString_Constructor_ReturnsExepectedString" fullname="TCLite.Framework.Internal.ResultStateTests.ToString_Constructor_ReturnsExepectedString" testcasecount="2">
      <test-case id="3067" name="ToString_Constructor_ReturnsExepectedString(Passed,&quot;&quot;,&quot;Passed&quot;)" fullname="TCLite.Framework.Internal.ResultStateTests.ToString_Constructor_ReturnsExepectedString(Passed,&quot;&quot;,&quot;Passed&quot;)" seed="1702005541" />
      <test-case id="3068" name="ToString_Constructor_ReturnsExepectedString(Passed,&quot;testLabel&quot;,&quot;Passed:testLabel&quot;)" fullname="TCLite.Framework.Internal.ResultStateTests.ToString_Constructor_ReturnsExepectedString(Passed,&quot;testLabel&quot;,&quot;Passed:testLabel&quot;)" seed="1301838583" />
    </test-suite>
    <test-case id="3069" name="Inconclusive_NA_ReturnsResultStateWithPropertiesCorrectlySet" fullname="TCLite.Framework.Internal.ResultStateTests.Inconclusive_NA_ReturnsResultStateWithPropertiesCorrectlySet" seed="889803730" />
    <test-case id="3070" name="NotRunnable_NA_ReturnsResultStateWithPropertiesCorrectlySet" fullname="TCLite.Framework.Internal.ResultStateTests.NotRunnable_NA_ReturnsResultStateWithPropertiesCorrectlySet" seed="1256456615" />
    <test-case id="3071" name="Skipped_NA_ReturnsResultStateWithPropertiesCorrectlySet" fullname="TCLite.Framework.Internal.ResultStateTests.Skipped_NA_ReturnsResultStateWithPropertiesCorrectlySet" seed="425027289" />
    <test-case id="3072" name="Ignored_NA_ReturnsResultStateWithPropertiesCorrectlySet" fullname="TCLite.Framework.Internal.ResultStateTests.Ignored_NA_ReturnsResultStateWithPropertiesCorrectlySet" seed="273036965" />
    <test-case id="3073" name="Success_NA_ReturnsResultStateWithPropertiesCorrectlySet" fullname="TCLite.Framework.Internal.ResultStateTests.Success_NA_ReturnsResultStateWithPropertiesCorrectlySet" seed="1224405305" />
    <test-case id="3074" name="Failure_NA_ReturnsResultStateWithPropertiesCorrectlySet" fullname="TCLite.Framework.Internal.ResultStateTests.Failure_NA_ReturnsResultStateWithPropertiesCorrectlySet" seed="1738708499" />
    <test-case id="3075" name="Error_NA_ReturnsResultStateWithPropertiesCorrectlySet" fullname="TCLite.Framework.Internal.ResultStateTests.Error_NA_ReturnsResultStateWithPropertiesCorrectlySet" seed="366506395" />
    <test-case id="3076" name="Cancelled_NA_ReturnsResultStateWithPropertiesCorrectlySet" fullname="TCLite.Framework.Internal.ResultStateTests.Cancelled_NA_ReturnsResultStateWithPropertiesCorrectlySet" seed="1206101969" />
  </test-suite>
  <test-suite type="TestFixture" id="3077" name="CultureSettingAndDetectionTests" fullname="TCLite.Framework.Internal.CultureSettingAndDetectionTests" testcasecount="7">
    <test-case id="3078" name="CanMatchStrings" fullname="TCLite.Framework.Internal.CultureSettingAndDetectionTests.CanMatchStrings" seed="694560709" />
    <test-case id="3079" name="CanMatchAttributeWithInclude" fullname="TCLite.Framework.Internal.CultureSettingAndDetectionTests.CanMatchAttributeWithInclude" seed="1781922598" />
    <test-case id="3080" name="CanMatchAttributeWithExclude" fullname="TCLite.Framework.Internal.CultureSettingAndDetectionTests.CanMatchAttributeWithExclude" seed="1522902608" />
    <test-case id="3081" name="CanMatchAttributeWithIncludeAndExclude" fullname="TCLite.Framework.Internal.CultureSettingAndDetectionTests.CanMatchAttributeWithIncludeAndExclude" seed="1580785326" />
    <test-case id="3082" name="LoadWithFrenchCulture" fullname="TCLite.Framework.Internal.CultureSettingAndDetectionTests.LoadWithFrenchCulture" seed="1973967551">
      <properties>
        <property name="SetCulture" value="fr-FR" />
      </properties>
    </test-case>
    <test-case id="3083" name="LoadWithFrenchCanadianCulture" fullname="TCLite.Framework.Internal.CultureSettingAndDetectionTests.LoadWithFrenchCanadianCulture" seed="1874776694">
      <properties>
        <property name="SetCulture" value="fr-CA" />
      </properties>
    </test-case>
    <test-case id="3084" name="LoadWithRussianCulture" fullname="TCLite.Framework.Internal.CultureSettingAndDetectionTests.LoadWithRussianCulture" seed="963133228">
      <properties>
        <property name="SetCulture" value="ru-RU" />
      </properties>
    </test-case>
  </test-suite>
  <test-suite type="GenericFixture" id="3086" name="DeduceTypeArgsFromArgs&lt;T1,T2&gt;" fullname="TCLite.Framework.Internal.DeduceTypeArgsFromArgs&lt;T1,T2&gt;" testcasecount="2">
    <test-suite type="TestFixture" id="3087" name="DeduceTypeArgsFromArgs&lt;Double,Int32&gt;(100.0d,42)" fullname="TCLite.Framework.Internal.DeduceTypeArgsFromArgs&lt;Double,Int32&gt;(100.0d,42)" testcasecount="1">
      <properties>
        <property name="Category" value="Generics" />
      </properties>
      <test-suite type="ParameterizedMethod" id="3089" name="TestMyArgTypes" fullname="TCLite.Framework.Internal.DeduceTypeArgsFromArgs`2[[System.Double, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].TestMyArgTypes" testcasecount="1">
        <test-case id="3090" name="TestMyArgTypes(5.0d,7)" fullname="TCLite.Framework.Internal.DeduceTypeArgsFromArgs&lt;Double,Int32&gt;(100.0d,42).TestMyArgTypes(5.0d,7)" seed="1332845048" />
      </test-suite>
    </test-suite>
    <test-suite type="TestFixture" id="3091" name="DeduceTypeArgsFromArgs&lt;Int32,Double&gt;(42,100.0d)" fullname="TCLite.Framework.Internal.DeduceTypeArgsFromArgs&lt;Int32,Double&gt;(42,100.0d)" testcasecount="1">
      <properties>
        <property name="Category" value="Generics" />
      </properties>
      <test-suite type="ParameterizedMethod" id="3093" name="TestMyArgTypes" fullname="TCLite.Framework.Internal.DeduceTypeArgsFromArgs`2[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].TestMyArgTypes" testcasecount="1">
        <test-case id="3094" name="TestMyArgTypes(5,7.0d)" fullname="TCLite.Framework.Internal.DeduceTypeArgsFromArgs&lt;Int32,Double&gt;(42,100.0d).TestMyArgTypes(5,7.0d)" seed="371331062" />
      </test-suite>
    </test-suite>
  </test-suite>
  <test-suite type="GenericFixture" id="3096" name="GenericTestFixture_IList&lt;T&gt;" fullname="TCLite.Framework.Internal.GenericTestFixture_IList&lt;T&gt;" testcasecount="3">
    <test-suite type="TestFixture" id="3097" name="GenericTestFixture_IList&lt;List&lt;Int32&gt;&gt;" fullname="TCLite.Framework.Internal.GenericTestFixture_IList&lt;List&lt;Int32&gt;&gt;" testcasecount="1">
      <test-case id="3098" name="TestCollectionCount" fullname="TCLite.Framework.Internal.GenericTestFixture_IList&lt;List&lt;Int32&gt;&gt;.TestCollectionCount" seed="339626724" />
    </test-suite>
    <test-suite type="TestFixture" id="3099" name="GenericTestFixture_IList&lt;List&lt;Object&gt;&gt;" fullname="TCLite.Framework.Internal.GenericTestFixture_IList&lt;List&lt;Object&gt;&gt;" testcasecount="1">
      <test-case id="3100" name="TestCollectionCount" fullname="TCLite.Framework.Internal.GenericTestFixture_IList&lt;List&lt;Object&gt;&gt;.TestCollectionCount" seed="1043025837" />
    </test-suite>
    <test-suite type="TestFixture" id="3101" name="GenericTestFixture_IList&lt;ArrayList&gt;" fullname="TCLite.Framework.Internal.GenericTestFixture_IList&lt;ArrayList&gt;" testcasecount="1">
      <test-case id="3102" name="TestCollectionCount" fullname="TCLite.Framework.Internal.GenericTestFixture_IList&lt;ArrayList&gt;.TestCollectionCount" seed="658678461" />
    </test-suite>
  </test-suite>
  <test-suite type="GenericFixture" id="3104" name="GenericTestFixture_Numeric&lt;T&gt;" fullname="TCLite.Framework.Internal.GenericTestFixture_Numeric&lt;T&gt;" testcasecount="2">
    <test-suite type="TestFixture" id="3105" name="GenericTestFixture_Numeric&lt;Double&gt;" fullname="TCLite.Framework.Internal.GenericTestFixture_Numeric&lt;Double&gt;" testcasecount="2">
      <test-suite type="ParameterizedMethod" id="3107" name="TestMyArgType" fullname="TCLite.Framework.Internal.GenericTestFixture_Numeric`1[[System.Double, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].TestMyArgType" testcasecount="2">
        <test-case id="3108" name="TestMyArgType(5.0d)" fullname="TCLite.Framework.Internal.GenericTestFixture_Numeric&lt;Double&gt;.TestMyArgType(5.0d)" seed="910713719" />
        <test-case id="3109" name="TestMyArgType(1.23d)" fullname="TCLite.Framework.Internal.GenericTestFixture_Numeric&lt;Double&gt;.TestMyArgType(1.23d)" seed="1510351941" />
      </test-suite>
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="3110" name="GenericTestMethodTests" fullname="TCLite.Framework.Internal.GenericTestMethodTests" testcasecount="12">
    <test-suite type="GenericMethod" id="3112" name="GenericTestMethodWithOneTypeParameter" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithOneTypeParameter" testcasecount="4">
      <test-case id="3113" name="GenericTestMethodWithOneTypeParameter&lt;Int32&gt;(5,2,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithOneTypeParameter&lt;Int32&gt;(5,2,&quot;ABC&quot;)" seed="1227501791" />
      <test-case id="3114" name="GenericTestMethodWithOneTypeParameter&lt;Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithOneTypeParameter&lt;Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" seed="655911987" />
      <test-case id="3115" name="GenericTestMethodWithOneTypeParameter&lt;Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithOneTypeParameter&lt;Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" seed="302386817" />
      <test-case id="3116" name="GenericTestMethodWithOneTypeParameter&lt;Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithOneTypeParameter&lt;Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" seed="1552080463" />
    </test-suite>
    <test-suite type="GenericMethod" id="3118" name="GenericTestMethodWithTwoTypeParameters" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithTwoTypeParameters" testcasecount="4">
      <test-case id="3119" name="GenericTestMethodWithTwoTypeParameters&lt;Int32,Int32&gt;(5,2,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithTwoTypeParameters&lt;Int32,Int32&gt;(5,2,&quot;ABC&quot;)" seed="40976335" />
      <test-case id="3120" name="GenericTestMethodWithTwoTypeParameters&lt;Double,Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithTwoTypeParameters&lt;Double,Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" seed="1750439705" />
      <test-case id="3121" name="GenericTestMethodWithTwoTypeParameters&lt;Int32,Double&gt;(5,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithTwoTypeParameters&lt;Int32,Double&gt;(5,2.0d,&quot;ABC&quot;)" seed="1233284708" />
      <test-case id="3122" name="GenericTestMethodWithTwoTypeParameters&lt;Double,Int64&gt;(5.0d,2L,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithTwoTypeParameters&lt;Double,Int64&gt;(5.0d,2L,&quot;ABC&quot;)" seed="1033395614" />
    </test-suite>
    <test-suite type="GenericMethod" id="3124" name="GenericTestMethodWithTwoTypeParameters_Reversed" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithTwoTypeParameters_Reversed" testcasecount="4">
      <test-case id="3125" name="GenericTestMethodWithTwoTypeParameters_Reversed&lt;Int32,Int32&gt;(5,2,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithTwoTypeParameters_Reversed&lt;Int32,Int32&gt;(5,2,&quot;ABC&quot;)" seed="1986585730" />
      <test-case id="3126" name="GenericTestMethodWithTwoTypeParameters_Reversed&lt;Double,Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithTwoTypeParameters_Reversed&lt;Double,Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" seed="447451815" />
      <test-case id="3127" name="GenericTestMethodWithTwoTypeParameters_Reversed&lt;Double,Int32&gt;(5,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithTwoTypeParameters_Reversed&lt;Double,Int32&gt;(5,2.0d,&quot;ABC&quot;)" seed="1822302952" />
      <test-case id="3128" name="GenericTestMethodWithTwoTypeParameters_Reversed&lt;Int64,Double&gt;(5.0d,2L,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.GenericTestMethodTests.GenericTestMethodWithTwoTypeParameters_Reversed&lt;Int64,Double&gt;(5.0d,2L,&quot;ABC&quot;)" seed="183579336" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="3129" name="PlatformDetectionTests" fullname="TCLite.Framework.Internal.PlatformDetectionTests" testcasecount="41">
    <test-case id="3130" name="DetectWin95" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectWin95" seed="569818516" />
    <test-case id="3131" name="DetectWin98" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectWin98" seed="744243416" />
    <test-case id="3132" name="DetectWinMe" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectWinMe" seed="1823500264" />
    <test-case id="3133" name="DetectWinCE" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectWinCE" seed="1201487621" />
    <test-case id="3134" name="DetectNT3" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectNT3" seed="208415018" />
    <test-case id="3135" name="DetectNT4" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectNT4" seed="349988180" />
    <test-case id="3136" name="DetectWin2K" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectWin2K" seed="458190485" />
    <test-case id="3137" name="DetectWinXP" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectWinXP" seed="1794374736" />
    <test-case id="3138" name="DetectWinXPProfessionalX64" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectWinXPProfessionalX64" seed="841686277" />
    <test-case id="3139" name="DetectWin2003Server" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectWin2003Server" seed="2110918263" />
    <test-case id="3140" name="DetectVista" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectVista" seed="411687285" />
    <test-case id="3141" name="DetectWin2008ServerOriginal" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectWin2008ServerOriginal" seed="1605286695" />
    <test-case id="3142" name="DetectWin2008ServerR2" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectWin2008ServerR2" seed="1610711103" />
    <test-case id="3143" name="DetectWindows7" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectWindows7" seed="370737290" />
    <test-case id="3144" name="DetectUnixUnderMicrosoftDotNet" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectUnixUnderMicrosoftDotNet" seed="1560736398" />
    <test-case id="3145" name="DetectUnixUnderMono" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectUnixUnderMono" seed="914839706" />
    <test-case id="3146" name="DetectXbox" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectXbox" seed="1363175986" />
    <test-case id="3147" name="DetectMacOSX" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectMacOSX" seed="1993788024" />
    <test-case id="3148" name="DetectNet10" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectNet10" seed="2120070983" />
    <test-case id="3149" name="DetectNet11" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectNet11" seed="1043327080" />
    <test-case id="3150" name="DetectNet20" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectNet20" seed="391124864" />
    <test-case id="3151" name="DetectNet30" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectNet30" seed="1526935436" />
    <test-case id="3152" name="DetectNet35" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectNet35" seed="28954824" />
    <test-case id="3153" name="DetectNet40" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectNet40" seed="1916598949" />
    <test-case id="3154" name="DetectNetCF" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectNetCF" seed="2118133795" />
    <test-case id="3155" name="DetectSSCLI" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectSSCLI" seed="1819808489" />
    <test-case id="3156" name="DetectMono10" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectMono10" seed="1697732164" />
    <test-case id="3157" name="DetectMono20" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectMono20" seed="763550337" />
    <test-case id="3158" name="DetectMono30" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectMono30" seed="2120300908" />
    <test-case id="3159" name="DetectMono35" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectMono35" seed="1808648742" />
    <test-case id="3160" name="DetectMono40" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectMono40" seed="1942820515" />
    <test-case id="3161" name="DetectMonoTouch" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectMonoTouch" seed="1075450793" />
    <test-case id="3162" name="DetectSilverlight30" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectSilverlight30" seed="1905966021" />
    <test-case id="3163" name="DetectSilverlight40" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectSilverlight40" seed="1790388215" />
    <test-case id="3164" name="DetectSilverlight50" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectSilverlight50" seed="1304958178" />
    <test-case id="3165" name="DetectExactVersion" fullname="TCLite.Framework.Internal.PlatformDetectionTests.DetectExactVersion" seed="218889812" />
    <test-case id="3166" name="ArrayOfPlatforms" fullname="TCLite.Framework.Internal.PlatformDetectionTests.ArrayOfPlatforms" seed="1656828431" />
    <test-case id="3167" name="PlatformAttribute_Include" fullname="TCLite.Framework.Internal.PlatformDetectionTests.PlatformAttribute_Include" seed="1317327088" />
    <test-case id="3168" name="PlatformAttribute_Exclude" fullname="TCLite.Framework.Internal.PlatformDetectionTests.PlatformAttribute_Exclude" seed="131211706" />
    <test-case id="3169" name="PlatformAttribute_IncludeAndExclude" fullname="TCLite.Framework.Internal.PlatformDetectionTests.PlatformAttribute_IncludeAndExclude" seed="693037657" />
    <test-case id="3170" name="PlatformAttribute_InvalidPlatform" fullname="TCLite.Framework.Internal.PlatformDetectionTests.PlatformAttribute_InvalidPlatform" seed="200487976" />
  </test-suite>
  <test-suite type="TestFixture" id="3171" name="PropertyBagTests" fullname="TCLite.Framework.Internal.PropertyBagTests" testcasecount="18">
    <test-case id="3172" name="CountReflectsNumberOfPairs" fullname="TCLite.Framework.Internal.PropertyBagTests.CountReflectsNumberOfPairs" seed="1263822630" />
    <test-case id="3173" name="IndexGetsListOfValues" fullname="TCLite.Framework.Internal.PropertyBagTests.IndexGetsListOfValues" seed="668665664" />
    <test-case id="3174" name="IndexGetsEmptyListIfNameIsNotPresent" fullname="TCLite.Framework.Internal.PropertyBagTests.IndexGetsEmptyListIfNameIsNotPresent" seed="1264067175" />
    <test-case id="3175" name="IndexSetsListOfValues" fullname="TCLite.Framework.Internal.PropertyBagTests.IndexSetsListOfValues" seed="244224702" />
    <test-case id="3176" name="CanClearTheBag" fullname="TCLite.Framework.Internal.PropertyBagTests.CanClearTheBag" seed="844583769" />
    <test-case id="3177" name="AllKeysAreListed" fullname="TCLite.Framework.Internal.PropertyBagTests.AllKeysAreListed" seed="2088853007" />
    <test-case id="3178" name="ContainsKey" fullname="TCLite.Framework.Internal.PropertyBagTests.ContainsKey" seed="1817722692" />
    <test-case id="3179" name="ContainsKeyAndValue" fullname="TCLite.Framework.Internal.PropertyBagTests.ContainsKeyAndValue" seed="189703307" />
    <test-case id="3180" name="ContainsPropertyEntry" fullname="TCLite.Framework.Internal.PropertyBagTests.ContainsPropertyEntry" seed="318445002" />
    <test-case id="3181" name="CanRemoveKey" fullname="TCLite.Framework.Internal.PropertyBagTests.CanRemoveKey" seed="1817703275" />
    <test-case id="3182" name="CanRemoveMissingKeyWithoutError" fullname="TCLite.Framework.Internal.PropertyBagTests.CanRemoveMissingKeyWithoutError" seed="2140281353" />
    <test-case id="3183" name="CanRemoveNameAndValue" fullname="TCLite.Framework.Internal.PropertyBagTests.CanRemoveNameAndValue" seed="474864479" />
    <test-case id="3184" name="CanRemoveNameAndMissingValueWithoutError" fullname="TCLite.Framework.Internal.PropertyBagTests.CanRemoveNameAndMissingValueWithoutError" seed="778975872" />
    <test-case id="3185" name="CanRemovePropertyEntry" fullname="TCLite.Framework.Internal.PropertyBagTests.CanRemovePropertyEntry" seed="1939938119" />
    <test-case id="3186" name="GetReturnsSingleValue" fullname="TCLite.Framework.Internal.PropertyBagTests.GetReturnsSingleValue" seed="1190366727" />
    <test-case id="3187" name="SetAddsNewSingleValue" fullname="TCLite.Framework.Internal.PropertyBagTests.SetAddsNewSingleValue" seed="715288592" />
    <test-case id="3188" name="SetReplacesOldValues" fullname="TCLite.Framework.Internal.PropertyBagTests.SetReplacesOldValues" seed="2054384962" />
    <test-case id="3189" name="EnumeratorReturnsAllEntries" fullname="TCLite.Framework.Internal.PropertyBagTests.EnumeratorReturnsAllEntries" seed="1230837473" />
  </test-suite>
  <test-suite type="TestFixture" id="3190" name="RandomGeneratorTests" fullname="TCLite.Framework.Internal.RandomGeneratorTests" testcasecount="9">
    <test-case id="3191" name="RandomIntsAreUnique" fullname="TCLite.Framework.Internal.RandomGeneratorTests.RandomIntsAreUnique" seed="536090176" />
    <test-suite type="ParameterizedMethod" id="3193" name="RandomIntsAreUnique" fullname="TCLite.Framework.Internal.RandomGeneratorTests.RandomIntsAreUnique" testcasecount="1">
      <test-case id="3194" name="RandomIntsAreUnique(-300,300)" fullname="TCLite.Framework.Internal.RandomGeneratorTests.RandomIntsAreUnique(-300,300)" seed="799739663" />
    </test-suite>
    <test-case id="3195" name="RandomShortsAreUnique" fullname="TCLite.Framework.Internal.RandomGeneratorTests.RandomShortsAreUnique" seed="1842123795" />
    <test-suite type="ParameterizedMethod" id="3197" name="RandomShortsAreUnique" fullname="TCLite.Framework.Internal.RandomGeneratorTests.RandomShortsAreUnique" testcasecount="1">
      <test-case id="3198" name="RandomShortsAreUnique(-300,300)" fullname="TCLite.Framework.Internal.RandomGeneratorTests.RandomShortsAreUnique(-300,300)" seed="1821557475" />
    </test-suite>
    <test-case id="3199" name="RandomBytesAreUnique" fullname="TCLite.Framework.Internal.RandomGeneratorTests.RandomBytesAreUnique" seed="1180521182" />
    <test-suite type="ParameterizedMethod" id="3201" name="RandomBytesAreUnique" fullname="TCLite.Framework.Internal.RandomGeneratorTests.RandomBytesAreUnique" testcasecount="1">
      <test-case id="3202" name="RandomBytesAreUnique(12,212)" fullname="TCLite.Framework.Internal.RandomGeneratorTests.RandomBytesAreUnique(12,212)" seed="168097748" />
    </test-suite>
    <test-case id="3203" name="CanGetRandomBool" fullname="TCLite.Framework.Internal.RandomGeneratorTests.CanGetRandomBool" seed="1483720139" />
    <test-case id="3204" name="RandomDoublesAreUnique" fullname="TCLite.Framework.Internal.RandomGeneratorTests.RandomDoublesAreUnique" seed="1846804321" />
    <test-case id="3205" name="RandomFloatsAreUnique" fullname="TCLite.Framework.Internal.RandomGeneratorTests.RandomFloatsAreUnique" seed="1967806535" />
  </test-suite>
  <test-suite type="TestFixture" id="3206" name="RandomizerTests" fullname="TCLite.Framework.Internal.RandomizerTests" testcasecount="9">
    <test-case id="3207" name="CanGetArrayOfRandomInts" fullname="TCLite.Framework.Internal.RandomizerTests.CanGetArrayOfRandomInts" seed="1213262759" />
    <test-case id="3208" name="CanGetArrayOfRandomDoubles" fullname="TCLite.Framework.Internal.RandomizerTests.CanGetArrayOfRandomDoubles" seed="1341846586" />
    <test-case id="3209" name="CanGetArrayOfRandomEnums" fullname="TCLite.Framework.Internal.RandomizerTests.CanGetArrayOfRandomEnums" seed="1405494922" />
    <test-case id="3210" name="RandomizersWithSameSeedsReturnSameValues" fullname="TCLite.Framework.Internal.RandomizerTests.RandomizersWithSameSeedsReturnSameValues" seed="45848898" />
    <test-case id="3211" name="RandomizersWithDifferentSeedsReturnDifferentValues" fullname="TCLite.Framework.Internal.RandomizerTests.RandomizersWithDifferentSeedsReturnDifferentValues" seed="1862576318" />
    <test-case id="3212" name="ReturnsSameRandomizerForSameParameter" fullname="TCLite.Framework.Internal.RandomizerTests.ReturnsSameRandomizerForSameParameter" seed="1427033326" />
    <test-case id="3213" name="ReturnsSameRandomizerForDifferentParametersOfSameMethod" fullname="TCLite.Framework.Internal.RandomizerTests.ReturnsSameRandomizerForDifferentParametersOfSameMethod" seed="842839104" />
    <test-case id="3214" name="ReturnsSameRandomizerForSameMethod" fullname="TCLite.Framework.Internal.RandomizerTests.ReturnsSameRandomizerForSameMethod" seed="1274785881" />
    <test-case id="3215" name="ReturnsDifferentRandomizersForDifferentMethods" fullname="TCLite.Framework.Internal.RandomizerTests.ReturnsDifferentRandomizersForDifferentMethods" seed="858269772" />
  </test-suite>
  <test-suite type="TestFixture" id="3216" name="RuntimeFrameworkTests" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests" testcasecount="89">
    <test-case id="3217" name="CanGetCurrentFramework" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanGetCurrentFramework" seed="912371296" />
    <test-case id="3218" name="CurrentFrameworkHasBuildSpecified" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CurrentFrameworkHasBuildSpecified" seed="1672374247" />
    <test-suite type="ParameterizedMethod" id="3220" name="CanCreateUsingFrameworkVersion" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion" testcasecount="17">
      <test-case id="3221" name="CanCreateUsingFrameworkVersion(&lt;Net,1.0,1.0.3705&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Net,1.0,1.0.3705&gt;)" seed="1273550026" />
      <test-case id="3222" name="CanCreateUsingFrameworkVersion(&lt;Net,1.1,1.1.4322&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Net,1.1,1.1.4322&gt;)" seed="1878439129" />
      <test-case id="3223" name="CanCreateUsingFrameworkVersion(&lt;Net,2.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Net,2.0,2.0.50727&gt;)" seed="2027493119" />
      <test-case id="3224" name="CanCreateUsingFrameworkVersion(&lt;Net,3.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Net,3.0,2.0.50727&gt;)" seed="573847030" />
      <test-case id="3225" name="CanCreateUsingFrameworkVersion(&lt;Net,3.5,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Net,3.5,2.0.50727&gt;)" seed="1801855906" />
      <test-case id="3226" name="CanCreateUsingFrameworkVersion(&lt;Net,4.0,4.0.30319&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Net,4.0,4.0.30319&gt;)" seed="2138429114" />
      <test-case id="3227" name="CanCreateUsingFrameworkVersion(&lt;Net,0.0,0.0&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Net,0.0,0.0&gt;)" seed="1950022809" />
      <test-case id="3228" name="CanCreateUsingFrameworkVersion(&lt;Mono,1.0,1.1.4322&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Mono,1.0,1.1.4322&gt;)" seed="600586314" />
      <test-case id="3229" name="CanCreateUsingFrameworkVersion(&lt;Mono,2.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Mono,2.0,2.0.50727&gt;)" seed="1126990149" />
      <test-case id="3230" name="CanCreateUsingFrameworkVersion(&lt;Mono,3.5,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Mono,3.5,2.0.50727&gt;)" seed="1997933743" />
      <test-case id="3231" name="CanCreateUsingFrameworkVersion(&lt;Mono,4.0,4.0.30319&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Mono,4.0,4.0.30319&gt;)" seed="114591451" />
      <test-case id="3232" name="CanCreateUsingFrameworkVersion(&lt;Mono,0.0,0.0&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Mono,0.0,0.0&gt;)" seed="1651084867" />
      <test-case id="3233" name="CanCreateUsingFrameworkVersion(&lt;Any,1.1,1.1.4322&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Any,1.1,1.1.4322&gt;)" seed="1749927116" />
      <test-case id="3234" name="CanCreateUsingFrameworkVersion(&lt;Any,2.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Any,2.0,2.0.50727&gt;)" seed="86489615" />
      <test-case id="3235" name="CanCreateUsingFrameworkVersion(&lt;Any,3.5,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Any,3.5,2.0.50727&gt;)" seed="1742605177" />
      <test-case id="3236" name="CanCreateUsingFrameworkVersion(&lt;Any,4.0,4.0.30319&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Any,4.0,4.0.30319&gt;)" seed="2040781641" />
      <test-case id="3237" name="CanCreateUsingFrameworkVersion(&lt;Any,0.0,0.0&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingFrameworkVersion(&lt;Any,0.0,0.0&gt;)" seed="505847828" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="3239" name="CanCreateUsingClrVersion" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion" testcasecount="17">
      <test-case id="3240" name="CanCreateUsingClrVersion(&lt;Net,1.0,1.0.3705&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Net,1.0,1.0.3705&gt;)" seed="1589748802" />
      <test-case id="3241" name="CanCreateUsingClrVersion(&lt;Net,1.1,1.1.4322&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Net,1.1,1.1.4322&gt;)" seed="1635628129" />
      <test-case id="3242" name="CanCreateUsingClrVersion(&lt;Net,2.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Net,2.0,2.0.50727&gt;)" seed="1095969427" />
      <test-case id="3243" name="CanCreateUsingClrVersion(&lt;Net,3.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Net,3.0,2.0.50727&gt;)" seed="907988210" />
      <test-case id="3244" name="CanCreateUsingClrVersion(&lt;Net,3.5,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Net,3.5,2.0.50727&gt;)" seed="1145263095" />
      <test-case id="3245" name="CanCreateUsingClrVersion(&lt;Net,4.0,4.0.30319&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Net,4.0,4.0.30319&gt;)" seed="121046472" />
      <test-case id="3246" name="CanCreateUsingClrVersion(&lt;Net,0.0,0.0&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Net,0.0,0.0&gt;)" seed="604459933" />
      <test-case id="3247" name="CanCreateUsingClrVersion(&lt;Mono,1.0,1.1.4322&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Mono,1.0,1.1.4322&gt;)" seed="995340368" />
      <test-case id="3248" name="CanCreateUsingClrVersion(&lt;Mono,2.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Mono,2.0,2.0.50727&gt;)" seed="1060433727" />
      <test-case id="3249" name="CanCreateUsingClrVersion(&lt;Mono,3.5,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Mono,3.5,2.0.50727&gt;)" seed="1771854377" />
      <test-case id="3250" name="CanCreateUsingClrVersion(&lt;Mono,4.0,4.0.30319&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Mono,4.0,4.0.30319&gt;)" seed="277705035" />
      <test-case id="3251" name="CanCreateUsingClrVersion(&lt;Mono,0.0,0.0&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Mono,0.0,0.0&gt;)" seed="1195314800" />
      <test-case id="3252" name="CanCreateUsingClrVersion(&lt;Any,1.1,1.1.4322&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Any,1.1,1.1.4322&gt;)" seed="2083620415" />
      <test-case id="3253" name="CanCreateUsingClrVersion(&lt;Any,2.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Any,2.0,2.0.50727&gt;)" seed="665152238" />
      <test-case id="3254" name="CanCreateUsingClrVersion(&lt;Any,3.5,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Any,3.5,2.0.50727&gt;)" seed="332096955" />
      <test-case id="3255" name="CanCreateUsingClrVersion(&lt;Any,4.0,4.0.30319&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Any,4.0,4.0.30319&gt;)" seed="1950400943" />
      <test-case id="3256" name="CanCreateUsingClrVersion(&lt;Any,0.0,0.0&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanCreateUsingClrVersion(&lt;Any,0.0,0.0&gt;)" seed="382010715" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="3258" name="CanParseRuntimeFramework" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework" testcasecount="17">
      <test-case id="3259" name="CanParseRuntimeFramework(&lt;Net,1.0,1.0.3705&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Net,1.0,1.0.3705&gt;)" seed="2104771094" />
      <test-case id="3260" name="CanParseRuntimeFramework(&lt;Net,1.1,1.1.4322&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Net,1.1,1.1.4322&gt;)" seed="805134694" />
      <test-case id="3261" name="CanParseRuntimeFramework(&lt;Net,2.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Net,2.0,2.0.50727&gt;)" seed="919730191" />
      <test-case id="3262" name="CanParseRuntimeFramework(&lt;Net,3.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Net,3.0,2.0.50727&gt;)" seed="1268276765" />
      <test-case id="3263" name="CanParseRuntimeFramework(&lt;Net,3.5,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Net,3.5,2.0.50727&gt;)" seed="19701569" />
      <test-case id="3264" name="CanParseRuntimeFramework(&lt;Net,4.0,4.0.30319&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Net,4.0,4.0.30319&gt;)" seed="1189575715" />
      <test-case id="3265" name="CanParseRuntimeFramework(&lt;Net,0.0,0.0&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Net,0.0,0.0&gt;)" seed="365558586" />
      <test-case id="3266" name="CanParseRuntimeFramework(&lt;Mono,1.0,1.1.4322&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Mono,1.0,1.1.4322&gt;)" seed="883133825" />
      <test-case id="3267" name="CanParseRuntimeFramework(&lt;Mono,2.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Mono,2.0,2.0.50727&gt;)" seed="719814172" />
      <test-case id="3268" name="CanParseRuntimeFramework(&lt;Mono,3.5,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Mono,3.5,2.0.50727&gt;)" seed="2117356439" />
      <test-case id="3269" name="CanParseRuntimeFramework(&lt;Mono,4.0,4.0.30319&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Mono,4.0,4.0.30319&gt;)" seed="1098671308" />
      <test-case id="3270" name="CanParseRuntimeFramework(&lt;Mono,0.0,0.0&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Mono,0.0,0.0&gt;)" seed="1838245366" />
      <test-case id="3271" name="CanParseRuntimeFramework(&lt;Any,1.1,1.1.4322&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Any,1.1,1.1.4322&gt;)" seed="1803051453" />
      <test-case id="3272" name="CanParseRuntimeFramework(&lt;Any,2.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Any,2.0,2.0.50727&gt;)" seed="2106842930" />
      <test-case id="3273" name="CanParseRuntimeFramework(&lt;Any,3.5,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Any,3.5,2.0.50727&gt;)" seed="119971141" />
      <test-case id="3274" name="CanParseRuntimeFramework(&lt;Any,4.0,4.0.30319&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Any,4.0,4.0.30319&gt;)" seed="1533735332" />
      <test-case id="3275" name="CanParseRuntimeFramework(&lt;Any,0.0,0.0&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanParseRuntimeFramework(&lt;Any,0.0,0.0&gt;)" seed="336991276" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="3277" name="CanDisplayFrameworkAsString" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString" testcasecount="17">
      <test-case id="3278" name="CanDisplayFrameworkAsString(&lt;Net,1.0,1.0.3705&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Net,1.0,1.0.3705&gt;)" seed="1832520726" />
      <test-case id="3279" name="CanDisplayFrameworkAsString(&lt;Net,1.1,1.1.4322&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Net,1.1,1.1.4322&gt;)" seed="1370125290" />
      <test-case id="3280" name="CanDisplayFrameworkAsString(&lt;Net,2.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Net,2.0,2.0.50727&gt;)" seed="1963885516" />
      <test-case id="3281" name="CanDisplayFrameworkAsString(&lt;Net,3.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Net,3.0,2.0.50727&gt;)" seed="764386037" />
      <test-case id="3282" name="CanDisplayFrameworkAsString(&lt;Net,3.5,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Net,3.5,2.0.50727&gt;)" seed="128286931" />
      <test-case id="3283" name="CanDisplayFrameworkAsString(&lt;Net,4.0,4.0.30319&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Net,4.0,4.0.30319&gt;)" seed="1757392657" />
      <test-case id="3284" name="CanDisplayFrameworkAsString(&lt;Net,0.0,0.0&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Net,0.0,0.0&gt;)" seed="1423033186" />
      <test-case id="3285" name="CanDisplayFrameworkAsString(&lt;Mono,1.0,1.1.4322&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Mono,1.0,1.1.4322&gt;)" seed="1725990309" />
      <test-case id="3286" name="CanDisplayFrameworkAsString(&lt;Mono,2.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Mono,2.0,2.0.50727&gt;)" seed="741422179" />
      <test-case id="3287" name="CanDisplayFrameworkAsString(&lt;Mono,3.5,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Mono,3.5,2.0.50727&gt;)" seed="366574737" />
      <test-case id="3288" name="CanDisplayFrameworkAsString(&lt;Mono,4.0,4.0.30319&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Mono,4.0,4.0.30319&gt;)" seed="1672317774" />
      <test-case id="3289" name="CanDisplayFrameworkAsString(&lt;Mono,0.0,0.0&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Mono,0.0,0.0&gt;)" seed="1552755161" />
      <test-case id="3290" name="CanDisplayFrameworkAsString(&lt;Any,1.1,1.1.4322&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Any,1.1,1.1.4322&gt;)" seed="1190853381" />
      <test-case id="3291" name="CanDisplayFrameworkAsString(&lt;Any,2.0,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Any,2.0,2.0.50727&gt;)" seed="1332781505" />
      <test-case id="3292" name="CanDisplayFrameworkAsString(&lt;Any,3.5,2.0.50727&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Any,3.5,2.0.50727&gt;)" seed="1929978143" />
      <test-case id="3293" name="CanDisplayFrameworkAsString(&lt;Any,4.0,4.0.30319&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Any,4.0,4.0.30319&gt;)" seed="1848167571" />
      <test-case id="3294" name="CanDisplayFrameworkAsString(&lt;Any,0.0,0.0&gt;)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanDisplayFrameworkAsString(&lt;Any,0.0,0.0&gt;)" seed="1367916401" />
    </test-suite>
    <test-suite type="ParameterizedMethod" id="3296" name="CanMatchRuntimes" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes" testcasecount="19">
      <test-case id="3297" name="CanMatchRuntimes(net-3.5,net-2.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net-3.5,net-2.0)" seed="129202168" />
      <test-case id="3298" name="CanMatchRuntimes(net-2.0,net-3.5)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net-2.0,net-3.5)" seed="937470483" />
      <test-case id="3299" name="CanMatchRuntimes(net-3.5,net-3.5)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net-3.5,net-3.5)" seed="1121051450" />
      <test-case id="3300" name="CanMatchRuntimes(net-2.0,net-2.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net-2.0,net-2.0)" seed="1385054710" />
      <test-case id="3301" name="CanMatchRuntimes(net-2.0,net-2.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net-2.0,net-2.0)" seed="1570047233" />
      <test-case id="3302" name="CanMatchRuntimes(net-2.0,net-2.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net-2.0,net-2.0)" seed="446052414" />
      <test-case id="3303" name="CanMatchRuntimes(net-2.0,net-2.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net-2.0,net-2.0)" seed="730410841" />
      <test-case id="3304" name="CanMatchRuntimes(net-2.0,mono-2.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net-2.0,mono-2.0)" seed="24854385" />
      <test-case id="3305" name="CanMatchRuntimes(net-2.0,net-1.1)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net-2.0,net-1.1)" seed="425448923" />
      <test-case id="3306" name="CanMatchRuntimes(net-2.0,net-2.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net-2.0,net-2.0)" seed="151173680" />
      <test-case id="3307" name="CanMatchRuntimes(mono-1.0,mono-1.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(mono-1.0,mono-1.0)" seed="1653272272" />
      <test-case id="3308" name="CanMatchRuntimes(mono-2.0,v2.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(mono-2.0,v2.0)" seed="1304578649" />
      <test-case id="3309" name="CanMatchRuntimes(v2.0,mono-2.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(v2.0,mono-2.0)" seed="1404865921" />
      <test-case id="3310" name="CanMatchRuntimes(v2.0,v2.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(v2.0,v2.0)" seed="1812495094" />
      <test-case id="3311" name="CanMatchRuntimes(v2.0,v4.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(v2.0,v4.0)" seed="157733894" />
      <test-case id="3312" name="CanMatchRuntimes(net,net-2.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net,net-2.0)" seed="1809063115" />
      <test-case id="3313" name="CanMatchRuntimes(net-2.0,net)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net-2.0,net)" seed="1746629139" />
      <test-case id="3314" name="CanMatchRuntimes(any,net-2.0)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(any,net-2.0)" seed="980115159" />
      <test-case id="3315" name="CanMatchRuntimes(net-2.0,any)" fullname="TCLite.Framework.Internal.RuntimeFrameworkTests.CanMatchRuntimes(net-2.0,any)" seed="1109455312" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="3316" name="SetUpTest" fullname="TCLite.Framework.Internal.SetUpTest" testcasecount="8">
    <test-case id="3317" name="SetUpAndTearDownCounter" fullname="TCLite.Framework.Internal.SetUpTest.SetUpAndTearDownCounter" seed="2133999074" />
    <test-case id="3318" name="MakeSureSetUpAndTearDownAreCalled" fullname="TCLite.Framework.Internal.SetUpTest.MakeSureSetUpAndTearDownAreCalled" seed="1765108325" />
    <test-case id="3319" name="CheckInheritedSetUpAndTearDownAreCalled" fullname="TCLite.Framework.Internal.SetUpTest.CheckInheritedSetUpAndTearDownAreCalled" seed="1976484163" />
    <test-case id="3320" name="CheckOverriddenSetUpAndTearDownAreNotCalled" fullname="TCLite.Framework.Internal.SetUpTest.CheckOverriddenSetUpAndTearDownAreNotCalled" seed="1195225684" />
    <test-case id="3321" name="MultipleSetUpAndTearDownMethodsAreCalled" fullname="TCLite.Framework.Internal.SetUpTest.MultipleSetUpAndTearDownMethodsAreCalled" seed="1644180652" />
    <test-case id="3322" name="BaseSetUpIsCalledFirstTearDownLast" fullname="TCLite.Framework.Internal.SetUpTest.BaseSetUpIsCalledFirstTearDownLast" seed="1689770103" />
    <test-case id="3323" name="SetupRecordsOriginalExceptionThownByTestCase" fullname="TCLite.Framework.Internal.SetUpTest.SetupRecordsOriginalExceptionThownByTestCase" seed="1425763037" />
    <test-case id="3324" name="TearDownRecordsOriginalExceptionThownByTestCase" fullname="TCLite.Framework.Internal.SetUpTest.TearDownRecordsOriginalExceptionThownByTestCase" seed="823000978" />
  </test-suite>
  <test-suite type="TestFixture" id="3325" name="SimpleGenericMethods" fullname="TCLite.Framework.Internal.SimpleGenericMethods" testcasecount="12">
    <properties>
      <property name="Category" value="Generics" />
    </properties>
    <test-suite type="GenericMethod" id="3327" name="GenericTestMethodWithOneTypeParameter" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithOneTypeParameter" testcasecount="4">
      <test-case id="3328" name="GenericTestMethodWithOneTypeParameter&lt;Int32&gt;(5,2,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithOneTypeParameter&lt;Int32&gt;(5,2,&quot;ABC&quot;)" seed="840724459" />
      <test-case id="3329" name="GenericTestMethodWithOneTypeParameter&lt;Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithOneTypeParameter&lt;Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" seed="1477862311" />
      <test-case id="3330" name="GenericTestMethodWithOneTypeParameter&lt;Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithOneTypeParameter&lt;Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" seed="1676444438" />
      <test-case id="3331" name="GenericTestMethodWithOneTypeParameter&lt;Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithOneTypeParameter&lt;Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" seed="784574934" />
    </test-suite>
    <test-suite type="GenericMethod" id="3333" name="GenericTestMethodWithTwoTypeParameters" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithTwoTypeParameters" testcasecount="4">
      <test-case id="3334" name="GenericTestMethodWithTwoTypeParameters&lt;Int32,Int32&gt;(5,2,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithTwoTypeParameters&lt;Int32,Int32&gt;(5,2,&quot;ABC&quot;)" seed="1316176812" />
      <test-case id="3335" name="GenericTestMethodWithTwoTypeParameters&lt;Double,Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithTwoTypeParameters&lt;Double,Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" seed="2137561442" />
      <test-case id="3336" name="GenericTestMethodWithTwoTypeParameters&lt;Int32,Double&gt;(5,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithTwoTypeParameters&lt;Int32,Double&gt;(5,2.0d,&quot;ABC&quot;)" seed="435135052" />
      <test-case id="3337" name="GenericTestMethodWithTwoTypeParameters&lt;Double,Int64&gt;(5.0d,2L,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithTwoTypeParameters&lt;Double,Int64&gt;(5.0d,2L,&quot;ABC&quot;)" seed="1977640762" />
    </test-suite>
    <test-suite type="GenericMethod" id="3339" name="GenericTestMethodWithTwoTypeParameters_Reversed" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithTwoTypeParameters_Reversed" testcasecount="4">
      <test-case id="3340" name="GenericTestMethodWithTwoTypeParameters_Reversed&lt;Int32,Int32&gt;(5,2,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithTwoTypeParameters_Reversed&lt;Int32,Int32&gt;(5,2,&quot;ABC&quot;)" seed="1329984305" />
      <test-case id="3341" name="GenericTestMethodWithTwoTypeParameters_Reversed&lt;Double,Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithTwoTypeParameters_Reversed&lt;Double,Double&gt;(5.0d,2.0d,&quot;ABC&quot;)" seed="412683882" />
      <test-case id="3342" name="GenericTestMethodWithTwoTypeParameters_Reversed&lt;Double,Int32&gt;(5,2.0d,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithTwoTypeParameters_Reversed&lt;Double,Int32&gt;(5,2.0d,&quot;ABC&quot;)" seed="1099420213" />
      <test-case id="3343" name="GenericTestMethodWithTwoTypeParameters_Reversed&lt;Int64,Double&gt;(5.0d,2L,&quot;ABC&quot;)" fullname="TCLite.Framework.Internal.SimpleGenericMethods.GenericTestMethodWithTwoTypeParameters_Reversed&lt;Int64,Double&gt;(5.0d,2L,&quot;ABC&quot;)" seed="262473493" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="3344" name="TestExecutionContextTests" fullname="TCLite.Framework.Internal.TestExecutionContextTests" testcasecount="14">
    <properties>
      <property name="Question" value="Why?" />
    </properties>
    <test-case id="3345" name="FixtureSetUpCanAccessFixtureName" fullname="TCLite.Framework.Internal.TestExecutionContextTests.FixtureSetUpCanAccessFixtureName" seed="924072876" />
    <test-case id="3346" name="FixtureSetUpCanAccessFixtureFullName" fullname="TCLite.Framework.Internal.TestExecutionContextTests.FixtureSetUpCanAccessFixtureFullName" seed="1233474675" />
    <test-case id="3347" name="FixtureSetUpCanAccessFixtureId" fullname="TCLite.Framework.Internal.TestExecutionContextTests.FixtureSetUpCanAccessFixtureId" seed="739531652" />
    <test-case id="3348" name="FixtureSetUpCanAccessFixtureProperties" fullname="TCLite.Framework.Internal.TestExecutionContextTests.FixtureSetUpCanAccessFixtureProperties" seed="1850321655" />
    <test-case id="3349" name="SetUpCanAccessTestName" fullname="TCLite.Framework.Internal.TestExecutionContextTests.SetUpCanAccessTestName" seed="1606218977" />
    <test-case id="3350" name="SetUpCanAccessTestFullName" fullname="TCLite.Framework.Internal.TestExecutionContextTests.SetUpCanAccessTestFullName" seed="1917244561" />
    <test-case id="3351" name="SetUpCanAccessTestId" fullname="TCLite.Framework.Internal.TestExecutionContextTests.SetUpCanAccessTestId" seed="421411660" />
    <test-case id="3352" name="SetUpCanAccessTestProperties" fullname="TCLite.Framework.Internal.TestExecutionContextTests.SetUpCanAccessTestProperties" seed="1484039905">
      <properties>
        <property name="Answer" value="42" />
      </properties>
    </test-case>
    <test-case id="3353" name="TestCanAccessItsOwnName" fullname="TCLite.Framework.Internal.TestExecutionContextTests.TestCanAccessItsOwnName" seed="701563290" />
    <test-case id="3354" name="TestCanAccessItsOwnFullName" fullname="TCLite.Framework.Internal.TestExecutionContextTests.TestCanAccessItsOwnFullName" seed="1514583880" />
    <test-case id="3355" name="TestCanAccessItsOwnId" fullname="TCLite.Framework.Internal.TestExecutionContextTests.TestCanAccessItsOwnId" seed="1891175693" />
    <test-case id="3356" name="TestCanAccessItsOwnProperties" fullname="TCLite.Framework.Internal.TestExecutionContextTests.TestCanAccessItsOwnProperties" seed="1591707889">
      <properties>
        <property name="Answer" value="42" />
      </properties>
    </test-case>
    <test-case id="3357" name="SetAndRestoreCurrentCulture" fullname="TCLite.Framework.Internal.TestExecutionContextTests.SetAndRestoreCurrentCulture" seed="352666346" />
    <test-case id="3358" name="SetAndRestoreCurrentUICulture" fullname="TCLite.Framework.Internal.TestExecutionContextTests.SetAndRestoreCurrentUICulture" seed="820522831" />
  </test-suite>
  <test-suite type="TestFixture" id="3359" name="TestFixtureTests" fullname="TCLite.Framework.Internal.TestFixtureTests" testcasecount="43">
    <test-case id="3360" name="ConstructFromType" fullname="TCLite.Framework.Internal.TestFixtureTests.ConstructFromType" seed="1861652144" />
    <test-case id="3361" name="ConstructFromNestedType" fullname="TCLite.Framework.Internal.TestFixtureTests.ConstructFromNestedType" seed="1750291723" />
    <test-case id="3362" name="ConstructFromDoublyNestedType" fullname="TCLite.Framework.Internal.TestFixtureTests.ConstructFromDoublyNestedType" seed="300201652" />
    <test-case id="3363" name="ConstructFromTypeWithoutTestFixtureAttributeContainingTestCase" fullname="TCLite.Framework.Internal.TestFixtureTests.ConstructFromTypeWithoutTestFixtureAttributeContainingTestCase" seed="1889728446" />
    <test-case id="3364" name="ConstructFromTypeWithoutTestFixtureAttributeContainingTestCaseSource" fullname="TCLite.Framework.Internal.TestFixtureTests.ConstructFromTypeWithoutTestFixtureAttributeContainingTestCaseSource" seed="1624354445" />
    <test-case id="3365" name="CannotRunConstructorWithArgsNotSupplied" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunConstructorWithArgsNotSupplied" seed="1842768254" />
    <test-case id="3366" name="CanRunConstructorWithArgsSupplied" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunConstructorWithArgsSupplied" seed="144284196" />
    <test-case id="3367" name="CannotRunBadConstructor" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunBadConstructor" seed="1770535083" />
    <test-case id="3368" name="CanRunMultipleSetUp" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunMultipleSetUp" seed="2037170029" />
    <test-case id="3369" name="CanRunMultipleTearDown" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunMultipleTearDown" seed="694475721" />
    <test-case id="3370" name="CannotRunIgnoredFixture" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunIgnoredFixture" seed="896488132" />
    <test-case id="3371" name="CanRunFixtureDerivedFromAbstractTestFixture" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunFixtureDerivedFromAbstractTestFixture" seed="1514082393" />
    <test-case id="3372" name="CanRunFixtureDerivedFromAbstractDerivedTestFixture" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunFixtureDerivedFromAbstractDerivedTestFixture" seed="337095460" />
    <test-case id="3373" name="FixtureInheritingTwoTestFixtureAttributesIsLoadedOnlyOnce" fullname="TCLite.Framework.Internal.TestFixtureTests.FixtureInheritingTwoTestFixtureAttributesIsLoadedOnlyOnce" seed="1314500854" />
    <test-case id="3374" name="CanRunMultipleTestFixtureSetUp" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunMultipleTestFixtureSetUp" seed="969730869" />
    <test-case id="3375" name="CanRunMultipleTestFixtureTearDown" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunMultipleTestFixtureTearDown" seed="1982337979" />
    <test-case id="3376" name="CanRunTestFixtureWithNoTests" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunTestFixtureWithNoTests" seed="975233236" />
    <test-case id="3377" name="ConstructFromStaticTypeWithoutTestFixtureAttribute" fullname="TCLite.Framework.Internal.TestFixtureTests.ConstructFromStaticTypeWithoutTestFixtureAttribute" seed="1396379233" />
    <test-case id="3378" name="CanRunStaticFixture" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunStaticFixture" seed="647208926" />
    <test-case id="3379" name="CanRunGenericFixtureWithProperArgsProvided" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunGenericFixtureWithProperArgsProvided" seed="717641666" />
    <test-case id="3380" name="CannotRunGenericFixtureWithNoArgsProvided" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunGenericFixtureWithNoArgsProvided" seed="185382436" />
    <test-case id="3381" name="CannotRunGenericFixtureDerivedFromAbstractFixtureWithNoArgsProvided" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunGenericFixtureDerivedFromAbstractFixtureWithNoArgsProvided" seed="900524399" />
    <test-case id="3382" name="CanRunGenericFixtureDerivedFromAbstractFixtureWithArgsProvided" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunGenericFixtureDerivedFromAbstractFixtureWithArgsProvided" seed="1025576673" />
    <test-case id="3383" name="CannotRunPrivateSetUp" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunPrivateSetUp" seed="126162508" />
    <test-case id="3384" name="CanRunProtectedSetUp" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunProtectedSetUp" seed="1736490354" />
    <test-case id="3385" name="CanRunStaticSetUp" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunStaticSetUp" seed="1874419738" />
    <test-case id="3386" name="CannotRunSetupWithReturnValue" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunSetupWithReturnValue" seed="1268358443" />
    <test-case id="3387" name="CannotRunSetupWithParameters" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunSetupWithParameters" seed="2089206779" />
    <test-case id="3388" name="CannotRunPrivateTearDown" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunPrivateTearDown" seed="121437688" />
    <test-case id="3389" name="CanRunProtectedTearDown" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunProtectedTearDown" seed="1473624226" />
    <test-case id="3390" name="CanRunStaticTearDown" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunStaticTearDown" seed="1734170265" />
    <test-case id="3391" name="CannotRunTearDownWithReturnValue" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunTearDownWithReturnValue" seed="84736549" />
    <test-case id="3392" name="CannotRunTearDownWithParameters" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunTearDownWithParameters" seed="431908588" />
    <test-case id="3393" name="CannotRunPrivateFixtureSetUp" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunPrivateFixtureSetUp" seed="495653981" />
    <test-case id="3394" name="CanRunProtectedFixtureSetUp" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunProtectedFixtureSetUp" seed="275909298" />
    <test-case id="3395" name="CanRunStaticFixtureSetUp" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunStaticFixtureSetUp" seed="832326976" />
    <test-case id="3396" name="CannotRunFixtureSetupWithReturnValue" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunFixtureSetupWithReturnValue" seed="1677439110" />
    <test-case id="3397" name="CannotRunFixtureSetupWithParameters" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunFixtureSetupWithParameters" seed="1587739506" />
    <test-case id="3398" name="CannotRunPrivateFixtureTearDown" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunPrivateFixtureTearDown" seed="935813084" />
    <test-case id="3399" name="CanRunProtectedFixtureTearDown" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunProtectedFixtureTearDown" seed="1404135606" />
    <test-case id="3400" name="CanRunStaticFixtureTearDown" fullname="TCLite.Framework.Internal.TestFixtureTests.CanRunStaticFixtureTearDown" seed="118189297" />
    <test-case id="3401" name="CannotRunFixtureTearDownWithReturnValue" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunFixtureTearDownWithReturnValue" seed="1301021440" />
    <test-case id="3402" name="CannotRunFixtureTearDownWithParameters" fullname="TCLite.Framework.Internal.TestFixtureTests.CannotRunFixtureTearDownWithParameters" seed="1343788293" />
  </test-suite>
  <test-suite type="TestFixture" id="3403" name="TestMethodSignatureTests" fullname="TCLite.Framework.Internal.TestMethodSignatureTests" testcasecount="19">
    <test-case id="3404" name="InstanceTestMethodIsRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.InstanceTestMethodIsRunnable" seed="45055931" />
    <test-case id="3405" name="StaticTestMethodIsRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.StaticTestMethodIsRunnable" seed="953833523" />
    <test-case id="3406" name="TestMethodWithoutParametersWithArgumentsProvidedIsNotRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.TestMethodWithoutParametersWithArgumentsProvidedIsNotRunnable" seed="92136584" />
    <test-case id="3407" name="TestMethodWithArgumentsNotProvidedIsNotRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.TestMethodWithArgumentsNotProvidedIsNotRunnable" seed="1580149101" />
    <test-case id="3408" name="TestMethodWithArgumentsProvidedIsRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.TestMethodWithArgumentsProvidedIsRunnable" seed="1254394453" />
    <test-case id="3409" name="TestMethodWithWrongNumberOfArgumentsProvidedIsNotRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.TestMethodWithWrongNumberOfArgumentsProvidedIsNotRunnable" seed="514309036" />
    <test-case id="3410" name="TestMethodWithWrongArgumentTypesProvidedGivesError" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.TestMethodWithWrongArgumentTypesProvidedGivesError" seed="866708958" />
    <test-case id="3411" name="StaticTestMethodWithArgumentsNotProvidedIsNotRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.StaticTestMethodWithArgumentsNotProvidedIsNotRunnable" seed="539350644" />
    <test-case id="3412" name="StaticTestMethodWithArgumentsProvidedIsRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.StaticTestMethodWithArgumentsProvidedIsRunnable" seed="494796460" />
    <test-case id="3413" name="StaticTestMethodWithWrongNumberOfArgumentsProvidedIsNotRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.StaticTestMethodWithWrongNumberOfArgumentsProvidedIsNotRunnable" seed="944498963" />
    <test-case id="3414" name="StaticTestMethodWithWrongArgumentTypesProvidedGivesError" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.StaticTestMethodWithWrongArgumentTypesProvidedGivesError" seed="1782508327" />
    <test-case id="3415" name="TestMethodWithConvertibleArgumentsIsRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.TestMethodWithConvertibleArgumentsIsRunnable" seed="635140395" />
    <test-case id="3416" name="TestMethodWithNonConvertibleArgumentsGivesError" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.TestMethodWithNonConvertibleArgumentsGivesError" seed="961127745" />
    <test-case id="3417" name="ProtectedTestMethodIsNotRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.ProtectedTestMethodIsNotRunnable" seed="724715050" />
    <test-case id="3418" name="PrivateTestMethodIsNotRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.PrivateTestMethodIsNotRunnable" seed="174039144" />
    <test-case id="3419" name="TestMethodWithReturnTypeIsNotRunnable" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.TestMethodWithReturnTypeIsNotRunnable" seed="153238092" />
    <test-case id="3420" name="TestMethodWithMultipleTestCasesExecutesMultipleTimes" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.TestMethodWithMultipleTestCasesExecutesMultipleTimes" seed="1897418354" />
    <test-case id="3421" name="TestMethodWithMultipleTestCasesUsesCorrectNames" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.TestMethodWithMultipleTestCasesUsesCorrectNames" seed="574409811" />
    <test-case id="3422" name="RunningTestsThroughFixtureGivesCorrectResults" fullname="TCLite.Framework.Internal.TestMethodSignatureTests.RunningTestsThroughFixtureGivesCorrectResults" seed="202561064" />
  </test-suite>
  <test-suite type="TestFixture" id="3423" name="DefaultResultTests" fullname="TCLite.Framework.Internal.DefaultResultTests" testcasecount="11">
    <test-case id="3424" name="TestResultIsInconclusive" fullname="TCLite.Framework.Internal.DefaultResultTests.TestResultIsInconclusive" seed="1649097395" />
    <test-case id="3425" name="SuiteResultIsInconclusive" fullname="TCLite.Framework.Internal.DefaultResultTests.SuiteResultIsInconclusive" seed="563545803" />
    <test-case id="3426" name="TestResultXmlNodeIsInconclusive" fullname="TCLite.Framework.Internal.DefaultResultTests.TestResultXmlNodeIsInconclusive" seed="1107789103" />
    <test-case id="3427" name="SuiteResultXmlNodeIsInconclusive" fullname="TCLite.Framework.Internal.DefaultResultTests.SuiteResultXmlNodeIsInconclusive" seed="811751583" />
    <test-case id="3428" name="SuiteResultXmlNodeHasOneChildTest" fullname="TCLite.Framework.Internal.DefaultResultTests.SuiteResultXmlNodeHasOneChildTest" seed="1082173805" />
    <test-case id="3429" name="TestResultTests.TestResultBasicInfo" fullname="TCLite.Framework.Internal.DefaultResultTests.TestResultTests.TestResultBasicInfo" seed="1988925126" />
    <test-case id="3430" name="TestResultTests.SuiteResultBasicInfo" fullname="TCLite.Framework.Internal.DefaultResultTests.TestResultTests.SuiteResultBasicInfo" seed="1038591556" />
    <test-case id="3431" name="TestResultTests.TestResultBasicInfo_XmlNode" fullname="TCLite.Framework.Internal.DefaultResultTests.TestResultTests.TestResultBasicInfo_XmlNode" seed="137403893" />
    <test-case id="3432" name="TestResultTests.TestResultBasicInfo_WriteXml" fullname="TCLite.Framework.Internal.DefaultResultTests.TestResultTests.TestResultBasicInfo_WriteXml" seed="304898869" />
    <test-case id="3433" name="TestResultTests.SuiteResultBasicInfo_XmlNode" fullname="TCLite.Framework.Internal.DefaultResultTests.TestResultTests.SuiteResultBasicInfo_XmlNode" seed="1534977377" />
    <test-case id="3434" name="TestResultTests.SuiteResultBasicInfo_WriteXml" fullname="TCLite.Framework.Internal.DefaultResultTests.TestResultTests.SuiteResultBasicInfo_WriteXml" seed="460566149" />
  </test-suite>
  <test-suite type="TestFixture" id="3435" name="SuccessResultTests" fullname="TCLite.Framework.Internal.SuccessResultTests" testcasecount="11">
    <test-case id="3436" name="TestResultIsSuccess" fullname="TCLite.Framework.Internal.SuccessResultTests.TestResultIsSuccess" seed="1390556967" />
    <test-case id="3437" name="SuiteResultIsSuccess" fullname="TCLite.Framework.Internal.SuccessResultTests.SuiteResultIsSuccess" seed="599452369" />
    <test-case id="3438" name="TestResultXmlNodeIsSuccess" fullname="TCLite.Framework.Internal.SuccessResultTests.TestResultXmlNodeIsSuccess" seed="1031844643" />
    <test-case id="3439" name="SuiteResultXmlNodeIsSuccess" fullname="TCLite.Framework.Internal.SuccessResultTests.SuiteResultXmlNodeIsSuccess" seed="1704219753" />
    <test-case id="3440" name="SuiteResultXmlNodeHasOneChildTest" fullname="TCLite.Framework.Internal.SuccessResultTests.SuiteResultXmlNodeHasOneChildTest" seed="980520742" />
    <test-case id="3441" name="TestResultTests.TestResultBasicInfo" fullname="TCLite.Framework.Internal.SuccessResultTests.TestResultTests.TestResultBasicInfo" seed="1319812632" />
    <test-case id="3442" name="TestResultTests.SuiteResultBasicInfo" fullname="TCLite.Framework.Internal.SuccessResultTests.TestResultTests.SuiteResultBasicInfo" seed="1644353770" />
    <test-case id="3443" name="TestResultTests.TestResultBasicInfo_XmlNode" fullname="TCLite.Framework.Internal.SuccessResultTests.TestResultTests.TestResultBasicInfo_XmlNode" seed="294270637" />
    <test-case id="3444" name="TestResultTests.TestResultBasicInfo_WriteXml" fullname="TCLite.Framework.Internal.SuccessResultTests.TestResultTests.TestResultBasicInfo_WriteXml" seed="13963990" />
    <test-case id="3445" name="TestResultTests.SuiteResultBasicInfo_XmlNode" fullname="TCLite.Framework.Internal.SuccessResultTests.TestResultTests.SuiteResultBasicInfo_XmlNode" seed="1574897743" />
    <test-case id="3446" name="TestResultTests.SuiteResultBasicInfo_WriteXml" fullname="TCLite.Framework.Internal.SuccessResultTests.TestResultTests.SuiteResultBasicInfo_WriteXml" seed="1402212377" />
  </test-suite>
  <test-suite type="TestFixture" id="3447" name="IgnoredResultTests" fullname="TCLite.Framework.Internal.IgnoredResultTests" testcasecount="11">
    <test-case id="3448" name="TestResultIsIgnored" fullname="TCLite.Framework.Internal.IgnoredResultTests.TestResultIsIgnored" seed="934273582" />
    <test-case id="3449" name="SuiteResultIsIgnored" fullname="TCLite.Framework.Internal.IgnoredResultTests.SuiteResultIsIgnored" seed="1239373805" />
    <test-case id="3450" name="TestResultXmlNodeIsIgnored" fullname="TCLite.Framework.Internal.IgnoredResultTests.TestResultXmlNodeIsIgnored" seed="1287721233" />
    <test-case id="3451" name="SuiteResultXmlNodeIsIgnored" fullname="TCLite.Framework.Internal.IgnoredResultTests.SuiteResultXmlNodeIsIgnored" seed="796883908" />
    <test-case id="3452" name="SuiteResultXmlNodeHasOneChildTest" fullname="TCLite.Framework.Internal.IgnoredResultTests.SuiteResultXmlNodeHasOneChildTest" seed="2007997233" />
    <test-case id="3453" name="TestResultTests.TestResultBasicInfo" fullname="TCLite.Framework.Internal.IgnoredResultTests.TestResultTests.TestResultBasicInfo" seed="1462265200" />
    <test-case id="3454" name="TestResultTests.SuiteResultBasicInfo" fullname="TCLite.Framework.Internal.IgnoredResultTests.TestResultTests.SuiteResultBasicInfo" seed="107611926" />
    <test-case id="3455" name="TestResultTests.TestResultBasicInfo_XmlNode" fullname="TCLite.Framework.Internal.IgnoredResultTests.TestResultTests.TestResultBasicInfo_XmlNode" seed="1503399966" />
    <test-case id="3456" name="TestResultTests.TestResultBasicInfo_WriteXml" fullname="TCLite.Framework.Internal.IgnoredResultTests.TestResultTests.TestResultBasicInfo_WriteXml" seed="1434501414" />
    <test-case id="3457" name="TestResultTests.SuiteResultBasicInfo_XmlNode" fullname="TCLite.Framework.Internal.IgnoredResultTests.TestResultTests.SuiteResultBasicInfo_XmlNode" seed="1185878377" />
    <test-case id="3458" name="TestResultTests.SuiteResultBasicInfo_WriteXml" fullname="TCLite.Framework.Internal.IgnoredResultTests.TestResultTests.SuiteResultBasicInfo_WriteXml" seed="829725795" />
  </test-suite>
  <test-suite type="TestFixture" id="3459" name="FailedResultTests" fullname="TCLite.Framework.Internal.FailedResultTests" testcasecount="11">
    <test-case id="3460" name="TestResultIsFailure" fullname="TCLite.Framework.Internal.FailedResultTests.TestResultIsFailure" seed="2063111880" />
    <test-case id="3461" name="SuiteResultIsFailure" fullname="TCLite.Framework.Internal.FailedResultTests.SuiteResultIsFailure" seed="1799407692" />
    <test-case id="3462" name="TestResultXmlNodeIsFailure" fullname="TCLite.Framework.Internal.FailedResultTests.TestResultXmlNodeIsFailure" seed="780242490" />
    <test-case id="3463" name="SuiteResultXmlNodeIsFailure" fullname="TCLite.Framework.Internal.FailedResultTests.SuiteResultXmlNodeIsFailure" seed="1084750475" />
    <test-case id="3464" name="SuiteResultXmlNodeHasOneChildTest" fullname="TCLite.Framework.Internal.FailedResultTests.SuiteResultXmlNodeHasOneChildTest" seed="142081940" />
    <test-case id="3465" name="TestResultTests.TestResultBasicInfo" fullname="TCLite.Framework.Internal.FailedResultTests.TestResultTests.TestResultBasicInfo" seed="1157446426" />
    <test-case id="3466" name="TestResultTests.SuiteResultBasicInfo" fullname="TCLite.Framework.Internal.FailedResultTests.TestResultTests.SuiteResultBasicInfo" seed="1738707622" />
    <test-case id="3467" name="TestResultTests.TestResultBasicInfo_XmlNode" fullname="TCLite.Framework.Internal.FailedResultTests.TestResultTests.TestResultBasicInfo_XmlNode" seed="215802897" />
    <test-case id="3468" name="TestResultTests.TestResultBasicInfo_WriteXml" fullname="TCLite.Framework.Internal.FailedResultTests.TestResultTests.TestResultBasicInfo_WriteXml" seed="376905143" />
    <test-case id="3469" name="TestResultTests.SuiteResultBasicInfo_XmlNode" fullname="TCLite.Framework.Internal.FailedResultTests.TestResultTests.SuiteResultBasicInfo_XmlNode" seed="561810089" />
    <test-case id="3470" name="TestResultTests.SuiteResultBasicInfo_WriteXml" fullname="TCLite.Framework.Internal.FailedResultTests.TestResultTests.SuiteResultBasicInfo_WriteXml" seed="1151856914" />
  </test-suite>
  <test-suite type="TestFixture" id="3471" name="InconclusiveResultTests" fullname="TCLite.Framework.Internal.InconclusiveResultTests" testcasecount="11">
    <test-case id="3472" name="TestResultIsInconclusive" fullname="TCLite.Framework.Internal.InconclusiveResultTests.TestResultIsInconclusive" seed="34230311" />
    <test-case id="3473" name="SuiteResultIsInconclusive" fullname="TCLite.Framework.Internal.InconclusiveResultTests.SuiteResultIsInconclusive" seed="1701425643" />
    <test-case id="3474" name="TestResultXmlNodeIsInconclusive" fullname="TCLite.Framework.Internal.InconclusiveResultTests.TestResultXmlNodeIsInconclusive" seed="1183055958" />
    <test-case id="3475" name="SuiteResultXmlNodeIsInconclusive" fullname="TCLite.Framework.Internal.InconclusiveResultTests.SuiteResultXmlNodeIsInconclusive" seed="1750779399" />
    <test-case id="3476" name="SuiteResultXmlNodeHasOneChildTest" fullname="TCLite.Framework.Internal.InconclusiveResultTests.SuiteResultXmlNodeHasOneChildTest" seed="1404391639" />
    <test-case id="3477" name="TestResultTests.TestResultBasicInfo" fullname="TCLite.Framework.Internal.InconclusiveResultTests.TestResultTests.TestResultBasicInfo" seed="1891677955" />
    <test-case id="3478" name="TestResultTests.SuiteResultBasicInfo" fullname="TCLite.Framework.Internal.InconclusiveResultTests.TestResultTests.SuiteResultBasicInfo" seed="1001710159" />
    <test-case id="3479" name="TestResultTests.TestResultBasicInfo_XmlNode" fullname="TCLite.Framework.Internal.InconclusiveResultTests.TestResultTests.TestResultBasicInfo_XmlNode" seed="656367969" />
    <test-case id="3480" name="TestResultTests.TestResultBasicInfo_WriteXml" fullname="TCLite.Framework.Internal.InconclusiveResultTests.TestResultTests.TestResultBasicInfo_WriteXml" seed="1603147717" />
    <test-case id="3481" name="TestResultTests.SuiteResultBasicInfo_XmlNode" fullname="TCLite.Framework.Internal.InconclusiveResultTests.TestResultTests.SuiteResultBasicInfo_XmlNode" seed="560445821" />
    <test-case id="3482" name="TestResultTests.SuiteResultBasicInfo_WriteXml" fullname="TCLite.Framework.Internal.InconclusiveResultTests.TestResultTests.SuiteResultBasicInfo_WriteXml" seed="775146968" />
  </test-suite>
  <test-suite type="TestFixture" id="3483" name="MixedResultTests" fullname="TCLite.Framework.Internal.MixedResultTests" testcasecount="9">
    <test-case id="3484" name="SuiteResultIsFailure" fullname="TCLite.Framework.Internal.MixedResultTests.SuiteResultIsFailure" seed="246885018" />
    <test-case id="3485" name="SuiteResultXmlNodeIsFailure" fullname="TCLite.Framework.Internal.MixedResultTests.SuiteResultXmlNodeIsFailure" seed="1776755868" />
    <test-case id="3486" name="SuiteResultXmlNodeHasFourChildTests" fullname="TCLite.Framework.Internal.MixedResultTests.SuiteResultXmlNodeHasFourChildTests" seed="2015898945" />
    <test-case id="3487" name="TestResultTests.TestResultBasicInfo" fullname="TCLite.Framework.Internal.MixedResultTests.TestResultTests.TestResultBasicInfo" seed="1671513997" />
    <test-case id="3488" name="TestResultTests.SuiteResultBasicInfo" fullname="TCLite.Framework.Internal.MixedResultTests.TestResultTests.SuiteResultBasicInfo" seed="285289897" />
    <test-case id="3489" name="TestResultTests.TestResultBasicInfo_XmlNode" fullname="TCLite.Framework.Internal.MixedResultTests.TestResultTests.TestResultBasicInfo_XmlNode" seed="2128411540" />
    <test-case id="3490" name="TestResultTests.TestResultBasicInfo_WriteXml" fullname="TCLite.Framework.Internal.MixedResultTests.TestResultTests.TestResultBasicInfo_WriteXml" seed="1723810003" />
    <test-case id="3491" name="TestResultTests.SuiteResultBasicInfo_XmlNode" fullname="TCLite.Framework.Internal.MixedResultTests.TestResultTests.SuiteResultBasicInfo_XmlNode" seed="29791967" />
    <test-case id="3492" name="TestResultTests.SuiteResultBasicInfo_WriteXml" fullname="TCLite.Framework.Internal.MixedResultTests.TestResultTests.SuiteResultBasicInfo_WriteXml" seed="948982550" />
  </test-suite>
  <test-suite type="TestFixture" id="3493" name="TestXmlTests" fullname="TCLite.Framework.Internal.TestXmlTests" testcasecount="6">
    <test-case id="3494" name="TestTypeTests" fullname="TCLite.Framework.Internal.TestXmlTests.TestTypeTests" seed="100475963" />
    <test-case id="3495" name="TestMethodToXml" fullname="TCLite.Framework.Internal.TestXmlTests.TestMethodToXml" seed="1422171419" />
    <test-case id="3496" name="TestFixtureToXml" fullname="TCLite.Framework.Internal.TestXmlTests.TestFixtureToXml" seed="560831172" />
    <test-case id="3497" name="TestFixtureToXml_Recursive" fullname="TCLite.Framework.Internal.TestXmlTests.TestFixtureToXml_Recursive" seed="683824136" />
    <test-case id="3498" name="TestSuiteToXml" fullname="TCLite.Framework.Internal.TestXmlTests.TestSuiteToXml" seed="1379920598" />
    <test-case id="3499" name="TestSuiteToXml_Recursive" fullname="TCLite.Framework.Internal.TestXmlTests.TestSuiteToXml_Recursive" seed="923977263" />
  </test-suite>
  <test-suite type="TestFixture" id="3500" name="TextMessageWriterTests" fullname="TCLite.Framework.Internal.TextMessageWriterTests" testcasecount="13">
    <test-case id="3501" name="ConnectorIsWrittenWithSurroundingSpaces" fullname="TCLite.Framework.Internal.TextMessageWriterTests.ConnectorIsWrittenWithSurroundingSpaces" seed="2043253914" />
    <test-case id="3502" name="PredicateIsWrittenWithTrailingSpace" fullname="TCLite.Framework.Internal.TextMessageWriterTests.PredicateIsWrittenWithTrailingSpace" seed="1177730692" />
    <test-case id="3503" name="IntegerIsWrittenAsIs" fullname="TCLite.Framework.Internal.TextMessageWriterTests.IntegerIsWrittenAsIs" seed="486907344" />
    <test-case id="3504" name="StringIsWrittenWithQuotes" fullname="TCLite.Framework.Internal.TextMessageWriterTests.StringIsWrittenWithQuotes" seed="703046662" />
    <test-case id="3505" name="FloatIsWrittenWithTrailingF" fullname="TCLite.Framework.Internal.TextMessageWriterTests.FloatIsWrittenWithTrailingF" seed="1945644740" />
    <test-case id="3506" name="FloatIsWrittenToNineDigits" fullname="TCLite.Framework.Internal.TextMessageWriterTests.FloatIsWrittenToNineDigits" seed="1197992600" />
    <test-case id="3507" name="DoubleIsWrittenWithTrailingD" fullname="TCLite.Framework.Internal.TextMessageWriterTests.DoubleIsWrittenWithTrailingD" seed="840402288" />
    <test-case id="3508" name="DoubleIsWrittenToSeventeenDigits" fullname="TCLite.Framework.Internal.TextMessageWriterTests.DoubleIsWrittenToSeventeenDigits" seed="1929900315" />
    <test-case id="3509" name="DecimalIsWrittenWithTrailingM" fullname="TCLite.Framework.Internal.TextMessageWriterTests.DecimalIsWrittenWithTrailingM" seed="1205143494" />
    <test-case id="3510" name="DecimalIsWrittenToTwentyNineDigits" fullname="TCLite.Framework.Internal.TextMessageWriterTests.DecimalIsWrittenToTwentyNineDigits" seed="1733779237" />
    <test-case id="3511" name="DateTimeTest" fullname="TCLite.Framework.Internal.TextMessageWriterTests.DateTimeTest" seed="1761311597" />
    <test-case id="3512" name="DisplayStringDifferences" fullname="TCLite.Framework.Internal.TextMessageWriterTests.DisplayStringDifferences" seed="257217834" />
    <test-case id="3513" name="DisplayStringDifferences_NoClipping" fullname="TCLite.Framework.Internal.TextMessageWriterTests.DisplayStringDifferences_NoClipping" seed="57873561" />
  </test-suite>
  <test-suite type="GenericFixture" id="3515" name="TypeParameterUsedWithTestMethod&lt;T&gt;" fullname="TCLite.Framework.Internal.TypeParameterUsedWithTestMethod&lt;T&gt;" testcasecount="2">
    <test-suite type="TestFixture" id="3516" name="TypeParameterUsedWithTestMethod&lt;Double&gt;" fullname="TCLite.Framework.Internal.TypeParameterUsedWithTestMethod&lt;Double&gt;" testcasecount="2">
      <properties>
        <property name="Category" value="Generics" />
      </properties>
      <test-suite type="ParameterizedMethod" id="3518" name="TestMyArgType" fullname="TCLite.Framework.Internal.TypeParameterUsedWithTestMethod`1[[System.Double, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].TestMyArgType" testcasecount="2">
        <test-case id="3519" name="TestMyArgType(5.0d)" fullname="TCLite.Framework.Internal.TypeParameterUsedWithTestMethod&lt;Double&gt;.TestMyArgType(5.0d)" seed="363417618" />
        <test-case id="3520" name="TestMyArgType(1.23d)" fullname="TCLite.Framework.Internal.TypeParameterUsedWithTestMethod&lt;Double&gt;.TestMyArgType(1.23d)" seed="501689807" />
      </test-suite>
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="3521" name="TestMethodTests" fullname="TCLite.Framework.Internal.Tests.TestMethodTests" testcasecount="2">
    <test-case id="3522" name="TestType" fullname="TCLite.Framework.Internal.Tests.TestMethodTests.TestType" seed="778133445" />
    <test-case id="3523" name="MethodName" fullname="TCLite.Framework.Internal.Tests.TestMethodTests.MethodName" seed="1730214307" />
  </test-suite>
  <test-suite type="TestFixture" id="3524" name="AndFilterTests" fullname="TCLite.Framework.Internal.Filters.AndFilterTests" testcasecount="19">
    <test-case id="3525" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.IsNotEmpty" seed="269279974" />
    <test-case id="3526" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.MatchTest" seed="1287964912" />
    <test-case id="3527" name="PassTest" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.PassTest" seed="1552522674" />
    <test-case id="3528" name="ExplicitMatchTest" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.ExplicitMatchTest" seed="1150970269" />
    <test-case id="3529" name="ExplicitMatchWithNotTest" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.ExplicitMatchWithNotTest" seed="1216335177" />
    <test-suite type="ParameterizedMethod" id="3531" name="CombineTest" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest" testcasecount="12">
      <test-case id="3532" name="CombineTest(System.Boolean[],False,IsExplicitMatch)" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest(System.Boolean[],False,IsExplicitMatch)" seed="618051590" />
      <test-case id="3533" name="CombineTest(System.Boolean[],False,IsExplicitMatch)" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest(System.Boolean[],False,IsExplicitMatch)" seed="872156529" />
      <test-case id="3534" name="CombineTest(System.Boolean[],False,IsExplicitMatch)" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest(System.Boolean[],False,IsExplicitMatch)" seed="1757779729" />
      <test-case id="3535" name="CombineTest(System.Boolean[],True,IsExplicitMatch)" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest(System.Boolean[],True,IsExplicitMatch)" seed="639476541" />
      <test-case id="3536" name="CombineTest(System.Boolean[],False,Match)" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest(System.Boolean[],False,Match)" seed="347113176" />
      <test-case id="3537" name="CombineTest(System.Boolean[],False,Match)" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest(System.Boolean[],False,Match)" seed="1760311186" />
      <test-case id="3538" name="CombineTest(System.Boolean[],False,Match)" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest(System.Boolean[],False,Match)" seed="1051380951" />
      <test-case id="3539" name="CombineTest(System.Boolean[],True,Match)" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest(System.Boolean[],True,Match)" seed="759542539" />
      <test-case id="3540" name="CombineTest(System.Boolean[],False,Pass)" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest(System.Boolean[],False,Pass)" seed="1140594471" />
      <test-case id="3541" name="CombineTest(System.Boolean[],False,Pass)" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest(System.Boolean[],False,Pass)" seed="499231822" />
      <test-case id="3542" name="CombineTest(System.Boolean[],False,Pass)" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest(System.Boolean[],False,Pass)" seed="370858801" />
      <test-case id="3543" name="CombineTest(System.Boolean[],True,Pass)" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.CombineTest(System.Boolean[],True,Pass)" seed="480414376" />
    </test-suite>
    <test-case id="3544" name="BuildFromXml" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.BuildFromXml" seed="1995907688" />
    <test-case id="3545" name="BuildFromXml_TopLevelDefaultsToAnd" fullname="TCLite.Framework.Internal.Filters.AndFilterTests.BuildFromXml_TopLevelDefaultsToAnd" seed="1971463114" />
  </test-suite>
  <test-suite type="ParameterizedFixture" id="3547" name="CategoryFilterTests" fullname="TCLite.Framework.Internal.Filters.CategoryFilterTests" testcasecount="8">
    <test-suite type="TestFixture" id="3548" name="CategoryFilterTests(&quot;Dummy&quot;,False)" fullname="TCLite.Framework.Internal.Filters.CategoryFilterTests(&quot;Dummy&quot;,False)" testcasecount="4">
      <test-case id="3549" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.CategoryFilterTests(&quot;Dummy&quot;,False).IsNotEmpty" seed="169460625" />
      <test-case id="3550" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.CategoryFilterTests(&quot;Dummy&quot;,False).MatchTest" seed="900101055" />
      <test-case id="3551" name="PassTest" fullname="TCLite.Framework.Internal.Filters.CategoryFilterTests(&quot;Dummy&quot;,False).PassTest" seed="762284728" />
      <test-case id="3552" name="ExplicitMatchTest" fullname="TCLite.Framework.Internal.Filters.CategoryFilterTests(&quot;Dummy&quot;,False).ExplicitMatchTest" seed="1724638015" />
    </test-suite>
    <test-suite type="TestFixture" id="3553" name="CategoryFilterTests(&quot;D.mmy&quot;,True)" fullname="TCLite.Framework.Internal.Filters.CategoryFilterTests(&quot;D.mmy&quot;,True)" testcasecount="4">
      <test-case id="3554" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.CategoryFilterTests(&quot;D.mmy&quot;,True).IsNotEmpty" seed="1553966377" />
      <test-case id="3555" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.CategoryFilterTests(&quot;D.mmy&quot;,True).MatchTest" seed="1994339200" />
      <test-case id="3556" name="PassTest" fullname="TCLite.Framework.Internal.Filters.CategoryFilterTests(&quot;D.mmy&quot;,True).PassTest" seed="810755451" />
      <test-case id="3557" name="ExplicitMatchTest" fullname="TCLite.Framework.Internal.Filters.CategoryFilterTests(&quot;D.mmy&quot;,True).ExplicitMatchTest" seed="2085218407" />
    </test-suite>
  </test-suite>
  <test-suite type="ParameterizedFixture" id="3559" name="ClassNameFilterTests" fullname="TCLite.Framework.Internal.Filters.ClassNameFilterTests" testcasecount="8">
    <test-suite type="TestFixture" id="3560" name="ClassNameFilterTests(&quot;TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture&quot;,False)" fullname="TCLite.Framework.Internal.Filters.ClassNameFilterTests(&quot;TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture&quot;,False)" testcasecount="4">
      <test-case id="3561" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.ClassNameFilterTests(&quot;TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture&quot;,False).IsNotEmpty" seed="671461947" />
      <test-case id="3562" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.ClassNameFilterTests(&quot;TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture&quot;,False).MatchTest" seed="1871193706" />
      <test-case id="3563" name="PassTest" fullname="TCLite.Framework.Internal.Filters.ClassNameFilterTests(&quot;TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture&quot;,False).PassTest" seed="1665936442" />
      <test-case id="3564" name="ExplicitMatchTest" fullname="TCLite.Framework.Internal.Filters.ClassNameFilterTests(&quot;TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture&quot;,False).ExplicitMatchTest" seed="1813857996" />
    </test-suite>
    <test-suite type="TestFixture" id="3565" name="ClassNameFilterTests(&quot;Dummy&quot;,True)" fullname="TCLite.Framework.Internal.Filters.ClassNameFilterTests(&quot;Dummy&quot;,True)" testcasecount="4">
      <test-case id="3566" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.ClassNameFilterTests(&quot;Dummy&quot;,True).IsNotEmpty" seed="447292743" />
      <test-case id="3567" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.ClassNameFilterTests(&quot;Dummy&quot;,True).MatchTest" seed="1469826165" />
      <test-case id="3568" name="PassTest" fullname="TCLite.Framework.Internal.Filters.ClassNameFilterTests(&quot;Dummy&quot;,True).PassTest" seed="1839440759" />
      <test-case id="3569" name="ExplicitMatchTest" fullname="TCLite.Framework.Internal.Filters.ClassNameFilterTests(&quot;Dummy&quot;,True).ExplicitMatchTest" seed="291551198" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="3570" name="EmptyFilterTests" fullname="TCLite.Framework.Internal.Filters.EmptyFilterTests" testcasecount="7">
    <test-case id="3571" name="IsEmpty" fullname="TCLite.Framework.Internal.Filters.EmptyFilterTests.IsEmpty" seed="1543342871" />
    <test-suite type="ParameterizedMethod" id="3573" name="BuildFromXml" fullname="TCLite.Framework.Internal.Filters.EmptyFilterTests.BuildFromXml" testcasecount="3">
      <test-case id="3574" name="BuildFromXml(null)" fullname="TCLite.Framework.Internal.Filters.EmptyFilterTests.BuildFromXml(null)" seed="1974881571" />
      <test-case id="3575" name="BuildFromXml(&quot;&quot;)" fullname="TCLite.Framework.Internal.Filters.EmptyFilterTests.BuildFromXml(&quot;&quot;)" seed="1920490641" />
      <test-case id="3576" name="BuildFromXml(&quot;&lt;filter/&gt;&quot;)" fullname="TCLite.Framework.Internal.Filters.EmptyFilterTests.BuildFromXml(&quot;&lt;filter/&gt;&quot;)" seed="826918737" />
    </test-suite>
    <test-case id="3577" name="MatchesAnything" fullname="TCLite.Framework.Internal.Filters.EmptyFilterTests.MatchesAnything" seed="559679102" />
    <test-case id="3578" name="PassesAnything" fullname="TCLite.Framework.Internal.Filters.EmptyFilterTests.PassesAnything" seed="1762234462" />
    <test-case id="3579" name="MatchesNothingExplicitly" fullname="TCLite.Framework.Internal.Filters.EmptyFilterTests.MatchesNothingExplicitly" seed="1092750580" />
  </test-suite>
  <test-suite type="TestFixture" id="3580" name="IdFilterTests" fullname="TCLite.Framework.Internal.Filters.IdFilterTests" testcasecount="4">
    <test-case id="3581" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.IdFilterTests.IsNotEmpty" seed="1306168199" />
    <test-case id="3582" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.IdFilterTests.MatchTest" seed="850879424" />
    <test-case id="3583" name="PassTest" fullname="TCLite.Framework.Internal.Filters.IdFilterTests.PassTest" seed="1227574749" />
    <test-case id="3584" name="ExplicitMatchTest" fullname="TCLite.Framework.Internal.Filters.IdFilterTests.ExplicitMatchTest" seed="878519364" />
  </test-suite>
  <test-suite type="ParameterizedFixture" id="3586" name="MethodNameFilterTests" fullname="TCLite.Framework.Internal.Filters.MethodNameFilterTests" testcasecount="6">
    <test-suite type="TestFixture" id="3587" name="MethodNameFilterTests(&quot;Test&quot;,False)" fullname="TCLite.Framework.Internal.Filters.MethodNameFilterTests(&quot;Test&quot;,False)" testcasecount="3">
      <test-case id="3588" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.MethodNameFilterTests(&quot;Test&quot;,False).IsNotEmpty" seed="445600955" />
      <test-case id="3589" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.MethodNameFilterTests(&quot;Test&quot;,False).MatchTest" seed="593184766" />
      <test-case id="3590" name="PassTest" fullname="TCLite.Framework.Internal.Filters.MethodNameFilterTests(&quot;Test&quot;,False).PassTest" seed="1262079775" />
    </test-suite>
    <test-suite type="TestFixture" id="3591" name="MethodNameFilterTests(&quot;T.st&quot;,True)" fullname="TCLite.Framework.Internal.Filters.MethodNameFilterTests(&quot;T.st&quot;,True)" testcasecount="3">
      <test-case id="3592" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.MethodNameFilterTests(&quot;T.st&quot;,True).IsNotEmpty" seed="2033842680" />
      <test-case id="3593" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.MethodNameFilterTests(&quot;T.st&quot;,True).MatchTest" seed="1724942832" />
      <test-case id="3594" name="PassTest" fullname="TCLite.Framework.Internal.Filters.MethodNameFilterTests(&quot;T.st&quot;,True).PassTest" seed="514993577" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="3595" name="MultipleFilterTests" fullname="TCLite.Framework.Internal.Filters.MultipleFilterTests" testcasecount="5">
    <test-case id="3596" name="TestNestedAndFilters" fullname="TCLite.Framework.Internal.Filters.MultipleFilterTests.TestNestedAndFilters" seed="677710340" />
    <test-case id="3597" name="TestNestedNotCategoryFilters" fullname="TCLite.Framework.Internal.Filters.MultipleFilterTests.TestNestedNotCategoryFilters" seed="608672820" />
    <test-case id="3598" name="TestNestedAndOrFilters" fullname="TCLite.Framework.Internal.Filters.MultipleFilterTests.TestNestedAndOrFilters" seed="830113252" />
    <test-case id="3599" name="TestNestedOrNotFilters" fullname="TCLite.Framework.Internal.Filters.MultipleFilterTests.TestNestedOrNotFilters" seed="1654478893" />
    <test-case id="3600" name="TestLotsOfNestedOrFilters" fullname="TCLite.Framework.Internal.Filters.MultipleFilterTests.TestLotsOfNestedOrFilters" seed="1710810544" />
  </test-suite>
  <test-suite type="ParameterizedFixture" id="3602" name="NamespaceFilterTests" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests" testcasecount="9">
    <test-suite type="TestFixture" id="3603" name="NamespaceFilterTests(&quot;TCLite.Framework.Internal.Filters&quot;,False,True)" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests(&quot;TCLite.Framework.Internal.Filters&quot;,False,True)" testcasecount="3">
      <test-case id="3604" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests(&quot;TCLite.Framework.Internal.Filters&quot;,False,True).IsNotEmpty" seed="2146039944" />
      <test-case id="3605" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests(&quot;TCLite.Framework.Internal.Filters&quot;,False,True).MatchTest" seed="1304114716" />
      <test-case id="3606" name="PassTest" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests(&quot;TCLite.Framework.Internal.Filters&quot;,False,True).PassTest" seed="405579726" />
    </test-suite>
    <test-suite type="TestFixture" id="3607" name="NamespaceFilterTests(&quot;TCLite.Framework.*&quot;,True,True)" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests(&quot;TCLite.Framework.*&quot;,True,True)" testcasecount="3">
      <test-case id="3608" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests(&quot;TCLite.Framework.*&quot;,True,True).IsNotEmpty" seed="680316830" />
      <test-case id="3609" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests(&quot;TCLite.Framework.*&quot;,True,True).MatchTest" seed="200694582" />
      <test-case id="3610" name="PassTest" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests(&quot;TCLite.Framework.*&quot;,True,True).PassTest" seed="2034069670" />
    </test-suite>
    <test-suite type="TestFixture" id="3611" name="NamespaceFilterTests(&quot;TCLite.Framework&quot;,False,False)" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests(&quot;TCLite.Framework&quot;,False,False)" testcasecount="3">
      <test-case id="3612" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests(&quot;TCLite.Framework&quot;,False,False).IsNotEmpty" seed="1121023746" />
      <test-case id="3613" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests(&quot;TCLite.Framework&quot;,False,False).MatchTest" seed="680738827" />
      <test-case id="3614" name="PassTest" fullname="TCLite.Framework.Internal.Filters.NamespaceFilterTests(&quot;TCLite.Framework&quot;,False,False).PassTest" seed="1313018443" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="3615" name="NotFilterTests" fullname="TCLite.Framework.Internal.Filters.NotFilterTests" testcasecount="5">
    <test-case id="3616" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.NotFilterTests.IsNotEmpty" seed="1729038433" />
    <test-case id="3617" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.NotFilterTests.MatchTest" seed="1067585427" />
    <test-case id="3618" name="PassTest" fullname="TCLite.Framework.Internal.Filters.NotFilterTests.PassTest" seed="849043273" />
    <test-case id="3619" name="ExplicitMatchTest" fullname="TCLite.Framework.Internal.Filters.NotFilterTests.ExplicitMatchTest" seed="1103372598" />
    <test-case id="3620" name="BuildFromXml" fullname="TCLite.Framework.Internal.Filters.NotFilterTests.BuildFromXml" seed="543460877" />
  </test-suite>
  <test-suite type="TestFixture" id="3621" name="OrFilterTests" fullname="TCLite.Framework.Internal.Filters.OrFilterTests" testcasecount="17">
    <test-case id="3622" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.IsNotEmpty" seed="707407382" />
    <test-case id="3623" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.MatchTest" seed="1168988951" />
    <test-case id="3624" name="PassTest" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.PassTest" seed="1411784012" />
    <test-case id="3625" name="ExplicitMatchTest" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.ExplicitMatchTest" seed="554709810" />
    <test-suite type="ParameterizedMethod" id="3627" name="CombineTest" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest" testcasecount="12">
      <test-case id="3628" name="CombineTest(System.Boolean[],False,IsExplicitMatch)" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest(System.Boolean[],False,IsExplicitMatch)" seed="1954834122" />
      <test-case id="3629" name="CombineTest(System.Boolean[],True,IsExplicitMatch)" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest(System.Boolean[],True,IsExplicitMatch)" seed="1603600176" />
      <test-case id="3630" name="CombineTest(System.Boolean[],True,IsExplicitMatch)" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest(System.Boolean[],True,IsExplicitMatch)" seed="873758591" />
      <test-case id="3631" name="CombineTest(System.Boolean[],True,IsExplicitMatch)" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest(System.Boolean[],True,IsExplicitMatch)" seed="326391628" />
      <test-case id="3632" name="CombineTest(System.Boolean[],False,Match)" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest(System.Boolean[],False,Match)" seed="1115819836" />
      <test-case id="3633" name="CombineTest(System.Boolean[],True,Match)" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest(System.Boolean[],True,Match)" seed="365154496" />
      <test-case id="3634" name="CombineTest(System.Boolean[],True,Match)" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest(System.Boolean[],True,Match)" seed="1492033641" />
      <test-case id="3635" name="CombineTest(System.Boolean[],True,Match)" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest(System.Boolean[],True,Match)" seed="1556865819" />
      <test-case id="3636" name="CombineTest(System.Boolean[],False,Pass)" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest(System.Boolean[],False,Pass)" seed="1984834673" />
      <test-case id="3637" name="CombineTest(System.Boolean[],True,Pass)" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest(System.Boolean[],True,Pass)" seed="2088477257" />
      <test-case id="3638" name="CombineTest(System.Boolean[],True,Pass)" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest(System.Boolean[],True,Pass)" seed="1298864419" />
      <test-case id="3639" name="CombineTest(System.Boolean[],True,Pass)" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.CombineTest(System.Boolean[],True,Pass)" seed="1917066050" />
    </test-suite>
    <test-case id="3640" name="BuildFromXml" fullname="TCLite.Framework.Internal.Filters.OrFilterTests.BuildFromXml" seed="861153345" />
  </test-suite>
  <test-suite type="ParameterizedFixture" id="3642" name="PropertyFilterTests" fullname="TCLite.Framework.Internal.Filters.PropertyFilterTests" testcasecount="8">
    <test-suite type="TestFixture" id="3643" name="PropertyFilterTests(&quot;Priority&quot;,&quot;High&quot;,False)" fullname="TCLite.Framework.Internal.Filters.PropertyFilterTests(&quot;Priority&quot;,&quot;High&quot;,False)" testcasecount="4">
      <test-case id="3644" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.PropertyFilterTests(&quot;Priority&quot;,&quot;High&quot;,False).IsNotEmpty" seed="1009327507" />
      <test-case id="3645" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.PropertyFilterTests(&quot;Priority&quot;,&quot;High&quot;,False).MatchTest" seed="784555952" />
      <test-case id="3646" name="PassTest" fullname="TCLite.Framework.Internal.Filters.PropertyFilterTests(&quot;Priority&quot;,&quot;High&quot;,False).PassTest" seed="1980015974" />
      <test-case id="3647" name="ExplicitMatchTest" fullname="TCLite.Framework.Internal.Filters.PropertyFilterTests(&quot;Priority&quot;,&quot;High&quot;,False).ExplicitMatchTest" seed="1976325274" />
    </test-suite>
    <test-suite type="TestFixture" id="3648" name="PropertyFilterTests(&quot;Author&quot;,&quot;Charlie&quot;,True)" fullname="TCLite.Framework.Internal.Filters.PropertyFilterTests(&quot;Author&quot;,&quot;Charlie&quot;,True)" testcasecount="4">
      <test-case id="3649" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.PropertyFilterTests(&quot;Author&quot;,&quot;Charlie&quot;,True).IsNotEmpty" seed="616375925" />
      <test-case id="3650" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.PropertyFilterTests(&quot;Author&quot;,&quot;Charlie&quot;,True).MatchTest" seed="421339011" />
      <test-case id="3651" name="PassTest" fullname="TCLite.Framework.Internal.Filters.PropertyFilterTests(&quot;Author&quot;,&quot;Charlie&quot;,True).PassTest" seed="2026845919" />
      <test-case id="3652" name="ExplicitMatchTest" fullname="TCLite.Framework.Internal.Filters.PropertyFilterTests(&quot;Author&quot;,&quot;Charlie&quot;,True).ExplicitMatchTest" seed="1561539880" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="3653" name="TestFilterXmlTests" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests" testcasecount="26">
    <test-case id="3654" name="ClassNameFilter_FromXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.ClassNameFilter_FromXml" seed="1206164557" />
    <test-case id="3655" name="ClassNameFilter_ToXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.ClassNameFilter_ToXml" seed="185144453" />
    <test-case id="3656" name="ClassNameFilter_FromXml_Regex" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.ClassNameFilter_FromXml_Regex" seed="170140597" />
    <test-case id="3657" name="ClassNameFilter_ToXml_Regex" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.ClassNameFilter_ToXml_Regex" seed="2062039953" />
    <test-case id="3658" name="MethodNameFilter_FromXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.MethodNameFilter_FromXml" seed="1296964578" />
    <test-case id="3659" name="MethodNameFilter_ToXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.MethodNameFilter_ToXml" seed="1525499175" />
    <test-case id="3660" name="BuildMethodNameFilter_FromXml_Regex" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.BuildMethodNameFilter_FromXml_Regex" seed="1891625140" />
    <test-case id="3661" name="MethodNameFilter_ToXml_Regex" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.MethodNameFilter_ToXml_Regex" seed="158707177" />
    <test-case id="3662" name="FullNameFilter_FromXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.FullNameFilter_FromXml" seed="1490381803" />
    <test-case id="3663" name="FullNameFilter_ToXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.FullNameFilter_ToXml" seed="1017535450" />
    <test-case id="3664" name="FullNameFilter_FromXml_Regex" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.FullNameFilter_FromXml_Regex" seed="1493488273" />
    <test-case id="3665" name="FullNameFilter_ToXml_Regex" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.FullNameFilter_ToXml_Regex" seed="1413409975" />
    <test-case id="3666" name="CategoryFilter_FromXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.CategoryFilter_FromXml" seed="53963010" />
    <test-case id="3667" name="CategoryFilterWithSpecialCharacters_FromXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.CategoryFilterWithSpecialCharacters_FromXml" seed="1022762777" />
    <test-case id="3668" name="CategoryFilter_ToXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.CategoryFilter_ToXml" seed="50878717" />
    <test-case id="3669" name="CategoryFilterWithSpecialCharacters_ToXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.CategoryFilterWithSpecialCharacters_ToXml" seed="837051953" />
    <test-case id="3670" name="CategoryFilter_FromXml_Regex" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.CategoryFilter_FromXml_Regex" seed="1819648316" />
    <test-case id="3671" name="CategoryFilterWithSpecialCharacters_FromXml_Regex" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.CategoryFilterWithSpecialCharacters_FromXml_Regex" seed="188294880" />
    <test-case id="3672" name="CategoryFilter_ToXml_Regex" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.CategoryFilter_ToXml_Regex" seed="40425230" />
    <test-case id="3673" name="CategoryFilterWithSpecialCharacters_ToXml_Regex" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.CategoryFilterWithSpecialCharacters_ToXml_Regex" seed="1335766836" />
    <test-case id="3674" name="PropertyFilter_FromXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.PropertyFilter_FromXml" seed="791312410" />
    <test-case id="3675" name="PropertyFilter_ToXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.PropertyFilter_ToXml" seed="49234997" />
    <test-case id="3676" name="PropertyFilter_FromXml_Regex" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.PropertyFilter_FromXml_Regex" seed="1180030136" />
    <test-case id="3677" name="PropertyFilter_ToXml_Regex" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.PropertyFilter_ToXml_Regex" seed="1529358055" />
    <test-case id="3678" name="IdFilter_FromXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.IdFilter_FromXml" seed="1543436040" />
    <test-case id="3679" name="IdFilter_ToXml" fullname="TCLite.Framework.Internal.Filters.TestFilterXmlTests.IdFilter_ToXml" seed="867885088" />
  </test-suite>
  <test-suite type="ParameterizedFixture" id="3681" name="TestNameFilterTests" fullname="TCLite.Framework.Internal.Filters.TestNameFilterTests" testcasecount="6">
    <test-suite type="TestFixture" id="3682" name="TestNameFilterTests(&quot;TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture&quot;,False)" fullname="TCLite.Framework.Internal.Filters.TestNameFilterTests(&quot;TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture&quot;,False)" testcasecount="3">
      <test-case id="3683" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.TestNameFilterTests(&quot;TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture&quot;,False).IsNotEmpty" seed="58257920" />
      <test-case id="3684" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.TestNameFilterTests(&quot;TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture&quot;,False).MatchTest" seed="64487321" />
      <test-case id="3685" name="PassTest" fullname="TCLite.Framework.Internal.Filters.TestNameFilterTests(&quot;TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture&quot;,False).PassTest" seed="1270840271" />
    </test-suite>
    <test-suite type="TestFixture" id="3686" name="TestNameFilterTests(&quot;Dummy&quot;,True)" fullname="TCLite.Framework.Internal.Filters.TestNameFilterTests(&quot;Dummy&quot;,True)" testcasecount="3">
      <test-case id="3687" name="IsNotEmpty" fullname="TCLite.Framework.Internal.Filters.TestNameFilterTests(&quot;Dummy&quot;,True).IsNotEmpty" seed="714619250" />
      <test-case id="3688" name="MatchTest" fullname="TCLite.Framework.Internal.Filters.TestNameFilterTests(&quot;Dummy&quot;,True).MatchTest" seed="91031457" />
      <test-case id="3689" name="PassTest" fullname="TCLite.Framework.Internal.Filters.TestNameFilterTests(&quot;Dummy&quot;,True).PassTest" seed="747649940" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="3690" name="TestMessageWriterTests+ExpectedValueTests" fullname="NUnitLite.Tests.TestMessageWriterTests+ExpectedValueTests" testcasecount="8">
    <test-case id="3691" name="ValueTests.IntegerIsWrittenAsIs" fullname="NUnitLite.Tests.TestMessageWriterTests+ExpectedValueTests.ValueTests.IntegerIsWrittenAsIs" seed="1532421740" />
    <test-case id="3692" name="ValueTests.StringIsWrittenWithQuotes" fullname="NUnitLite.Tests.TestMessageWriterTests+ExpectedValueTests.ValueTests.StringIsWrittenWithQuotes" seed="1140653577" />
    <test-case id="3693" name="ValueTests.FloatIsWrittenWithTrailingF" fullname="NUnitLite.Tests.TestMessageWriterTests+ExpectedValueTests.ValueTests.FloatIsWrittenWithTrailingF" seed="748669565" />
    <test-case id="3694" name="ValueTests.FloatIsWrittenToNineDigits" fullname="NUnitLite.Tests.TestMessageWriterTests+ExpectedValueTests.ValueTests.FloatIsWrittenToNineDigits" seed="1418455723" />
    <test-case id="3695" name="ValueTests.DoubleIsWrittenWithTrailingD" fullname="NUnitLite.Tests.TestMessageWriterTests+ExpectedValueTests.ValueTests.DoubleIsWrittenWithTrailingD" seed="703617994" />
    <test-case id="3696" name="ValueTests.DoubleIsWrittenToSeventeenDigits" fullname="NUnitLite.Tests.TestMessageWriterTests+ExpectedValueTests.ValueTests.DoubleIsWrittenToSeventeenDigits" seed="411835322" />
    <test-case id="3697" name="ValueTests.DecimalIsWrittenWithTrailingM" fullname="NUnitLite.Tests.TestMessageWriterTests+ExpectedValueTests.ValueTests.DecimalIsWrittenWithTrailingM" seed="1966338905" />
    <test-case id="3698" name="ValueTests.DecimalIsWrittenToTwentyNineDigits" fullname="NUnitLite.Tests.TestMessageWriterTests+ExpectedValueTests.ValueTests.DecimalIsWrittenToTwentyNineDigits" seed="987138968" />
  </test-suite>
  <test-suite type="TestFixture" id="3699" name="TestMessageWriterTests+ActualValueTests" fullname="NUnitLite.Tests.TestMessageWriterTests+ActualValueTests" testcasecount="8">
    <test-case id="3700" name="ValueTests.IntegerIsWrittenAsIs" fullname="NUnitLite.Tests.TestMessageWriterTests+ActualValueTests.ValueTests.IntegerIsWrittenAsIs" seed="1747892148" />
    <test-case id="3701" name="ValueTests.StringIsWrittenWithQuotes" fullname="NUnitLite.Tests.TestMessageWriterTests+ActualValueTests.ValueTests.StringIsWrittenWithQuotes" seed="1398158642" />
    <test-case id="3702" name="ValueTests.FloatIsWrittenWithTrailingF" fullname="NUnitLite.Tests.TestMessageWriterTests+ActualValueTests.ValueTests.FloatIsWrittenWithTrailingF" seed="494452870" />
    <test-case id="3703" name="ValueTests.FloatIsWrittenToNineDigits" fullname="NUnitLite.Tests.TestMessageWriterTests+ActualValueTests.ValueTests.FloatIsWrittenToNineDigits" seed="1070941807" />
    <test-case id="3704" name="ValueTests.DoubleIsWrittenWithTrailingD" fullname="NUnitLite.Tests.TestMessageWriterTests+ActualValueTests.ValueTests.DoubleIsWrittenWithTrailingD" seed="1952859793" />
    <test-case id="3705" name="ValueTests.DoubleIsWrittenToSeventeenDigits" fullname="NUnitLite.Tests.TestMessageWriterTests+ActualValueTests.ValueTests.DoubleIsWrittenToSeventeenDigits" seed="503656075" />
    <test-case id="3706" name="ValueTests.DecimalIsWrittenWithTrailingM" fullname="NUnitLite.Tests.TestMessageWriterTests+ActualValueTests.ValueTests.DecimalIsWrittenWithTrailingM" seed="807190335" />
    <test-case id="3707" name="ValueTests.DecimalIsWrittenToTwentyNineDigits" fullname="NUnitLite.Tests.TestMessageWriterTests+ActualValueTests.ValueTests.DecimalIsWrittenToTwentyNineDigits" seed="2134048377" />
  </test-suite>
  <test-suite type="TestFixture" id="3708" name="TheoryTests+SqrtTests" fullname="TCLite.Framework.Tests.TheoryTests+SqrtTests" testcasecount="5">
    <test-suite type="Theory" id="3710" name="SqrtTimesItselfGivesOriginal" fullname="TCLite.Framework.Tests.TheoryTests+SqrtTests.SqrtTimesItselfGivesOriginal" testcasecount="5">
      <test-case id="3711" name="SqrtTimesItselfGivesOriginal(0.0d)" fullname="TCLite.Framework.Tests.TheoryTests+SqrtTests.SqrtTimesItselfGivesOriginal(0.0d)" seed="733677235" />
      <test-case id="3712" name="SqrtTimesItselfGivesOriginal(1.0d)" fullname="TCLite.Framework.Tests.TheoryTests+SqrtTests.SqrtTimesItselfGivesOriginal(1.0d)" seed="1142964021" />
      <test-case id="3713" name="SqrtTimesItselfGivesOriginal(-1.0d)" fullname="TCLite.Framework.Tests.TheoryTests+SqrtTests.SqrtTimesItselfGivesOriginal(-1.0d)" seed="156676958" />
      <test-case id="3714" name="SqrtTimesItselfGivesOriginal(double.MaxValue)" fullname="TCLite.Framework.Tests.TheoryTests+SqrtTests.SqrtTimesItselfGivesOriginal(double.MaxValue)" seed="428081045" />
      <test-case id="3715" name="SqrtTimesItselfGivesOriginal(double.PositiveInfinity)" fullname="TCLite.Framework.Tests.TheoryTests+SqrtTests.SqrtTimesItselfGivesOriginal(double.PositiveInfinity)" seed="380913781" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="3716" name="PairwiseTest+LiveTest" fullname="TCLite.Framework.Attributes.PairwiseTest+LiveTest" testcasecount="7">
    <test-suite type="ParameterizedMethod" id="3718" name="Test" fullname="TCLite.Framework.Attributes.PairwiseTest+LiveTest.Test" testcasecount="7">
      <properties>
        <property name="_JOINTYPE" value="Pairwise" />
      </properties>
      <test-case id="3719" name="Test(&quot;a&quot;,&quot;-&quot;,&quot;x&quot;)" fullname="TCLite.Framework.Attributes.PairwiseTest+LiveTest.Test(&quot;a&quot;,&quot;-&quot;,&quot;x&quot;)" seed="691079083" />
      <test-case id="3720" name="Test(&quot;b&quot;,&quot;+&quot;,&quot;y&quot;)" fullname="TCLite.Framework.Attributes.PairwiseTest+LiveTest.Test(&quot;b&quot;,&quot;+&quot;,&quot;y&quot;)" seed="770227470" />
      <test-case id="3721" name="Test(&quot;c&quot;,&quot;+&quot;,&quot;x&quot;)" fullname="TCLite.Framework.Attributes.PairwiseTest+LiveTest.Test(&quot;c&quot;,&quot;+&quot;,&quot;x&quot;)" seed="1156929560" />
      <test-case id="3722" name="Test(&quot;b&quot;,&quot;-&quot;,&quot;x&quot;)" fullname="TCLite.Framework.Attributes.PairwiseTest+LiveTest.Test(&quot;b&quot;,&quot;-&quot;,&quot;x&quot;)" seed="1152597964" />
      <test-case id="3723" name="Test(&quot;a&quot;,&quot;-&quot;,&quot;y&quot;)" fullname="TCLite.Framework.Attributes.PairwiseTest+LiveTest.Test(&quot;a&quot;,&quot;-&quot;,&quot;y&quot;)" seed="788266189" />
      <test-case id="3724" name="Test(&quot;c&quot;,&quot;-&quot;,&quot;y&quot;)" fullname="TCLite.Framework.Attributes.PairwiseTest+LiveTest.Test(&quot;c&quot;,&quot;-&quot;,&quot;y&quot;)" seed="518603913" />
      <test-case id="3725" name="Test(&quot;a&quot;,&quot;+&quot;,&quot;x&quot;)" fullname="TCLite.Framework.Attributes.PairwiseTest+LiveTest.Test(&quot;a&quot;,&quot;+&quot;,&quot;x&quot;)" seed="429079490" />
    </test-suite>
  </test-suite>
  <test-suite type="TestFixture" id="3726" name="SetCultureAttributeTests+NestedBehavior" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests+NestedBehavior" testcasecount="2">
    <properties>
      <property name="SetCulture" value="ru-RU" />
      <property name="SetUICulture" value="ru-RU" />
    </properties>
    <test-case id="3727" name="InheritedRussian" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests+NestedBehavior.InheritedRussian" seed="1467241255" />
    <test-case id="3728" name="InheritedRussianWithUIFrench" fullname="TCLite.Framework.Attributes.SetCultureAttributeTests+NestedBehavior.InheritedRussianWithUIFrench" seed="1827137819">
      <properties>
        <property name="SetUICulture" value="fr-FR" />
      </properties>
    </test-case>
  </test-suite>
  <test-suite type="TestFixture" id="3729" name="CultureSettingAndDetectionTests+NestedFixture" fullname="TCLite.Framework.Internal.CultureSettingAndDetectionTests+NestedFixture" testcasecount="1">
    <properties>
      <property name="SetCulture" value="en-GB" />
    </properties>
    <test-case id="3730" name="CanSetCultureOnFixture" fullname="TCLite.Framework.Internal.CultureSettingAndDetectionTests+NestedFixture.CanSetCultureOnFixture" seed="1035350553" />
  </test-suite>
  <test-suite type="TestFixture" id="3731" name="SetUpTest+SetupCallDerived" fullname="TCLite.Framework.Internal.SetUpTest+SetupCallDerived" testcasecount="1">
    <test-case id="3732" name="AssertCount" fullname="TCLite.Framework.Internal.SetUpTest+SetupCallDerived.AssertCount" seed="775762553" />
  </test-suite>
  <test-suite type="TestFixture" id="3733" name="TestFilterTests+DummyFixture" fullname="TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture" testcasecount="1">
    <properties>
      <property name="Category" value="Dummy" />
      <property name="Priority" value="High" />
      <property name="Author" value="Charlie Poole" />
    </properties>
    <test-case id="3734" name="Test" fullname="TCLite.Framework.Internal.Filters.TestFilterTests+DummyFixture.Test" seed="926503993" />
  </test-suite>
  <test-suite type="TestFixture" id="3735" name="TestFilterTests+SpecialCharactersFixture" fullname="TCLite.Framework.Internal.Filters.TestFilterTests+SpecialCharactersFixture" testcasecount="1">
    <properties>
      <property name="Category" value="Special,Character-Fixture+!" />
    </properties>
    <test-case id="3736" name="Test" fullname="TCLite.Framework.Internal.Filters.TestFilterTests+SpecialCharactersFixture.Test" seed="745838333" />
  </test-suite>
  <test-suite type="TestFixture" id="3737" name="TestFilterTests+AnotherFixture" fullname="TCLite.Framework.Internal.Filters.TestFilterTests+AnotherFixture" testcasecount="1">
    <properties>
      <property name="Category" value="Another" />
      <property name="Priority" value="Low" />
      <property name="Author" value="Fred Smith" />
    </properties>
    <test-case id="3738" name="Test" fullname="TCLite.Framework.Internal.Filters.TestFilterTests+AnotherFixture.Test" seed="2028471882" />
  </test-suite>
  <test-suite type="TestFixture" id="3739" name="TestFilterTests+FixtureWithMultipleTests" fullname="TCLite.Framework.Internal.Filters.TestFilterTests+FixtureWithMultipleTests" testcasecount="2">
    <test-case id="3740" name="Test1" fullname="TCLite.Framework.Internal.Filters.TestFilterTests+FixtureWithMultipleTests.Test1" seed="1060793080" />
    <test-case id="3741" name="Test2" fullname="TCLite.Framework.Internal.Filters.TestFilterTests+FixtureWithMultipleTests.Test2" seed="274093212">
      <properties>
        <property name="Category" value="Dummy" />
      </properties>
    </test-case>
  </test-suite>
  <test-suite type="TestFixture" id="3742" name="TestFilterTests+NestingFixture+NestedFixture" fullname="TCLite.Framework.Internal.Filters.TestFilterTests+NestingFixture+NestedFixture" testcasecount="1">
    <test-case id="3743" name="Test" fullname="TCLite.Framework.Internal.Filters.TestFilterTests+NestingFixture+NestedFixture.Test" seed="779906641" />
  </test-suite>
</test-suite>