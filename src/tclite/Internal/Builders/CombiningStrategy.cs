// ***********************************************************************
// Copyright (c) Charlie Poole and TestCentric contributors.
// Licensed under the MIT License. See LICENSE.txt in root directory.
// ***********************************************************************

using System;
using System.Collections;
using System.Reflection;
using TCLite.Framework.Internal;
using TCLite.Framework.Extensibility;
using TCLite.Framework.Api;

namespace TCLite.Framework.Builders
{
    /// <summary>
    /// CombiningStrategy is the abstract base for classes that
    /// know how to combine values provided for individual test
    /// parameters to create a set of test cases.
    /// </summary>
    public abstract class CombiningStrategy
    {
        private IEnumerable[] sources;
        private IEnumerator[] enumerators;

        /// <summary>
        /// Initializes a new instance of the <see cref="CombiningStrategy"/> 
        /// class using a set of parameter sources.
        /// </summary>
        /// <param name="sources">The sources.</param>
        public CombiningStrategy(IEnumerable[] sources)
        {
            this.sources = sources;
        }

        /// <summary>
        /// Gets the sources used by this strategy.
        /// </summary>
        /// <value>The sources.</value>
        public IEnumerable[] Sources
        {
            get { return sources; }
        }

        /// <summary>
        /// Gets the enumerators for the sources.
        /// </summary>
        /// <value>The enumerators.</value>
        public IEnumerator[] Enumerators
        {
            get
            {
                if (enumerators == null)
                {
                    enumerators = new IEnumerator[Sources.Length];
                    for (int i = 0; i < Sources.Length; i++)
                        enumerators[i] = Sources[i].GetEnumerator();
                }

                return enumerators;
            }
        }

        /// <summary>
        /// Gets the test cases generated by the CombiningStrategy.
        /// </summary>
        /// <returns>The test cases.</returns>
        public abstract System.Collections.Generic.IEnumerable<ITestCaseData> GetTestCases();
    }
}
